/*
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/spanner/v1/location.proto

// Protobuf Java Version: 3.25.7
package com.google.spanner.v1;

/**
 *
 *
 * <pre>
 * A `KeyRecipe` provides the metadata required to translate reads, mutations,
 * and queries into a byte array in "sortable string format" (ssformat)that can
 * be used with `Range`s to route requests. Note that the client *must* tolerate
 * `KeyRecipe`s that appear to be invalid, since the `KeyRecipe` format may
 * change over time. Requests with invalid `KeyRecipe`s should be routed to a
 * default server.
 * </pre>
 *
 * Protobuf type {@code google.spanner.v1.KeyRecipe}
 */
public final class KeyRecipe extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.spanner.v1.KeyRecipe)
    KeyRecipeOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use KeyRecipe.newBuilder() to construct.
  private KeyRecipe(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private KeyRecipe() {
    part_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new KeyRecipe();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.spanner.v1.LocationProto
        .internal_static_google_spanner_v1_KeyRecipe_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.spanner.v1.LocationProto
        .internal_static_google_spanner_v1_KeyRecipe_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.spanner.v1.KeyRecipe.class, com.google.spanner.v1.KeyRecipe.Builder.class);
  }

  public interface PartOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.spanner.v1.KeyRecipe.Part)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * If non-zero, `tag` is the only field present in this `Part`. The part
     * is encoded by appending `tag` to the ssformat key.
     * </pre>
     *
     * <code>int32 tag = 1;</code>
     *
     * @return The tag.
     */
    int getTag();

    /**
     *
     *
     * <pre>
     * Whether the key column is sorted ascending or descending. Only present
     * if `tag` is zero.
     * </pre>
     *
     * <code>.google.spanner.v1.KeyRecipe.Part.Order order = 2;</code>
     *
     * @return The enum numeric value on the wire for order.
     */
    int getOrderValue();
    /**
     *
     *
     * <pre>
     * Whether the key column is sorted ascending or descending. Only present
     * if `tag` is zero.
     * </pre>
     *
     * <code>.google.spanner.v1.KeyRecipe.Part.Order order = 2;</code>
     *
     * @return The order.
     */
    com.google.spanner.v1.KeyRecipe.Part.Order getOrder();

    /**
     *
     *
     * <pre>
     * How NULLs are represented in the encoded key part. Only present if `tag`
     * is zero.
     * </pre>
     *
     * <code>.google.spanner.v1.KeyRecipe.Part.NullOrder null_order = 3;</code>
     *
     * @return The enum numeric value on the wire for nullOrder.
     */
    int getNullOrderValue();
    /**
     *
     *
     * <pre>
     * How NULLs are represented in the encoded key part. Only present if `tag`
     * is zero.
     * </pre>
     *
     * <code>.google.spanner.v1.KeyRecipe.Part.NullOrder null_order = 3;</code>
     *
     * @return The nullOrder.
     */
    com.google.spanner.v1.KeyRecipe.Part.NullOrder getNullOrder();

    /**
     *
     *
     * <pre>
     * The type of the key part. Only present if `tag` is zero.
     * </pre>
     *
     * <code>.google.spanner.v1.Type type = 4;</code>
     *
     * @return Whether the type field is set.
     */
    boolean hasType();
    /**
     *
     *
     * <pre>
     * The type of the key part. Only present if `tag` is zero.
     * </pre>
     *
     * <code>.google.spanner.v1.Type type = 4;</code>
     *
     * @return The type.
     */
    com.google.spanner.v1.Type getType();
    /**
     *
     *
     * <pre>
     * The type of the key part. Only present if `tag` is zero.
     * </pre>
     *
     * <code>.google.spanner.v1.Type type = 4;</code>
     */
    com.google.spanner.v1.TypeOrBuilder getTypeOrBuilder();

    /**
     *
     *
     * <pre>
     * `identifier` is the name of the column or query parameter. Only present
     * if `tag` is zero. It is a repeated field to support fetching key columns
     * from nested fields, such as `STRUCT` query parameters.
     * </pre>
     *
     * <code>repeated string identifier = 5;</code>
     *
     * @return A list containing the identifier.
     */
    java.util.List<java.lang.String> getIdentifierList();
    /**
     *
     *
     * <pre>
     * `identifier` is the name of the column or query parameter. Only present
     * if `tag` is zero. It is a repeated field to support fetching key columns
     * from nested fields, such as `STRUCT` query parameters.
     * </pre>
     *
     * <code>repeated string identifier = 5;</code>
     *
     * @return The count of identifier.
     */
    int getIdentifierCount();
    /**
     *
     *
     * <pre>
     * `identifier` is the name of the column or query parameter. Only present
     * if `tag` is zero. It is a repeated field to support fetching key columns
     * from nested fields, such as `STRUCT` query parameters.
     * </pre>
     *
     * <code>repeated string identifier = 5;</code>
     *
     * @param index The index of the element to return.
     * @return The identifier at the given index.
     */
    java.lang.String getIdentifier(int index);
    /**
     *
     *
     * <pre>
     * `identifier` is the name of the column or query parameter. Only present
     * if `tag` is zero. It is a repeated field to support fetching key columns
     * from nested fields, such as `STRUCT` query parameters.
     * </pre>
     *
     * <code>repeated string identifier = 5;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the identifier at the given index.
     */
    com.google.protobuf.ByteString getIdentifierBytes(int index);
  }
  /**
   *
   *
   * <pre>
   * An ssformat key is composed of a sequence of tag numbers and key column
   * values. `Part` represents a single tag or key column value.
   * </pre>
   *
   * Protobuf type {@code google.spanner.v1.KeyRecipe.Part}
   */
  public static final class Part extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.spanner.v1.KeyRecipe.Part)
      PartOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use Part.newBuilder() to construct.
    private Part(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private Part() {
      order_ = 0;
      nullOrder_ = 0;
      identifier_ = com.google.protobuf.LazyStringArrayList.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new Part();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.spanner.v1.LocationProto
          .internal_static_google_spanner_v1_KeyRecipe_Part_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.spanner.v1.LocationProto
          .internal_static_google_spanner_v1_KeyRecipe_Part_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.spanner.v1.KeyRecipe.Part.class,
              com.google.spanner.v1.KeyRecipe.Part.Builder.class);
    }

    /**
     *
     *
     * <pre>
     * The remaining fields encode column values.
     * </pre>
     *
     * Protobuf enum {@code google.spanner.v1.KeyRecipe.Part.Order}
     */
    public enum Order implements com.google.protobuf.ProtocolMessageEnum {
      /**
       *
       *
       * <pre>
       * The key is ascending - corresponds to `ASC` in the schema definition.
       * </pre>
       *
       * <code>ASCENDING = 0;</code>
       */
      ASCENDING(0),
      /**
       *
       *
       * <pre>
       * The key is descending - corresponds to `DESC` in the schema definition.
       * </pre>
       *
       * <code>DESCENDING = 1;</code>
       */
      DESCENDING(1),
      UNRECOGNIZED(-1),
      ;

      /**
       *
       *
       * <pre>
       * The key is ascending - corresponds to `ASC` in the schema definition.
       * </pre>
       *
       * <code>ASCENDING = 0;</code>
       */
      public static final int ASCENDING_VALUE = 0;
      /**
       *
       *
       * <pre>
       * The key is descending - corresponds to `DESC` in the schema definition.
       * </pre>
       *
       * <code>DESCENDING = 1;</code>
       */
      public static final int DESCENDING_VALUE = 1;

      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Order valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Order forNumber(int value) {
        switch (value) {
          case 0:
            return ASCENDING;
          case 1:
            return DESCENDING;
          default:
            return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Order> internalGetValueMap() {
        return internalValueMap;
      }

      private static final com.google.protobuf.Internal.EnumLiteMap<Order> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Order>() {
            public Order findValueByNumber(int number) {
              return Order.forNumber(number);
            }
          };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }

      public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
        return getDescriptor();
      }

      public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
        return com.google.spanner.v1.KeyRecipe.Part.getDescriptor().getEnumTypes().get(0);
      }

      private static final Order[] VALUES = values();

      public static Order valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Order(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:google.spanner.v1.KeyRecipe.Part.Order)
    }

    /**
     *
     *
     * <pre>
     * The null order of the key column. This dictates where NULL values sort
     * in the sorted order. Note that columns which are `NOT NULL` can have a
     * special encoding.
     * </pre>
     *
     * Protobuf enum {@code google.spanner.v1.KeyRecipe.Part.NullOrder}
     */
    public enum NullOrder implements com.google.protobuf.ProtocolMessageEnum {
      /**
       *
       *
       * <pre>
       * NULL values sort before any non-NULL values.
       * </pre>
       *
       * <code>NULLS_FIRST = 0;</code>
       */
      NULLS_FIRST(0),
      /**
       *
       *
       * <pre>
       * NULL values sort after any non-NULL values.
       * </pre>
       *
       * <code>NULLS_LAST = 1;</code>
       */
      NULLS_LAST(1),
      /**
       *
       *
       * <pre>
       * The column does not support NULL values.
       * </pre>
       *
       * <code>NOT_NULL = 2;</code>
       */
      NOT_NULL(2),
      UNRECOGNIZED(-1),
      ;

      /**
       *
       *
       * <pre>
       * NULL values sort before any non-NULL values.
       * </pre>
       *
       * <code>NULLS_FIRST = 0;</code>
       */
      public static final int NULLS_FIRST_VALUE = 0;
      /**
       *
       *
       * <pre>
       * NULL values sort after any non-NULL values.
       * </pre>
       *
       * <code>NULLS_LAST = 1;</code>
       */
      public static final int NULLS_LAST_VALUE = 1;
      /**
       *
       *
       * <pre>
       * The column does not support NULL values.
       * </pre>
       *
       * <code>NOT_NULL = 2;</code>
       */
      public static final int NOT_NULL_VALUE = 2;

      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static NullOrder valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static NullOrder forNumber(int value) {
        switch (value) {
          case 0:
            return NULLS_FIRST;
          case 1:
            return NULLS_LAST;
          case 2:
            return NOT_NULL;
          default:
            return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<NullOrder> internalGetValueMap() {
        return internalValueMap;
      }

      private static final com.google.protobuf.Internal.EnumLiteMap<NullOrder> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NullOrder>() {
            public NullOrder findValueByNumber(int number) {
              return NullOrder.forNumber(number);
            }
          };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }

      public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
        return getDescriptor();
      }

      public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
        return com.google.spanner.v1.KeyRecipe.Part.getDescriptor().getEnumTypes().get(1);
      }

      private static final NullOrder[] VALUES = values();

      public static NullOrder valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private NullOrder(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:google.spanner.v1.KeyRecipe.Part.NullOrder)
    }

    private int bitField0_;
    public static final int TAG_FIELD_NUMBER = 1;
    private int tag_ = 0;
    /**
     *
     *
     * <pre>
     * If non-zero, `tag` is the only field present in this `Part`. The part
     * is encoded by appending `tag` to the ssformat key.
     * </pre>
     *
     * <code>int32 tag = 1;</code>
     *
     * @return The tag.
     */
    @java.lang.Override
    public int getTag() {
      return tag_;
    }

    public static final int ORDER_FIELD_NUMBER = 2;
    private int order_ = 0;
    /**
     *
     *
     * <pre>
     * Whether the key column is sorted ascending or descending. Only present
     * if `tag` is zero.
     * </pre>
     *
     * <code>.google.spanner.v1.KeyRecipe.Part.Order order = 2;</code>
     *
     * @return The enum numeric value on the wire for order.
     */
    @java.lang.Override
    public int getOrderValue() {
      return order_;
    }
    /**
     *
     *
     * <pre>
     * Whether the key column is sorted ascending or descending. Only present
     * if `tag` is zero.
     * </pre>
     *
     * <code>.google.spanner.v1.KeyRecipe.Part.Order order = 2;</code>
     *
     * @return The order.
     */
    @java.lang.Override
    public com.google.spanner.v1.KeyRecipe.Part.Order getOrder() {
      com.google.spanner.v1.KeyRecipe.Part.Order result =
          com.google.spanner.v1.KeyRecipe.Part.Order.forNumber(order_);
      return result == null ? com.google.spanner.v1.KeyRecipe.Part.Order.UNRECOGNIZED : result;
    }

    public static final int NULL_ORDER_FIELD_NUMBER = 3;
    private int nullOrder_ = 0;
    /**
     *
     *
     * <pre>
     * How NULLs are represented in the encoded key part. Only present if `tag`
     * is zero.
     * </pre>
     *
     * <code>.google.spanner.v1.KeyRecipe.Part.NullOrder null_order = 3;</code>
     *
     * @return The enum numeric value on the wire for nullOrder.
     */
    @java.lang.Override
    public int getNullOrderValue() {
      return nullOrder_;
    }
    /**
     *
     *
     * <pre>
     * How NULLs are represented in the encoded key part. Only present if `tag`
     * is zero.
     * </pre>
     *
     * <code>.google.spanner.v1.KeyRecipe.Part.NullOrder null_order = 3;</code>
     *
     * @return The nullOrder.
     */
    @java.lang.Override
    public com.google.spanner.v1.KeyRecipe.Part.NullOrder getNullOrder() {
      com.google.spanner.v1.KeyRecipe.Part.NullOrder result =
          com.google.spanner.v1.KeyRecipe.Part.NullOrder.forNumber(nullOrder_);
      return result == null ? com.google.spanner.v1.KeyRecipe.Part.NullOrder.UNRECOGNIZED : result;
    }

    public static final int TYPE_FIELD_NUMBER = 4;
    private com.google.spanner.v1.Type type_;
    /**
     *
     *
     * <pre>
     * The type of the key part. Only present if `tag` is zero.
     * </pre>
     *
     * <code>.google.spanner.v1.Type type = 4;</code>
     *
     * @return Whether the type field is set.
     */
    @java.lang.Override
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * The type of the key part. Only present if `tag` is zero.
     * </pre>
     *
     * <code>.google.spanner.v1.Type type = 4;</code>
     *
     * @return The type.
     */
    @java.lang.Override
    public com.google.spanner.v1.Type getType() {
      return type_ == null ? com.google.spanner.v1.Type.getDefaultInstance() : type_;
    }
    /**
     *
     *
     * <pre>
     * The type of the key part. Only present if `tag` is zero.
     * </pre>
     *
     * <code>.google.spanner.v1.Type type = 4;</code>
     */
    @java.lang.Override
    public com.google.spanner.v1.TypeOrBuilder getTypeOrBuilder() {
      return type_ == null ? com.google.spanner.v1.Type.getDefaultInstance() : type_;
    }

    public static final int IDENTIFIER_FIELD_NUMBER = 5;

    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList identifier_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     *
     *
     * <pre>
     * `identifier` is the name of the column or query parameter. Only present
     * if `tag` is zero. It is a repeated field to support fetching key columns
     * from nested fields, such as `STRUCT` query parameters.
     * </pre>
     *
     * <code>repeated string identifier = 5;</code>
     *
     * @return A list containing the identifier.
     */
    public com.google.protobuf.ProtocolStringList getIdentifierList() {
      return identifier_;
    }
    /**
     *
     *
     * <pre>
     * `identifier` is the name of the column or query parameter. Only present
     * if `tag` is zero. It is a repeated field to support fetching key columns
     * from nested fields, such as `STRUCT` query parameters.
     * </pre>
     *
     * <code>repeated string identifier = 5;</code>
     *
     * @return The count of identifier.
     */
    public int getIdentifierCount() {
      return identifier_.size();
    }
    /**
     *
     *
     * <pre>
     * `identifier` is the name of the column or query parameter. Only present
     * if `tag` is zero. It is a repeated field to support fetching key columns
     * from nested fields, such as `STRUCT` query parameters.
     * </pre>
     *
     * <code>repeated string identifier = 5;</code>
     *
     * @param index The index of the element to return.
     * @return The identifier at the given index.
     */
    public java.lang.String getIdentifier(int index) {
      return identifier_.get(index);
    }
    /**
     *
     *
     * <pre>
     * `identifier` is the name of the column or query parameter. Only present
     * if `tag` is zero. It is a repeated field to support fetching key columns
     * from nested fields, such as `STRUCT` query parameters.
     * </pre>
     *
     * <code>repeated string identifier = 5;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the identifier at the given index.
     */
    public com.google.protobuf.ByteString getIdentifierBytes(int index) {
      return identifier_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (tag_ != 0) {
        output.writeInt32(1, tag_);
      }
      if (order_ != com.google.spanner.v1.KeyRecipe.Part.Order.ASCENDING.getNumber()) {
        output.writeEnum(2, order_);
      }
      if (nullOrder_ != com.google.spanner.v1.KeyRecipe.Part.NullOrder.NULLS_FIRST.getNumber()) {
        output.writeEnum(3, nullOrder_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(4, getType());
      }
      for (int i = 0; i < identifier_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, identifier_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (tag_ != 0) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(1, tag_);
      }
      if (order_ != com.google.spanner.v1.KeyRecipe.Part.Order.ASCENDING.getNumber()) {
        size += com.google.protobuf.CodedOutputStream.computeEnumSize(2, order_);
      }
      if (nullOrder_ != com.google.spanner.v1.KeyRecipe.Part.NullOrder.NULLS_FIRST.getNumber()) {
        size += com.google.protobuf.CodedOutputStream.computeEnumSize(3, nullOrder_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(4, getType());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < identifier_.size(); i++) {
          dataSize += computeStringSizeNoTag(identifier_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getIdentifierList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.google.spanner.v1.KeyRecipe.Part)) {
        return super.equals(obj);
      }
      com.google.spanner.v1.KeyRecipe.Part other = (com.google.spanner.v1.KeyRecipe.Part) obj;

      if (getTag() != other.getTag()) return false;
      if (order_ != other.order_) return false;
      if (nullOrder_ != other.nullOrder_) return false;
      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (!getType().equals(other.getType())) return false;
      }
      if (!getIdentifierList().equals(other.getIdentifierList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TAG_FIELD_NUMBER;
      hash = (53 * hash) + getTag();
      hash = (37 * hash) + ORDER_FIELD_NUMBER;
      hash = (53 * hash) + order_;
      hash = (37 * hash) + NULL_ORDER_FIELD_NUMBER;
      hash = (53 * hash) + nullOrder_;
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType().hashCode();
      }
      if (getIdentifierCount() > 0) {
        hash = (37 * hash) + IDENTIFIER_FIELD_NUMBER;
        hash = (53 * hash) + getIdentifierList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.spanner.v1.KeyRecipe.Part parseFrom(java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.spanner.v1.KeyRecipe.Part parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.spanner.v1.KeyRecipe.Part parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.spanner.v1.KeyRecipe.Part parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.spanner.v1.KeyRecipe.Part parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.spanner.v1.KeyRecipe.Part parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.spanner.v1.KeyRecipe.Part parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.spanner.v1.KeyRecipe.Part parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.spanner.v1.KeyRecipe.Part parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.spanner.v1.KeyRecipe.Part parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.spanner.v1.KeyRecipe.Part parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.spanner.v1.KeyRecipe.Part parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(com.google.spanner.v1.KeyRecipe.Part prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * An ssformat key is composed of a sequence of tag numbers and key column
     * values. `Part` represents a single tag or key column value.
     * </pre>
     *
     * Protobuf type {@code google.spanner.v1.KeyRecipe.Part}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.spanner.v1.KeyRecipe.Part)
        com.google.spanner.v1.KeyRecipe.PartOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.spanner.v1.LocationProto
            .internal_static_google_spanner_v1_KeyRecipe_Part_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.spanner.v1.LocationProto
            .internal_static_google_spanner_v1_KeyRecipe_Part_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.spanner.v1.KeyRecipe.Part.class,
                com.google.spanner.v1.KeyRecipe.Part.Builder.class);
      }

      // Construct using com.google.spanner.v1.KeyRecipe.Part.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
          getTypeFieldBuilder();
        }
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        tag_ = 0;
        order_ = 0;
        nullOrder_ = 0;
        type_ = null;
        if (typeBuilder_ != null) {
          typeBuilder_.dispose();
          typeBuilder_ = null;
        }
        identifier_ = com.google.protobuf.LazyStringArrayList.emptyList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.spanner.v1.LocationProto
            .internal_static_google_spanner_v1_KeyRecipe_Part_descriptor;
      }

      @java.lang.Override
      public com.google.spanner.v1.KeyRecipe.Part getDefaultInstanceForType() {
        return com.google.spanner.v1.KeyRecipe.Part.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.spanner.v1.KeyRecipe.Part build() {
        com.google.spanner.v1.KeyRecipe.Part result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.spanner.v1.KeyRecipe.Part buildPartial() {
        com.google.spanner.v1.KeyRecipe.Part result =
            new com.google.spanner.v1.KeyRecipe.Part(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.spanner.v1.KeyRecipe.Part result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.tag_ = tag_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.order_ = order_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.nullOrder_ = nullOrder_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.type_ = typeBuilder_ == null ? type_ : typeBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          identifier_.makeImmutable();
          result.identifier_ = identifier_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.spanner.v1.KeyRecipe.Part) {
          return mergeFrom((com.google.spanner.v1.KeyRecipe.Part) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.spanner.v1.KeyRecipe.Part other) {
        if (other == com.google.spanner.v1.KeyRecipe.Part.getDefaultInstance()) return this;
        if (other.getTag() != 0) {
          setTag(other.getTag());
        }
        if (other.order_ != 0) {
          setOrderValue(other.getOrderValue());
        }
        if (other.nullOrder_ != 0) {
          setNullOrderValue(other.getNullOrderValue());
        }
        if (other.hasType()) {
          mergeType(other.getType());
        }
        if (!other.identifier_.isEmpty()) {
          if (identifier_.isEmpty()) {
            identifier_ = other.identifier_;
            bitField0_ |= 0x00000010;
          } else {
            ensureIdentifierIsMutable();
            identifier_.addAll(other.identifier_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8:
                {
                  tag_ = input.readInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
              case 16:
                {
                  order_ = input.readEnum();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
              case 24:
                {
                  nullOrder_ = input.readEnum();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
              case 34:
                {
                  input.readMessage(getTypeFieldBuilder().getBuilder(), extensionRegistry);
                  bitField0_ |= 0x00000008;
                  break;
                } // case 34
              case 42:
                {
                  java.lang.String s = input.readStringRequireUtf8();
                  ensureIdentifierIsMutable();
                  identifier_.add(s);
                  break;
                } // case 42
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private int tag_;
      /**
       *
       *
       * <pre>
       * If non-zero, `tag` is the only field present in this `Part`. The part
       * is encoded by appending `tag` to the ssformat key.
       * </pre>
       *
       * <code>int32 tag = 1;</code>
       *
       * @return The tag.
       */
      @java.lang.Override
      public int getTag() {
        return tag_;
      }
      /**
       *
       *
       * <pre>
       * If non-zero, `tag` is the only field present in this `Part`. The part
       * is encoded by appending `tag` to the ssformat key.
       * </pre>
       *
       * <code>int32 tag = 1;</code>
       *
       * @param value The tag to set.
       * @return This builder for chaining.
       */
      public Builder setTag(int value) {

        tag_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * If non-zero, `tag` is the only field present in this `Part`. The part
       * is encoded by appending `tag` to the ssformat key.
       * </pre>
       *
       * <code>int32 tag = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearTag() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tag_ = 0;
        onChanged();
        return this;
      }

      private int order_ = 0;
      /**
       *
       *
       * <pre>
       * Whether the key column is sorted ascending or descending. Only present
       * if `tag` is zero.
       * </pre>
       *
       * <code>.google.spanner.v1.KeyRecipe.Part.Order order = 2;</code>
       *
       * @return The enum numeric value on the wire for order.
       */
      @java.lang.Override
      public int getOrderValue() {
        return order_;
      }
      /**
       *
       *
       * <pre>
       * Whether the key column is sorted ascending or descending. Only present
       * if `tag` is zero.
       * </pre>
       *
       * <code>.google.spanner.v1.KeyRecipe.Part.Order order = 2;</code>
       *
       * @param value The enum numeric value on the wire for order to set.
       * @return This builder for chaining.
       */
      public Builder setOrderValue(int value) {
        order_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Whether the key column is sorted ascending or descending. Only present
       * if `tag` is zero.
       * </pre>
       *
       * <code>.google.spanner.v1.KeyRecipe.Part.Order order = 2;</code>
       *
       * @return The order.
       */
      @java.lang.Override
      public com.google.spanner.v1.KeyRecipe.Part.Order getOrder() {
        com.google.spanner.v1.KeyRecipe.Part.Order result =
            com.google.spanner.v1.KeyRecipe.Part.Order.forNumber(order_);
        return result == null ? com.google.spanner.v1.KeyRecipe.Part.Order.UNRECOGNIZED : result;
      }
      /**
       *
       *
       * <pre>
       * Whether the key column is sorted ascending or descending. Only present
       * if `tag` is zero.
       * </pre>
       *
       * <code>.google.spanner.v1.KeyRecipe.Part.Order order = 2;</code>
       *
       * @param value The order to set.
       * @return This builder for chaining.
       */
      public Builder setOrder(com.google.spanner.v1.KeyRecipe.Part.Order value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        order_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Whether the key column is sorted ascending or descending. Only present
       * if `tag` is zero.
       * </pre>
       *
       * <code>.google.spanner.v1.KeyRecipe.Part.Order order = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearOrder() {
        bitField0_ = (bitField0_ & ~0x00000002);
        order_ = 0;
        onChanged();
        return this;
      }

      private int nullOrder_ = 0;
      /**
       *
       *
       * <pre>
       * How NULLs are represented in the encoded key part. Only present if `tag`
       * is zero.
       * </pre>
       *
       * <code>.google.spanner.v1.KeyRecipe.Part.NullOrder null_order = 3;</code>
       *
       * @return The enum numeric value on the wire for nullOrder.
       */
      @java.lang.Override
      public int getNullOrderValue() {
        return nullOrder_;
      }
      /**
       *
       *
       * <pre>
       * How NULLs are represented in the encoded key part. Only present if `tag`
       * is zero.
       * </pre>
       *
       * <code>.google.spanner.v1.KeyRecipe.Part.NullOrder null_order = 3;</code>
       *
       * @param value The enum numeric value on the wire for nullOrder to set.
       * @return This builder for chaining.
       */
      public Builder setNullOrderValue(int value) {
        nullOrder_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * How NULLs are represented in the encoded key part. Only present if `tag`
       * is zero.
       * </pre>
       *
       * <code>.google.spanner.v1.KeyRecipe.Part.NullOrder null_order = 3;</code>
       *
       * @return The nullOrder.
       */
      @java.lang.Override
      public com.google.spanner.v1.KeyRecipe.Part.NullOrder getNullOrder() {
        com.google.spanner.v1.KeyRecipe.Part.NullOrder result =
            com.google.spanner.v1.KeyRecipe.Part.NullOrder.forNumber(nullOrder_);
        return result == null
            ? com.google.spanner.v1.KeyRecipe.Part.NullOrder.UNRECOGNIZED
            : result;
      }
      /**
       *
       *
       * <pre>
       * How NULLs are represented in the encoded key part. Only present if `tag`
       * is zero.
       * </pre>
       *
       * <code>.google.spanner.v1.KeyRecipe.Part.NullOrder null_order = 3;</code>
       *
       * @param value The nullOrder to set.
       * @return This builder for chaining.
       */
      public Builder setNullOrder(com.google.spanner.v1.KeyRecipe.Part.NullOrder value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        nullOrder_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * How NULLs are represented in the encoded key part. Only present if `tag`
       * is zero.
       * </pre>
       *
       * <code>.google.spanner.v1.KeyRecipe.Part.NullOrder null_order = 3;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearNullOrder() {
        bitField0_ = (bitField0_ & ~0x00000004);
        nullOrder_ = 0;
        onChanged();
        return this;
      }

      private com.google.spanner.v1.Type type_;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.spanner.v1.Type,
              com.google.spanner.v1.Type.Builder,
              com.google.spanner.v1.TypeOrBuilder>
          typeBuilder_;
      /**
       *
       *
       * <pre>
       * The type of the key part. Only present if `tag` is zero.
       * </pre>
       *
       * <code>.google.spanner.v1.Type type = 4;</code>
       *
       * @return Whether the type field is set.
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       *
       *
       * <pre>
       * The type of the key part. Only present if `tag` is zero.
       * </pre>
       *
       * <code>.google.spanner.v1.Type type = 4;</code>
       *
       * @return The type.
       */
      public com.google.spanner.v1.Type getType() {
        if (typeBuilder_ == null) {
          return type_ == null ? com.google.spanner.v1.Type.getDefaultInstance() : type_;
        } else {
          return typeBuilder_.getMessage();
        }
      }
      /**
       *
       *
       * <pre>
       * The type of the key part. Only present if `tag` is zero.
       * </pre>
       *
       * <code>.google.spanner.v1.Type type = 4;</code>
       */
      public Builder setType(com.google.spanner.v1.Type value) {
        if (typeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
        } else {
          typeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The type of the key part. Only present if `tag` is zero.
       * </pre>
       *
       * <code>.google.spanner.v1.Type type = 4;</code>
       */
      public Builder setType(com.google.spanner.v1.Type.Builder builderForValue) {
        if (typeBuilder_ == null) {
          type_ = builderForValue.build();
        } else {
          typeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The type of the key part. Only present if `tag` is zero.
       * </pre>
       *
       * <code>.google.spanner.v1.Type type = 4;</code>
       */
      public Builder mergeType(com.google.spanner.v1.Type value) {
        if (typeBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)
              && type_ != null
              && type_ != com.google.spanner.v1.Type.getDefaultInstance()) {
            getTypeBuilder().mergeFrom(value);
          } else {
            type_ = value;
          }
        } else {
          typeBuilder_.mergeFrom(value);
        }
        if (type_ != null) {
          bitField0_ |= 0x00000008;
          onChanged();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The type of the key part. Only present if `tag` is zero.
       * </pre>
       *
       * <code>.google.spanner.v1.Type type = 4;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = null;
        if (typeBuilder_ != null) {
          typeBuilder_.dispose();
          typeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The type of the key part. Only present if `tag` is zero.
       * </pre>
       *
       * <code>.google.spanner.v1.Type type = 4;</code>
       */
      public com.google.spanner.v1.Type.Builder getTypeBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getTypeFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * The type of the key part. Only present if `tag` is zero.
       * </pre>
       *
       * <code>.google.spanner.v1.Type type = 4;</code>
       */
      public com.google.spanner.v1.TypeOrBuilder getTypeOrBuilder() {
        if (typeBuilder_ != null) {
          return typeBuilder_.getMessageOrBuilder();
        } else {
          return type_ == null ? com.google.spanner.v1.Type.getDefaultInstance() : type_;
        }
      }
      /**
       *
       *
       * <pre>
       * The type of the key part. Only present if `tag` is zero.
       * </pre>
       *
       * <code>.google.spanner.v1.Type type = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.spanner.v1.Type,
              com.google.spanner.v1.Type.Builder,
              com.google.spanner.v1.TypeOrBuilder>
          getTypeFieldBuilder() {
        if (typeBuilder_ == null) {
          typeBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.spanner.v1.Type,
                  com.google.spanner.v1.Type.Builder,
                  com.google.spanner.v1.TypeOrBuilder>(
                  getType(), getParentForChildren(), isClean());
          type_ = null;
        }
        return typeBuilder_;
      }

      private com.google.protobuf.LazyStringArrayList identifier_ =
          com.google.protobuf.LazyStringArrayList.emptyList();

      private void ensureIdentifierIsMutable() {
        if (!identifier_.isModifiable()) {
          identifier_ = new com.google.protobuf.LazyStringArrayList(identifier_);
        }
        bitField0_ |= 0x00000010;
      }
      /**
       *
       *
       * <pre>
       * `identifier` is the name of the column or query parameter. Only present
       * if `tag` is zero. It is a repeated field to support fetching key columns
       * from nested fields, such as `STRUCT` query parameters.
       * </pre>
       *
       * <code>repeated string identifier = 5;</code>
       *
       * @return A list containing the identifier.
       */
      public com.google.protobuf.ProtocolStringList getIdentifierList() {
        identifier_.makeImmutable();
        return identifier_;
      }
      /**
       *
       *
       * <pre>
       * `identifier` is the name of the column or query parameter. Only present
       * if `tag` is zero. It is a repeated field to support fetching key columns
       * from nested fields, such as `STRUCT` query parameters.
       * </pre>
       *
       * <code>repeated string identifier = 5;</code>
       *
       * @return The count of identifier.
       */
      public int getIdentifierCount() {
        return identifier_.size();
      }
      /**
       *
       *
       * <pre>
       * `identifier` is the name of the column or query parameter. Only present
       * if `tag` is zero. It is a repeated field to support fetching key columns
       * from nested fields, such as `STRUCT` query parameters.
       * </pre>
       *
       * <code>repeated string identifier = 5;</code>
       *
       * @param index The index of the element to return.
       * @return The identifier at the given index.
       */
      public java.lang.String getIdentifier(int index) {
        return identifier_.get(index);
      }
      /**
       *
       *
       * <pre>
       * `identifier` is the name of the column or query parameter. Only present
       * if `tag` is zero. It is a repeated field to support fetching key columns
       * from nested fields, such as `STRUCT` query parameters.
       * </pre>
       *
       * <code>repeated string identifier = 5;</code>
       *
       * @param index The index of the value to return.
       * @return The bytes of the identifier at the given index.
       */
      public com.google.protobuf.ByteString getIdentifierBytes(int index) {
        return identifier_.getByteString(index);
      }
      /**
       *
       *
       * <pre>
       * `identifier` is the name of the column or query parameter. Only present
       * if `tag` is zero. It is a repeated field to support fetching key columns
       * from nested fields, such as `STRUCT` query parameters.
       * </pre>
       *
       * <code>repeated string identifier = 5;</code>
       *
       * @param index The index to set the value at.
       * @param value The identifier to set.
       * @return This builder for chaining.
       */
      public Builder setIdentifier(int index, java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIdentifierIsMutable();
        identifier_.set(index, value);
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * `identifier` is the name of the column or query parameter. Only present
       * if `tag` is zero. It is a repeated field to support fetching key columns
       * from nested fields, such as `STRUCT` query parameters.
       * </pre>
       *
       * <code>repeated string identifier = 5;</code>
       *
       * @param value The identifier to add.
       * @return This builder for chaining.
       */
      public Builder addIdentifier(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIdentifierIsMutable();
        identifier_.add(value);
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * `identifier` is the name of the column or query parameter. Only present
       * if `tag` is zero. It is a repeated field to support fetching key columns
       * from nested fields, such as `STRUCT` query parameters.
       * </pre>
       *
       * <code>repeated string identifier = 5;</code>
       *
       * @param values The identifier to add.
       * @return This builder for chaining.
       */
      public Builder addAllIdentifier(java.lang.Iterable<java.lang.String> values) {
        ensureIdentifierIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, identifier_);
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * `identifier` is the name of the column or query parameter. Only present
       * if `tag` is zero. It is a repeated field to support fetching key columns
       * from nested fields, such as `STRUCT` query parameters.
       * </pre>
       *
       * <code>repeated string identifier = 5;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearIdentifier() {
        identifier_ = com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        ;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * `identifier` is the name of the column or query parameter. Only present
       * if `tag` is zero. It is a repeated field to support fetching key columns
       * from nested fields, such as `STRUCT` query parameters.
       * </pre>
       *
       * <code>repeated string identifier = 5;</code>
       *
       * @param value The bytes of the identifier to add.
       * @return This builder for chaining.
       */
      public Builder addIdentifierBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        ensureIdentifierIsMutable();
        identifier_.add(value);
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.spanner.v1.KeyRecipe.Part)
    }

    // @@protoc_insertion_point(class_scope:google.spanner.v1.KeyRecipe.Part)
    private static final com.google.spanner.v1.KeyRecipe.Part DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new com.google.spanner.v1.KeyRecipe.Part();
    }

    public static com.google.spanner.v1.KeyRecipe.Part getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Part> PARSER =
        new com.google.protobuf.AbstractParser<Part>() {
          @java.lang.Override
          public Part parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<Part> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Part> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.spanner.v1.KeyRecipe.Part getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  private int targetCase_ = 0;

  @SuppressWarnings("serial")
  private java.lang.Object target_;

  public enum TargetCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    TABLE_NAME(1),
    INDEX_NAME(2),
    OPERATION_UID(3),
    TARGET_NOT_SET(0);
    private final int value;

    private TargetCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TargetCase valueOf(int value) {
      return forNumber(value);
    }

    public static TargetCase forNumber(int value) {
      switch (value) {
        case 1:
          return TABLE_NAME;
        case 2:
          return INDEX_NAME;
        case 3:
          return OPERATION_UID;
        case 0:
          return TARGET_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public TargetCase getTargetCase() {
    return TargetCase.forNumber(targetCase_);
  }

  public static final int TABLE_NAME_FIELD_NUMBER = 1;
  /**
   *
   *
   * <pre>
   * A table name, matching the name from the database schema.
   * </pre>
   *
   * <code>string table_name = 1;</code>
   *
   * @return Whether the tableName field is set.
   */
  public boolean hasTableName() {
    return targetCase_ == 1;
  }
  /**
   *
   *
   * <pre>
   * A table name, matching the name from the database schema.
   * </pre>
   *
   * <code>string table_name = 1;</code>
   *
   * @return The tableName.
   */
  public java.lang.String getTableName() {
    java.lang.Object ref = "";
    if (targetCase_ == 1) {
      ref = target_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (targetCase_ == 1) {
        target_ = s;
      }
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * A table name, matching the name from the database schema.
   * </pre>
   *
   * <code>string table_name = 1;</code>
   *
   * @return The bytes for tableName.
   */
  public com.google.protobuf.ByteString getTableNameBytes() {
    java.lang.Object ref = "";
    if (targetCase_ == 1) {
      ref = target_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      if (targetCase_ == 1) {
        target_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int INDEX_NAME_FIELD_NUMBER = 2;
  /**
   *
   *
   * <pre>
   * An index name, matching the name from the database schema.
   * </pre>
   *
   * <code>string index_name = 2;</code>
   *
   * @return Whether the indexName field is set.
   */
  public boolean hasIndexName() {
    return targetCase_ == 2;
  }
  /**
   *
   *
   * <pre>
   * An index name, matching the name from the database schema.
   * </pre>
   *
   * <code>string index_name = 2;</code>
   *
   * @return The indexName.
   */
  public java.lang.String getIndexName() {
    java.lang.Object ref = "";
    if (targetCase_ == 2) {
      ref = target_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (targetCase_ == 2) {
        target_ = s;
      }
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * An index name, matching the name from the database schema.
   * </pre>
   *
   * <code>string index_name = 2;</code>
   *
   * @return The bytes for indexName.
   */
  public com.google.protobuf.ByteString getIndexNameBytes() {
    java.lang.Object ref = "";
    if (targetCase_ == 2) {
      ref = target_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      if (targetCase_ == 2) {
        target_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OPERATION_UID_FIELD_NUMBER = 3;
  /**
   *
   *
   * <pre>
   * The UID of a query, matching the UID from `RoutingHint`.
   * </pre>
   *
   * <code>uint64 operation_uid = 3;</code>
   *
   * @return Whether the operationUid field is set.
   */
  @java.lang.Override
  public boolean hasOperationUid() {
    return targetCase_ == 3;
  }
  /**
   *
   *
   * <pre>
   * The UID of a query, matching the UID from `RoutingHint`.
   * </pre>
   *
   * <code>uint64 operation_uid = 3;</code>
   *
   * @return The operationUid.
   */
  @java.lang.Override
  public long getOperationUid() {
    if (targetCase_ == 3) {
      return (java.lang.Long) target_;
    }
    return 0L;
  }

  public static final int PART_FIELD_NUMBER = 4;

  @SuppressWarnings("serial")
  private java.util.List<com.google.spanner.v1.KeyRecipe.Part> part_;
  /**
   *
   *
   * <pre>
   * Parts are in the order they should appear in the encoded key.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.spanner.v1.KeyRecipe.Part> getPartList() {
    return part_;
  }
  /**
   *
   *
   * <pre>
   * Parts are in the order they should appear in the encoded key.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.spanner.v1.KeyRecipe.PartOrBuilder>
      getPartOrBuilderList() {
    return part_;
  }
  /**
   *
   *
   * <pre>
   * Parts are in the order they should appear in the encoded key.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
   */
  @java.lang.Override
  public int getPartCount() {
    return part_.size();
  }
  /**
   *
   *
   * <pre>
   * Parts are in the order they should appear in the encoded key.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
   */
  @java.lang.Override
  public com.google.spanner.v1.KeyRecipe.Part getPart(int index) {
    return part_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Parts are in the order they should appear in the encoded key.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
   */
  @java.lang.Override
  public com.google.spanner.v1.KeyRecipe.PartOrBuilder getPartOrBuilder(int index) {
    return part_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (targetCase_ == 1) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, target_);
    }
    if (targetCase_ == 2) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, target_);
    }
    if (targetCase_ == 3) {
      output.writeUInt64(3, (long) ((java.lang.Long) target_));
    }
    for (int i = 0; i < part_.size(); i++) {
      output.writeMessage(4, part_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (targetCase_ == 1) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, target_);
    }
    if (targetCase_ == 2) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, target_);
    }
    if (targetCase_ == 3) {
      size +=
          com.google.protobuf.CodedOutputStream.computeUInt64Size(
              3, (long) ((java.lang.Long) target_));
    }
    for (int i = 0; i < part_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(4, part_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.spanner.v1.KeyRecipe)) {
      return super.equals(obj);
    }
    com.google.spanner.v1.KeyRecipe other = (com.google.spanner.v1.KeyRecipe) obj;

    if (!getPartList().equals(other.getPartList())) return false;
    if (!getTargetCase().equals(other.getTargetCase())) return false;
    switch (targetCase_) {
      case 1:
        if (!getTableName().equals(other.getTableName())) return false;
        break;
      case 2:
        if (!getIndexName().equals(other.getIndexName())) return false;
        break;
      case 3:
        if (getOperationUid() != other.getOperationUid()) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getPartCount() > 0) {
      hash = (37 * hash) + PART_FIELD_NUMBER;
      hash = (53 * hash) + getPartList().hashCode();
    }
    switch (targetCase_) {
      case 1:
        hash = (37 * hash) + TABLE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getTableName().hashCode();
        break;
      case 2:
        hash = (37 * hash) + INDEX_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getIndexName().hashCode();
        break;
      case 3:
        hash = (37 * hash) + OPERATION_UID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getOperationUid());
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.spanner.v1.KeyRecipe parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.spanner.v1.KeyRecipe parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.spanner.v1.KeyRecipe parseFrom(com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.spanner.v1.KeyRecipe parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.spanner.v1.KeyRecipe parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.spanner.v1.KeyRecipe parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.spanner.v1.KeyRecipe parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.spanner.v1.KeyRecipe parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.spanner.v1.KeyRecipe parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.spanner.v1.KeyRecipe parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.spanner.v1.KeyRecipe parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.spanner.v1.KeyRecipe parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.spanner.v1.KeyRecipe prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * A `KeyRecipe` provides the metadata required to translate reads, mutations,
   * and queries into a byte array in "sortable string format" (ssformat)that can
   * be used with `Range`s to route requests. Note that the client *must* tolerate
   * `KeyRecipe`s that appear to be invalid, since the `KeyRecipe` format may
   * change over time. Requests with invalid `KeyRecipe`s should be routed to a
   * default server.
   * </pre>
   *
   * Protobuf type {@code google.spanner.v1.KeyRecipe}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.spanner.v1.KeyRecipe)
      com.google.spanner.v1.KeyRecipeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.spanner.v1.LocationProto
          .internal_static_google_spanner_v1_KeyRecipe_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.spanner.v1.LocationProto
          .internal_static_google_spanner_v1_KeyRecipe_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.spanner.v1.KeyRecipe.class, com.google.spanner.v1.KeyRecipe.Builder.class);
    }

    // Construct using com.google.spanner.v1.KeyRecipe.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (partBuilder_ == null) {
        part_ = java.util.Collections.emptyList();
      } else {
        part_ = null;
        partBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      targetCase_ = 0;
      target_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.spanner.v1.LocationProto
          .internal_static_google_spanner_v1_KeyRecipe_descriptor;
    }

    @java.lang.Override
    public com.google.spanner.v1.KeyRecipe getDefaultInstanceForType() {
      return com.google.spanner.v1.KeyRecipe.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.spanner.v1.KeyRecipe build() {
      com.google.spanner.v1.KeyRecipe result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.spanner.v1.KeyRecipe buildPartial() {
      com.google.spanner.v1.KeyRecipe result = new com.google.spanner.v1.KeyRecipe(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.spanner.v1.KeyRecipe result) {
      if (partBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          part_ = java.util.Collections.unmodifiableList(part_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.part_ = part_;
      } else {
        result.part_ = partBuilder_.build();
      }
    }

    private void buildPartial0(com.google.spanner.v1.KeyRecipe result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(com.google.spanner.v1.KeyRecipe result) {
      result.targetCase_ = targetCase_;
      result.target_ = this.target_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.spanner.v1.KeyRecipe) {
        return mergeFrom((com.google.spanner.v1.KeyRecipe) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.spanner.v1.KeyRecipe other) {
      if (other == com.google.spanner.v1.KeyRecipe.getDefaultInstance()) return this;
      if (partBuilder_ == null) {
        if (!other.part_.isEmpty()) {
          if (part_.isEmpty()) {
            part_ = other.part_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensurePartIsMutable();
            part_.addAll(other.part_);
          }
          onChanged();
        }
      } else {
        if (!other.part_.isEmpty()) {
          if (partBuilder_.isEmpty()) {
            partBuilder_.dispose();
            partBuilder_ = null;
            part_ = other.part_;
            bitField0_ = (bitField0_ & ~0x00000008);
            partBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getPartFieldBuilder()
                    : null;
          } else {
            partBuilder_.addAllMessages(other.part_);
          }
        }
      }
      switch (other.getTargetCase()) {
        case TABLE_NAME:
          {
            targetCase_ = 1;
            target_ = other.target_;
            onChanged();
            break;
          }
        case INDEX_NAME:
          {
            targetCase_ = 2;
            target_ = other.target_;
            onChanged();
            break;
          }
        case OPERATION_UID:
          {
            setOperationUid(other.getOperationUid());
            break;
          }
        case TARGET_NOT_SET:
          {
            break;
          }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                java.lang.String s = input.readStringRequireUtf8();
                targetCase_ = 1;
                target_ = s;
                break;
              } // case 10
            case 18:
              {
                java.lang.String s = input.readStringRequireUtf8();
                targetCase_ = 2;
                target_ = s;
                break;
              } // case 18
            case 24:
              {
                target_ = input.readUInt64();
                targetCase_ = 3;
                break;
              } // case 24
            case 34:
              {
                com.google.spanner.v1.KeyRecipe.Part m =
                    input.readMessage(
                        com.google.spanner.v1.KeyRecipe.Part.parser(), extensionRegistry);
                if (partBuilder_ == null) {
                  ensurePartIsMutable();
                  part_.add(m);
                } else {
                  partBuilder_.addMessage(m);
                }
                break;
              } // case 34
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int targetCase_ = 0;
    private java.lang.Object target_;

    public TargetCase getTargetCase() {
      return TargetCase.forNumber(targetCase_);
    }

    public Builder clearTarget() {
      targetCase_ = 0;
      target_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    /**
     *
     *
     * <pre>
     * A table name, matching the name from the database schema.
     * </pre>
     *
     * <code>string table_name = 1;</code>
     *
     * @return Whether the tableName field is set.
     */
    @java.lang.Override
    public boolean hasTableName() {
      return targetCase_ == 1;
    }
    /**
     *
     *
     * <pre>
     * A table name, matching the name from the database schema.
     * </pre>
     *
     * <code>string table_name = 1;</code>
     *
     * @return The tableName.
     */
    @java.lang.Override
    public java.lang.String getTableName() {
      java.lang.Object ref = "";
      if (targetCase_ == 1) {
        ref = target_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (targetCase_ == 1) {
          target_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * A table name, matching the name from the database schema.
     * </pre>
     *
     * <code>string table_name = 1;</code>
     *
     * @return The bytes for tableName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getTableNameBytes() {
      java.lang.Object ref = "";
      if (targetCase_ == 1) {
        ref = target_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        if (targetCase_ == 1) {
          target_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * A table name, matching the name from the database schema.
     * </pre>
     *
     * <code>string table_name = 1;</code>
     *
     * @param value The tableName to set.
     * @return This builder for chaining.
     */
    public Builder setTableName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      targetCase_ = 1;
      target_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * A table name, matching the name from the database schema.
     * </pre>
     *
     * <code>string table_name = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearTableName() {
      if (targetCase_ == 1) {
        targetCase_ = 0;
        target_ = null;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A table name, matching the name from the database schema.
     * </pre>
     *
     * <code>string table_name = 1;</code>
     *
     * @param value The bytes for tableName to set.
     * @return This builder for chaining.
     */
    public Builder setTableNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      targetCase_ = 1;
      target_ = value;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * An index name, matching the name from the database schema.
     * </pre>
     *
     * <code>string index_name = 2;</code>
     *
     * @return Whether the indexName field is set.
     */
    @java.lang.Override
    public boolean hasIndexName() {
      return targetCase_ == 2;
    }
    /**
     *
     *
     * <pre>
     * An index name, matching the name from the database schema.
     * </pre>
     *
     * <code>string index_name = 2;</code>
     *
     * @return The indexName.
     */
    @java.lang.Override
    public java.lang.String getIndexName() {
      java.lang.Object ref = "";
      if (targetCase_ == 2) {
        ref = target_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (targetCase_ == 2) {
          target_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * An index name, matching the name from the database schema.
     * </pre>
     *
     * <code>string index_name = 2;</code>
     *
     * @return The bytes for indexName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getIndexNameBytes() {
      java.lang.Object ref = "";
      if (targetCase_ == 2) {
        ref = target_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        if (targetCase_ == 2) {
          target_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * An index name, matching the name from the database schema.
     * </pre>
     *
     * <code>string index_name = 2;</code>
     *
     * @param value The indexName to set.
     * @return This builder for chaining.
     */
    public Builder setIndexName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      targetCase_ = 2;
      target_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * An index name, matching the name from the database schema.
     * </pre>
     *
     * <code>string index_name = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearIndexName() {
      if (targetCase_ == 2) {
        targetCase_ = 0;
        target_ = null;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * An index name, matching the name from the database schema.
     * </pre>
     *
     * <code>string index_name = 2;</code>
     *
     * @param value The bytes for indexName to set.
     * @return This builder for chaining.
     */
    public Builder setIndexNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      targetCase_ = 2;
      target_ = value;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The UID of a query, matching the UID from `RoutingHint`.
     * </pre>
     *
     * <code>uint64 operation_uid = 3;</code>
     *
     * @return Whether the operationUid field is set.
     */
    public boolean hasOperationUid() {
      return targetCase_ == 3;
    }
    /**
     *
     *
     * <pre>
     * The UID of a query, matching the UID from `RoutingHint`.
     * </pre>
     *
     * <code>uint64 operation_uid = 3;</code>
     *
     * @return The operationUid.
     */
    public long getOperationUid() {
      if (targetCase_ == 3) {
        return (java.lang.Long) target_;
      }
      return 0L;
    }
    /**
     *
     *
     * <pre>
     * The UID of a query, matching the UID from `RoutingHint`.
     * </pre>
     *
     * <code>uint64 operation_uid = 3;</code>
     *
     * @param value The operationUid to set.
     * @return This builder for chaining.
     */
    public Builder setOperationUid(long value) {

      targetCase_ = 3;
      target_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The UID of a query, matching the UID from `RoutingHint`.
     * </pre>
     *
     * <code>uint64 operation_uid = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearOperationUid() {
      if (targetCase_ == 3) {
        targetCase_ = 0;
        target_ = null;
        onChanged();
      }
      return this;
    }

    private java.util.List<com.google.spanner.v1.KeyRecipe.Part> part_ =
        java.util.Collections.emptyList();

    private void ensurePartIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        part_ = new java.util.ArrayList<com.google.spanner.v1.KeyRecipe.Part>(part_);
        bitField0_ |= 0x00000008;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.spanner.v1.KeyRecipe.Part,
            com.google.spanner.v1.KeyRecipe.Part.Builder,
            com.google.spanner.v1.KeyRecipe.PartOrBuilder>
        partBuilder_;

    /**
     *
     *
     * <pre>
     * Parts are in the order they should appear in the encoded key.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
     */
    public java.util.List<com.google.spanner.v1.KeyRecipe.Part> getPartList() {
      if (partBuilder_ == null) {
        return java.util.Collections.unmodifiableList(part_);
      } else {
        return partBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Parts are in the order they should appear in the encoded key.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
     */
    public int getPartCount() {
      if (partBuilder_ == null) {
        return part_.size();
      } else {
        return partBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Parts are in the order they should appear in the encoded key.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
     */
    public com.google.spanner.v1.KeyRecipe.Part getPart(int index) {
      if (partBuilder_ == null) {
        return part_.get(index);
      } else {
        return partBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Parts are in the order they should appear in the encoded key.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
     */
    public Builder setPart(int index, com.google.spanner.v1.KeyRecipe.Part value) {
      if (partBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePartIsMutable();
        part_.set(index, value);
        onChanged();
      } else {
        partBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Parts are in the order they should appear in the encoded key.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
     */
    public Builder setPart(
        int index, com.google.spanner.v1.KeyRecipe.Part.Builder builderForValue) {
      if (partBuilder_ == null) {
        ensurePartIsMutable();
        part_.set(index, builderForValue.build());
        onChanged();
      } else {
        partBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Parts are in the order they should appear in the encoded key.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
     */
    public Builder addPart(com.google.spanner.v1.KeyRecipe.Part value) {
      if (partBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePartIsMutable();
        part_.add(value);
        onChanged();
      } else {
        partBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Parts are in the order they should appear in the encoded key.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
     */
    public Builder addPart(int index, com.google.spanner.v1.KeyRecipe.Part value) {
      if (partBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePartIsMutable();
        part_.add(index, value);
        onChanged();
      } else {
        partBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Parts are in the order they should appear in the encoded key.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
     */
    public Builder addPart(com.google.spanner.v1.KeyRecipe.Part.Builder builderForValue) {
      if (partBuilder_ == null) {
        ensurePartIsMutable();
        part_.add(builderForValue.build());
        onChanged();
      } else {
        partBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Parts are in the order they should appear in the encoded key.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
     */
    public Builder addPart(
        int index, com.google.spanner.v1.KeyRecipe.Part.Builder builderForValue) {
      if (partBuilder_ == null) {
        ensurePartIsMutable();
        part_.add(index, builderForValue.build());
        onChanged();
      } else {
        partBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Parts are in the order they should appear in the encoded key.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
     */
    public Builder addAllPart(
        java.lang.Iterable<? extends com.google.spanner.v1.KeyRecipe.Part> values) {
      if (partBuilder_ == null) {
        ensurePartIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, part_);
        onChanged();
      } else {
        partBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Parts are in the order they should appear in the encoded key.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
     */
    public Builder clearPart() {
      if (partBuilder_ == null) {
        part_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        partBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Parts are in the order they should appear in the encoded key.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
     */
    public Builder removePart(int index) {
      if (partBuilder_ == null) {
        ensurePartIsMutable();
        part_.remove(index);
        onChanged();
      } else {
        partBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Parts are in the order they should appear in the encoded key.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
     */
    public com.google.spanner.v1.KeyRecipe.Part.Builder getPartBuilder(int index) {
      return getPartFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Parts are in the order they should appear in the encoded key.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
     */
    public com.google.spanner.v1.KeyRecipe.PartOrBuilder getPartOrBuilder(int index) {
      if (partBuilder_ == null) {
        return part_.get(index);
      } else {
        return partBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Parts are in the order they should appear in the encoded key.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
     */
    public java.util.List<? extends com.google.spanner.v1.KeyRecipe.PartOrBuilder>
        getPartOrBuilderList() {
      if (partBuilder_ != null) {
        return partBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(part_);
      }
    }
    /**
     *
     *
     * <pre>
     * Parts are in the order they should appear in the encoded key.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
     */
    public com.google.spanner.v1.KeyRecipe.Part.Builder addPartBuilder() {
      return getPartFieldBuilder()
          .addBuilder(com.google.spanner.v1.KeyRecipe.Part.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Parts are in the order they should appear in the encoded key.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
     */
    public com.google.spanner.v1.KeyRecipe.Part.Builder addPartBuilder(int index) {
      return getPartFieldBuilder()
          .addBuilder(index, com.google.spanner.v1.KeyRecipe.Part.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Parts are in the order they should appear in the encoded key.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
     */
    public java.util.List<com.google.spanner.v1.KeyRecipe.Part.Builder> getPartBuilderList() {
      return getPartFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.spanner.v1.KeyRecipe.Part,
            com.google.spanner.v1.KeyRecipe.Part.Builder,
            com.google.spanner.v1.KeyRecipe.PartOrBuilder>
        getPartFieldBuilder() {
      if (partBuilder_ == null) {
        partBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.spanner.v1.KeyRecipe.Part,
                com.google.spanner.v1.KeyRecipe.Part.Builder,
                com.google.spanner.v1.KeyRecipe.PartOrBuilder>(
                part_, ((bitField0_ & 0x00000008) != 0), getParentForChildren(), isClean());
        part_ = null;
      }
      return partBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.spanner.v1.KeyRecipe)
  }

  // @@protoc_insertion_point(class_scope:google.spanner.v1.KeyRecipe)
  private static final com.google.spanner.v1.KeyRecipe DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.spanner.v1.KeyRecipe();
  }

  public static com.google.spanner.v1.KeyRecipe getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<KeyRecipe> PARSER =
      new com.google.protobuf.AbstractParser<KeyRecipe>() {
        @java.lang.Override
        public KeyRecipe parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<KeyRecipe> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<KeyRecipe> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.spanner.v1.KeyRecipe getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
