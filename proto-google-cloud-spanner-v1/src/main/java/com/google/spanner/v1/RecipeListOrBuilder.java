/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/spanner/v1/location.proto

// Protobuf Java Version: 3.25.8
package com.google.spanner.v1;

public interface RecipeListOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.spanner.v1.RecipeList)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The schema generation of the recipes. To be sent to the server in
   * `RoutingHint.schema_generation` whenever one of the recipes is used.
   * `schema_generation` values are comparable with each other; if generation A
   * compares greater than generation B, then A is a more recent schema than B.
   * Clients should in general aim to cache only the latest schema generation,
   * and discard more stale recipes.
   * </pre>
   *
   * <code>bytes schema_generation = 1;</code>
   *
   * @return The schemaGeneration.
   */
  com.google.protobuf.ByteString getSchemaGeneration();

  /**
   *
   *
   * <pre>
   * A list of recipes to be cached.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.KeyRecipe recipe = 3;</code>
   */
  java.util.List<com.google.spanner.v1.KeyRecipe> getRecipeList();

  /**
   *
   *
   * <pre>
   * A list of recipes to be cached.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.KeyRecipe recipe = 3;</code>
   */
  com.google.spanner.v1.KeyRecipe getRecipe(int index);

  /**
   *
   *
   * <pre>
   * A list of recipes to be cached.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.KeyRecipe recipe = 3;</code>
   */
  int getRecipeCount();

  /**
   *
   *
   * <pre>
   * A list of recipes to be cached.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.KeyRecipe recipe = 3;</code>
   */
  java.util.List<? extends com.google.spanner.v1.KeyRecipeOrBuilder> getRecipeOrBuilderList();

  /**
   *
   *
   * <pre>
   * A list of recipes to be cached.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.KeyRecipe recipe = 3;</code>
   */
  com.google.spanner.v1.KeyRecipeOrBuilder getRecipeOrBuilder(int index);
}
