/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/spanner/v1/spanner.proto

package com.google.spanner.v1;

/**
 *
 *
 * <pre>
 * Options for a PartitionQueryRequest and
 * PartitionReadRequest.
 * </pre>
 *
 * Protobuf type {@code google.spanner.v1.PartitionOptions}
 */
public final class PartitionOptions extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.spanner.v1.PartitionOptions)
    PartitionOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use PartitionOptions.newBuilder() to construct.
  private PartitionOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private PartitionOptions() {}

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(UnusedPrivateParameter unused) {
    return new PartitionOptions();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  private PartitionOptions(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8:
            {
              partitionSizeBytes_ = input.readInt64();
              break;
            }
          case 16:
            {
              maxPartitions_ = input.readInt64();
              break;
            }
          default:
            {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return SpannerProto.internal_static_google_spanner_v1_PartitionOptions_descriptor;
  }

  @Override
  protected FieldAccessorTable internalGetFieldAccessorTable() {
    return SpannerProto.internal_static_google_spanner_v1_PartitionOptions_fieldAccessorTable
        .ensureFieldAccessorsInitialized(PartitionOptions.class, Builder.class);
  }

  public static final int PARTITION_SIZE_BYTES_FIELD_NUMBER = 1;
  private long partitionSizeBytes_;
  /**
   *
   *
   * <pre>
   * **Note:** This hint is currently ignored by PartitionQuery and
   * PartitionRead requests.
   * The desired data size for each partition generated.  The default for this
   * option is currently 1 GiB.  This is only a hint. The actual size of each
   * partition may be smaller or larger than this size request.
   * </pre>
   *
   * <code>int64 partition_size_bytes = 1;</code>
   *
   * @return The partitionSizeBytes.
   */
  @Override
  public long getPartitionSizeBytes() {
    return partitionSizeBytes_;
  }

  public static final int MAX_PARTITIONS_FIELD_NUMBER = 2;
  private long maxPartitions_;
  /**
   *
   *
   * <pre>
   * **Note:** This hint is currently ignored by PartitionQuery and
   * PartitionRead requests.
   * The desired maximum number of partitions to return.  For example, this may
   * be set to the number of workers available.  The default for this option
   * is currently 10,000. The maximum value is currently 200,000.  This is only
   * a hint.  The actual number of partitions returned may be smaller or larger
   * than this maximum count request.
   * </pre>
   *
   * <code>int64 max_partitions = 2;</code>
   *
   * @return The maxPartitions.
   */
  @Override
  public long getMaxPartitions() {
    return maxPartitions_;
  }

  private byte memoizedIsInitialized = -1;

  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (partitionSizeBytes_ != 0L) {
      output.writeInt64(1, partitionSizeBytes_);
    }
    if (maxPartitions_ != 0L) {
      output.writeInt64(2, maxPartitions_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (partitionSizeBytes_ != 0L) {
      size += com.google.protobuf.CodedOutputStream.computeInt64Size(1, partitionSizeBytes_);
    }
    if (maxPartitions_ != 0L) {
      size += com.google.protobuf.CodedOutputStream.computeInt64Size(2, maxPartitions_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof PartitionOptions)) {
      return super.equals(obj);
    }
    PartitionOptions other = (PartitionOptions) obj;

    if (getPartitionSizeBytes() != other.getPartitionSizeBytes()) return false;
    if (getMaxPartitions() != other.getMaxPartitions()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PARTITION_SIZE_BYTES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getPartitionSizeBytes());
    hash = (37 * hash) + MAX_PARTITIONS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getMaxPartitions());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static PartitionOptions parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static PartitionOptions parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static PartitionOptions parseFrom(com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static PartitionOptions parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static PartitionOptions parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static PartitionOptions parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static PartitionOptions parseFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static PartitionOptions parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static PartitionOptions parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static PartitionOptions parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static PartitionOptions parseFrom(com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static PartitionOptions parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(PartitionOptions prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Options for a PartitionQueryRequest and
   * PartitionReadRequest.
   * </pre>
   *
   * Protobuf type {@code google.spanner.v1.PartitionOptions}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.spanner.v1.PartitionOptions)
      PartitionOptionsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return SpannerProto.internal_static_google_spanner_v1_PartitionOptions_descriptor;
    }

    @Override
    protected FieldAccessorTable internalGetFieldAccessorTable() {
      return SpannerProto.internal_static_google_spanner_v1_PartitionOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(PartitionOptions.class, Builder.class);
    }

    // Construct using com.google.spanner.v1.PartitionOptions.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {}
    }

    @Override
    public Builder clear() {
      super.clear();
      partitionSizeBytes_ = 0L;

      maxPartitions_ = 0L;

      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return SpannerProto.internal_static_google_spanner_v1_PartitionOptions_descriptor;
    }

    @Override
    public PartitionOptions getDefaultInstanceForType() {
      return PartitionOptions.getDefaultInstance();
    }

    @Override
    public PartitionOptions build() {
      PartitionOptions result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public PartitionOptions buildPartial() {
      PartitionOptions result = new PartitionOptions(this);
      result.partitionSizeBytes_ = partitionSizeBytes_;
      result.maxPartitions_ = maxPartitions_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }

    @Override
    public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field, Object value) {
      return super.setField(field, value);
    }

    @Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, Object value) {
      return super.addRepeatedField(field, value);
    }

    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof PartitionOptions) {
        return mergeFrom((PartitionOptions) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(PartitionOptions other) {
      if (other == PartitionOptions.getDefaultInstance()) return this;
      if (other.getPartitionSizeBytes() != 0L) {
        setPartitionSizeBytes(other.getPartitionSizeBytes());
      }
      if (other.getMaxPartitions() != 0L) {
        setMaxPartitions(other.getMaxPartitions());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      PartitionOptions parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (PartitionOptions) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private long partitionSizeBytes_;
    /**
     *
     *
     * <pre>
     * **Note:** This hint is currently ignored by PartitionQuery and
     * PartitionRead requests.
     * The desired data size for each partition generated.  The default for this
     * option is currently 1 GiB.  This is only a hint. The actual size of each
     * partition may be smaller or larger than this size request.
     * </pre>
     *
     * <code>int64 partition_size_bytes = 1;</code>
     *
     * @return The partitionSizeBytes.
     */
    @Override
    public long getPartitionSizeBytes() {
      return partitionSizeBytes_;
    }
    /**
     *
     *
     * <pre>
     * **Note:** This hint is currently ignored by PartitionQuery and
     * PartitionRead requests.
     * The desired data size for each partition generated.  The default for this
     * option is currently 1 GiB.  This is only a hint. The actual size of each
     * partition may be smaller or larger than this size request.
     * </pre>
     *
     * <code>int64 partition_size_bytes = 1;</code>
     *
     * @param value The partitionSizeBytes to set.
     * @return This builder for chaining.
     */
    public Builder setPartitionSizeBytes(long value) {

      partitionSizeBytes_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * **Note:** This hint is currently ignored by PartitionQuery and
     * PartitionRead requests.
     * The desired data size for each partition generated.  The default for this
     * option is currently 1 GiB.  This is only a hint. The actual size of each
     * partition may be smaller or larger than this size request.
     * </pre>
     *
     * <code>int64 partition_size_bytes = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPartitionSizeBytes() {

      partitionSizeBytes_ = 0L;
      onChanged();
      return this;
    }

    private long maxPartitions_;
    /**
     *
     *
     * <pre>
     * **Note:** This hint is currently ignored by PartitionQuery and
     * PartitionRead requests.
     * The desired maximum number of partitions to return.  For example, this may
     * be set to the number of workers available.  The default for this option
     * is currently 10,000. The maximum value is currently 200,000.  This is only
     * a hint.  The actual number of partitions returned may be smaller or larger
     * than this maximum count request.
     * </pre>
     *
     * <code>int64 max_partitions = 2;</code>
     *
     * @return The maxPartitions.
     */
    @Override
    public long getMaxPartitions() {
      return maxPartitions_;
    }
    /**
     *
     *
     * <pre>
     * **Note:** This hint is currently ignored by PartitionQuery and
     * PartitionRead requests.
     * The desired maximum number of partitions to return.  For example, this may
     * be set to the number of workers available.  The default for this option
     * is currently 10,000. The maximum value is currently 200,000.  This is only
     * a hint.  The actual number of partitions returned may be smaller or larger
     * than this maximum count request.
     * </pre>
     *
     * <code>int64 max_partitions = 2;</code>
     *
     * @param value The maxPartitions to set.
     * @return This builder for chaining.
     */
    public Builder setMaxPartitions(long value) {

      maxPartitions_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * **Note:** This hint is currently ignored by PartitionQuery and
     * PartitionRead requests.
     * The desired maximum number of partitions to return.  For example, this may
     * be set to the number of workers available.  The default for this option
     * is currently 10,000. The maximum value is currently 200,000.  This is only
     * a hint.  The actual number of partitions returned may be smaller or larger
     * than this maximum count request.
     * </pre>
     *
     * <code>int64 max_partitions = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearMaxPartitions() {

      maxPartitions_ = 0L;
      onChanged();
      return this;
    }

    @Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.spanner.v1.PartitionOptions)
  }

  // @@protoc_insertion_point(class_scope:google.spanner.v1.PartitionOptions)
  private static final PartitionOptions DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new PartitionOptions();
  }

  public static PartitionOptions getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PartitionOptions> PARSER =
      new com.google.protobuf.AbstractParser<PartitionOptions>() {
        @Override
        public PartitionOptions parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PartitionOptions(input, extensionRegistry);
        }
      };

  public static com.google.protobuf.Parser<PartitionOptions> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<PartitionOptions> getParserForType() {
    return PARSER;
  }

  @Override
  public PartitionOptions getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
