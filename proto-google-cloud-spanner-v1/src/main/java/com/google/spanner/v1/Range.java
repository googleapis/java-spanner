/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/spanner/v1/location.proto

// Protobuf Java Version: 3.25.8
package com.google.spanner.v1;

/**
 *
 *
 * <pre>
 * A `Range` represents a range of keys in a database. The keys themselves
 * are encoded in "sortable string format", also known as ssformat. Consult
 * Spanner's open source client libraries for details on the encoding.
 *
 * Each range represents a contiguous range of rows, possibly from multiple
 * tables/indexes. Each range is associated with a single paxos group (known as
 * a "group" throughout this API), a split (which names the exact range within
 * the group), and a generation that can be used to determine whether a given
 * `Range` represents a newer or older location for the key range.
 * </pre>
 *
 * Protobuf type {@code google.spanner.v1.Range}
 */
public final class Range extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.spanner.v1.Range)
    RangeOrBuilder {
  private static final long serialVersionUID = 0L;

  // Use Range.newBuilder() to construct.
  private Range(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private Range() {
    startKey_ = com.google.protobuf.ByteString.EMPTY;
    limitKey_ = com.google.protobuf.ByteString.EMPTY;
    generation_ = com.google.protobuf.ByteString.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new Range();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.spanner.v1.LocationProto.internal_static_google_spanner_v1_Range_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.spanner.v1.LocationProto
        .internal_static_google_spanner_v1_Range_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.spanner.v1.Range.class, com.google.spanner.v1.Range.Builder.class);
  }

  public static final int START_KEY_FIELD_NUMBER = 1;
  private com.google.protobuf.ByteString startKey_ = com.google.protobuf.ByteString.EMPTY;

  /**
   *
   *
   * <pre>
   * The start key of the range, inclusive. Encoded in "sortable string format"
   * (ssformat).
   * </pre>
   *
   * <code>bytes start_key = 1;</code>
   *
   * @return The startKey.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getStartKey() {
    return startKey_;
  }

  public static final int LIMIT_KEY_FIELD_NUMBER = 2;
  private com.google.protobuf.ByteString limitKey_ = com.google.protobuf.ByteString.EMPTY;

  /**
   *
   *
   * <pre>
   * The limit key of the range, exclusive. Encoded in "sortable string format"
   * (ssformat).
   * </pre>
   *
   * <code>bytes limit_key = 2;</code>
   *
   * @return The limitKey.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getLimitKey() {
    return limitKey_;
  }

  public static final int GROUP_UID_FIELD_NUMBER = 3;
  private long groupUid_ = 0L;

  /**
   *
   *
   * <pre>
   * The UID of the paxos group where this range is stored. UIDs are unique
   * within the database. References `Group.group_uid`.
   * </pre>
   *
   * <code>uint64 group_uid = 3;</code>
   *
   * @return The groupUid.
   */
  @java.lang.Override
  public long getGroupUid() {
    return groupUid_;
  }

  public static final int SPLIT_ID_FIELD_NUMBER = 4;
  private long splitId_ = 0L;

  /**
   *
   *
   * <pre>
   * A group can store multiple ranges of keys. Each key range is named by an
   * ID (the split ID). Within a group, split IDs are unique. The `split_id`
   * names the exact split in `group_uid` where this range is stored.
   * </pre>
   *
   * <code>uint64 split_id = 4;</code>
   *
   * @return The splitId.
   */
  @java.lang.Override
  public long getSplitId() {
    return splitId_;
  }

  public static final int GENERATION_FIELD_NUMBER = 5;
  private com.google.protobuf.ByteString generation_ = com.google.protobuf.ByteString.EMPTY;

  /**
   *
   *
   * <pre>
   * `generation` indicates the freshness of the range information contained
   * in this proto. Generations can be compared lexicographically; if generation
   * A is greater than generation B, then the `Range` corresponding to A is
   * newer than the `Range` corresponding to B, and should be used
   * preferentially.
   * </pre>
   *
   * <code>bytes generation = 5;</code>
   *
   * @return The generation.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getGeneration() {
    return generation_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!startKey_.isEmpty()) {
      output.writeBytes(1, startKey_);
    }
    if (!limitKey_.isEmpty()) {
      output.writeBytes(2, limitKey_);
    }
    if (groupUid_ != 0L) {
      output.writeUInt64(3, groupUid_);
    }
    if (splitId_ != 0L) {
      output.writeUInt64(4, splitId_);
    }
    if (!generation_.isEmpty()) {
      output.writeBytes(5, generation_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!startKey_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream.computeBytesSize(1, startKey_);
    }
    if (!limitKey_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream.computeBytesSize(2, limitKey_);
    }
    if (groupUid_ != 0L) {
      size += com.google.protobuf.CodedOutputStream.computeUInt64Size(3, groupUid_);
    }
    if (splitId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream.computeUInt64Size(4, splitId_);
    }
    if (!generation_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream.computeBytesSize(5, generation_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.spanner.v1.Range)) {
      return super.equals(obj);
    }
    com.google.spanner.v1.Range other = (com.google.spanner.v1.Range) obj;

    if (!getStartKey().equals(other.getStartKey())) return false;
    if (!getLimitKey().equals(other.getLimitKey())) return false;
    if (getGroupUid() != other.getGroupUid()) return false;
    if (getSplitId() != other.getSplitId()) return false;
    if (!getGeneration().equals(other.getGeneration())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + START_KEY_FIELD_NUMBER;
    hash = (53 * hash) + getStartKey().hashCode();
    hash = (37 * hash) + LIMIT_KEY_FIELD_NUMBER;
    hash = (53 * hash) + getLimitKey().hashCode();
    hash = (37 * hash) + GROUP_UID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getGroupUid());
    hash = (37 * hash) + SPLIT_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getSplitId());
    hash = (37 * hash) + GENERATION_FIELD_NUMBER;
    hash = (53 * hash) + getGeneration().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.spanner.v1.Range parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.spanner.v1.Range parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.spanner.v1.Range parseFrom(com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.spanner.v1.Range parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.spanner.v1.Range parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.spanner.v1.Range parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.spanner.v1.Range parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.spanner.v1.Range parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.spanner.v1.Range parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.spanner.v1.Range parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.spanner.v1.Range parseFrom(com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.spanner.v1.Range parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.spanner.v1.Range prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /**
   *
   *
   * <pre>
   * A `Range` represents a range of keys in a database. The keys themselves
   * are encoded in "sortable string format", also known as ssformat. Consult
   * Spanner's open source client libraries for details on the encoding.
   *
   * Each range represents a contiguous range of rows, possibly from multiple
   * tables/indexes. Each range is associated with a single paxos group (known as
   * a "group" throughout this API), a split (which names the exact range within
   * the group), and a generation that can be used to determine whether a given
   * `Range` represents a newer or older location for the key range.
   * </pre>
   *
   * Protobuf type {@code google.spanner.v1.Range}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.spanner.v1.Range)
      com.google.spanner.v1.RangeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.spanner.v1.LocationProto.internal_static_google_spanner_v1_Range_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.spanner.v1.LocationProto
          .internal_static_google_spanner_v1_Range_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.spanner.v1.Range.class, com.google.spanner.v1.Range.Builder.class);
    }

    // Construct using com.google.spanner.v1.Range.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      startKey_ = com.google.protobuf.ByteString.EMPTY;
      limitKey_ = com.google.protobuf.ByteString.EMPTY;
      groupUid_ = 0L;
      splitId_ = 0L;
      generation_ = com.google.protobuf.ByteString.EMPTY;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.spanner.v1.LocationProto.internal_static_google_spanner_v1_Range_descriptor;
    }

    @java.lang.Override
    public com.google.spanner.v1.Range getDefaultInstanceForType() {
      return com.google.spanner.v1.Range.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.spanner.v1.Range build() {
      com.google.spanner.v1.Range result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.spanner.v1.Range buildPartial() {
      com.google.spanner.v1.Range result = new com.google.spanner.v1.Range(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.spanner.v1.Range result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.startKey_ = startKey_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.limitKey_ = limitKey_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.groupUid_ = groupUid_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.splitId_ = splitId_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.generation_ = generation_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.spanner.v1.Range) {
        return mergeFrom((com.google.spanner.v1.Range) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.spanner.v1.Range other) {
      if (other == com.google.spanner.v1.Range.getDefaultInstance()) return this;
      if (other.getStartKey() != com.google.protobuf.ByteString.EMPTY) {
        setStartKey(other.getStartKey());
      }
      if (other.getLimitKey() != com.google.protobuf.ByteString.EMPTY) {
        setLimitKey(other.getLimitKey());
      }
      if (other.getGroupUid() != 0L) {
        setGroupUid(other.getGroupUid());
      }
      if (other.getSplitId() != 0L) {
        setSplitId(other.getSplitId());
      }
      if (other.getGeneration() != com.google.protobuf.ByteString.EMPTY) {
        setGeneration(other.getGeneration());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                startKey_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                limitKey_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            case 24:
              {
                groupUid_ = input.readUInt64();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
            case 32:
              {
                splitId_ = input.readUInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
            case 42:
              {
                generation_ = input.readBytes();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.ByteString startKey_ = com.google.protobuf.ByteString.EMPTY;

    /**
     *
     *
     * <pre>
     * The start key of the range, inclusive. Encoded in "sortable string format"
     * (ssformat).
     * </pre>
     *
     * <code>bytes start_key = 1;</code>
     *
     * @return The startKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getStartKey() {
      return startKey_;
    }

    /**
     *
     *
     * <pre>
     * The start key of the range, inclusive. Encoded in "sortable string format"
     * (ssformat).
     * </pre>
     *
     * <code>bytes start_key = 1;</code>
     *
     * @param value The startKey to set.
     * @return This builder for chaining.
     */
    public Builder setStartKey(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      startKey_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The start key of the range, inclusive. Encoded in "sortable string format"
     * (ssformat).
     * </pre>
     *
     * <code>bytes start_key = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearStartKey() {
      bitField0_ = (bitField0_ & ~0x00000001);
      startKey_ = getDefaultInstance().getStartKey();
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString limitKey_ = com.google.protobuf.ByteString.EMPTY;

    /**
     *
     *
     * <pre>
     * The limit key of the range, exclusive. Encoded in "sortable string format"
     * (ssformat).
     * </pre>
     *
     * <code>bytes limit_key = 2;</code>
     *
     * @return The limitKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getLimitKey() {
      return limitKey_;
    }

    /**
     *
     *
     * <pre>
     * The limit key of the range, exclusive. Encoded in "sortable string format"
     * (ssformat).
     * </pre>
     *
     * <code>bytes limit_key = 2;</code>
     *
     * @param value The limitKey to set.
     * @return This builder for chaining.
     */
    public Builder setLimitKey(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      limitKey_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The limit key of the range, exclusive. Encoded in "sortable string format"
     * (ssformat).
     * </pre>
     *
     * <code>bytes limit_key = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearLimitKey() {
      bitField0_ = (bitField0_ & ~0x00000002);
      limitKey_ = getDefaultInstance().getLimitKey();
      onChanged();
      return this;
    }

    private long groupUid_;

    /**
     *
     *
     * <pre>
     * The UID of the paxos group where this range is stored. UIDs are unique
     * within the database. References `Group.group_uid`.
     * </pre>
     *
     * <code>uint64 group_uid = 3;</code>
     *
     * @return The groupUid.
     */
    @java.lang.Override
    public long getGroupUid() {
      return groupUid_;
    }

    /**
     *
     *
     * <pre>
     * The UID of the paxos group where this range is stored. UIDs are unique
     * within the database. References `Group.group_uid`.
     * </pre>
     *
     * <code>uint64 group_uid = 3;</code>
     *
     * @param value The groupUid to set.
     * @return This builder for chaining.
     */
    public Builder setGroupUid(long value) {

      groupUid_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The UID of the paxos group where this range is stored. UIDs are unique
     * within the database. References `Group.group_uid`.
     * </pre>
     *
     * <code>uint64 group_uid = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearGroupUid() {
      bitField0_ = (bitField0_ & ~0x00000004);
      groupUid_ = 0L;
      onChanged();
      return this;
    }

    private long splitId_;

    /**
     *
     *
     * <pre>
     * A group can store multiple ranges of keys. Each key range is named by an
     * ID (the split ID). Within a group, split IDs are unique. The `split_id`
     * names the exact split in `group_uid` where this range is stored.
     * </pre>
     *
     * <code>uint64 split_id = 4;</code>
     *
     * @return The splitId.
     */
    @java.lang.Override
    public long getSplitId() {
      return splitId_;
    }

    /**
     *
     *
     * <pre>
     * A group can store multiple ranges of keys. Each key range is named by an
     * ID (the split ID). Within a group, split IDs are unique. The `split_id`
     * names the exact split in `group_uid` where this range is stored.
     * </pre>
     *
     * <code>uint64 split_id = 4;</code>
     *
     * @param value The splitId to set.
     * @return This builder for chaining.
     */
    public Builder setSplitId(long value) {

      splitId_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * A group can store multiple ranges of keys. Each key range is named by an
     * ID (the split ID). Within a group, split IDs are unique. The `split_id`
     * names the exact split in `group_uid` where this range is stored.
     * </pre>
     *
     * <code>uint64 split_id = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSplitId() {
      bitField0_ = (bitField0_ & ~0x00000008);
      splitId_ = 0L;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString generation_ = com.google.protobuf.ByteString.EMPTY;

    /**
     *
     *
     * <pre>
     * `generation` indicates the freshness of the range information contained
     * in this proto. Generations can be compared lexicographically; if generation
     * A is greater than generation B, then the `Range` corresponding to A is
     * newer than the `Range` corresponding to B, and should be used
     * preferentially.
     * </pre>
     *
     * <code>bytes generation = 5;</code>
     *
     * @return The generation.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getGeneration() {
      return generation_;
    }

    /**
     *
     *
     * <pre>
     * `generation` indicates the freshness of the range information contained
     * in this proto. Generations can be compared lexicographically; if generation
     * A is greater than generation B, then the `Range` corresponding to A is
     * newer than the `Range` corresponding to B, and should be used
     * preferentially.
     * </pre>
     *
     * <code>bytes generation = 5;</code>
     *
     * @param value The generation to set.
     * @return This builder for chaining.
     */
    public Builder setGeneration(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      generation_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * `generation` indicates the freshness of the range information contained
     * in this proto. Generations can be compared lexicographically; if generation
     * A is greater than generation B, then the `Range` corresponding to A is
     * newer than the `Range` corresponding to B, and should be used
     * preferentially.
     * </pre>
     *
     * <code>bytes generation = 5;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearGeneration() {
      bitField0_ = (bitField0_ & ~0x00000010);
      generation_ = getDefaultInstance().getGeneration();
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.spanner.v1.Range)
  }

  // @@protoc_insertion_point(class_scope:google.spanner.v1.Range)
  private static final com.google.spanner.v1.Range DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.spanner.v1.Range();
  }

  public static com.google.spanner.v1.Range getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Range> PARSER =
      new com.google.protobuf.AbstractParser<Range>() {
        @java.lang.Override
        public Range parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<Range> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Range> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.spanner.v1.Range getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
