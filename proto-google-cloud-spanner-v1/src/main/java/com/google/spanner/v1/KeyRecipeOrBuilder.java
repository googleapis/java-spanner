/*
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/spanner/v1/location.proto

// Protobuf Java Version: 3.25.7
package com.google.spanner.v1;

public interface KeyRecipeOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.spanner.v1.KeyRecipe)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * A table name, matching the name from the database schema.
   * </pre>
   *
   * <code>string table_name = 1;</code>
   *
   * @return Whether the tableName field is set.
   */
  boolean hasTableName();
  /**
   *
   *
   * <pre>
   * A table name, matching the name from the database schema.
   * </pre>
   *
   * <code>string table_name = 1;</code>
   *
   * @return The tableName.
   */
  java.lang.String getTableName();
  /**
   *
   *
   * <pre>
   * A table name, matching the name from the database schema.
   * </pre>
   *
   * <code>string table_name = 1;</code>
   *
   * @return The bytes for tableName.
   */
  com.google.protobuf.ByteString getTableNameBytes();

  /**
   *
   *
   * <pre>
   * An index name, matching the name from the database schema.
   * </pre>
   *
   * <code>string index_name = 2;</code>
   *
   * @return Whether the indexName field is set.
   */
  boolean hasIndexName();
  /**
   *
   *
   * <pre>
   * An index name, matching the name from the database schema.
   * </pre>
   *
   * <code>string index_name = 2;</code>
   *
   * @return The indexName.
   */
  java.lang.String getIndexName();
  /**
   *
   *
   * <pre>
   * An index name, matching the name from the database schema.
   * </pre>
   *
   * <code>string index_name = 2;</code>
   *
   * @return The bytes for indexName.
   */
  com.google.protobuf.ByteString getIndexNameBytes();

  /**
   *
   *
   * <pre>
   * The UID of a query, matching the UID from `RoutingHint`.
   * </pre>
   *
   * <code>uint64 operation_uid = 3;</code>
   *
   * @return Whether the operationUid field is set.
   */
  boolean hasOperationUid();
  /**
   *
   *
   * <pre>
   * The UID of a query, matching the UID from `RoutingHint`.
   * </pre>
   *
   * <code>uint64 operation_uid = 3;</code>
   *
   * @return The operationUid.
   */
  long getOperationUid();

  /**
   *
   *
   * <pre>
   * Parts are in the order they should appear in the encoded key.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
   */
  java.util.List<com.google.spanner.v1.KeyRecipe.Part> getPartList();
  /**
   *
   *
   * <pre>
   * Parts are in the order they should appear in the encoded key.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
   */
  com.google.spanner.v1.KeyRecipe.Part getPart(int index);
  /**
   *
   *
   * <pre>
   * Parts are in the order they should appear in the encoded key.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
   */
  int getPartCount();
  /**
   *
   *
   * <pre>
   * Parts are in the order they should appear in the encoded key.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
   */
  java.util.List<? extends com.google.spanner.v1.KeyRecipe.PartOrBuilder> getPartOrBuilderList();
  /**
   *
   *
   * <pre>
   * Parts are in the order they should appear in the encoded key.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.KeyRecipe.Part part = 4;</code>
   */
  com.google.spanner.v1.KeyRecipe.PartOrBuilder getPartOrBuilder(int index);

  com.google.spanner.v1.KeyRecipe.TargetCase getTargetCase();
}
