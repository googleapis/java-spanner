/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/spanner/v1/location.proto

// Protobuf Java Version: 3.25.8
package com.google.spanner.v1;

/**
 *
 *
 * <pre>
 * `RoutingHint` can be optionally added to location-aware Spanner
 * requests. It gives the server hints that can be used to route the request to
 * an appropriate server, potentially significantly decreasing latency and
 * improving throughput. To achieve improved performance, most fields must be
 * filled in with accurate values.
 *
 * The presence of a valid `RoutingHint` tells the server that the client
 * is location-aware.
 *
 * `RoutingHint` does not change the semantics of the request; it is
 * purely a performance hint; the request will perform the same actions on the
 * database's data as if `RoutingHint` were not present. However, if
 * the `RoutingHint` is incomplete or incorrect, the response may include
 * a `CacheUpdate` the client can use to correct its location cache.
 * </pre>
 *
 * Protobuf type {@code google.spanner.v1.RoutingHint}
 */
public final class RoutingHint extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.spanner.v1.RoutingHint)
    RoutingHintOrBuilder {
  private static final long serialVersionUID = 0L;

  // Use RoutingHint.newBuilder() to construct.
  private RoutingHint(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private RoutingHint() {
    schemaGeneration_ = com.google.protobuf.ByteString.EMPTY;
    key_ = com.google.protobuf.ByteString.EMPTY;
    limitKey_ = com.google.protobuf.ByteString.EMPTY;
    skippedTabletUid_ = java.util.Collections.emptyList();
    clientLocation_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new RoutingHint();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.spanner.v1.LocationProto
        .internal_static_google_spanner_v1_RoutingHint_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.spanner.v1.LocationProto
        .internal_static_google_spanner_v1_RoutingHint_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.spanner.v1.RoutingHint.class,
            com.google.spanner.v1.RoutingHint.Builder.class);
  }

  public interface SkippedTabletOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.spanner.v1.RoutingHint.SkippedTablet)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * The tablet UID of the tablet that was skipped. See `Tablet.tablet_uid`.
     * </pre>
     *
     * <code>uint64 tablet_uid = 1;</code>
     *
     * @return The tabletUid.
     */
    long getTabletUid();

    /**
     *
     *
     * <pre>
     * The incarnation of the tablet that was skipped. See `Tablet.incarnation`.
     * </pre>
     *
     * <code>bytes incarnation = 2;</code>
     *
     * @return The incarnation.
     */
    com.google.protobuf.ByteString getIncarnation();
  }

  /** Protobuf type {@code google.spanner.v1.RoutingHint.SkippedTablet} */
  public static final class SkippedTablet extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.spanner.v1.RoutingHint.SkippedTablet)
      SkippedTabletOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use SkippedTablet.newBuilder() to construct.
    private SkippedTablet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private SkippedTablet() {
      incarnation_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new SkippedTablet();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.spanner.v1.LocationProto
          .internal_static_google_spanner_v1_RoutingHint_SkippedTablet_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.spanner.v1.LocationProto
          .internal_static_google_spanner_v1_RoutingHint_SkippedTablet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.spanner.v1.RoutingHint.SkippedTablet.class,
              com.google.spanner.v1.RoutingHint.SkippedTablet.Builder.class);
    }

    public static final int TABLET_UID_FIELD_NUMBER = 1;
    private long tabletUid_ = 0L;

    /**
     *
     *
     * <pre>
     * The tablet UID of the tablet that was skipped. See `Tablet.tablet_uid`.
     * </pre>
     *
     * <code>uint64 tablet_uid = 1;</code>
     *
     * @return The tabletUid.
     */
    @java.lang.Override
    public long getTabletUid() {
      return tabletUid_;
    }

    public static final int INCARNATION_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString incarnation_ = com.google.protobuf.ByteString.EMPTY;

    /**
     *
     *
     * <pre>
     * The incarnation of the tablet that was skipped. See `Tablet.incarnation`.
     * </pre>
     *
     * <code>bytes incarnation = 2;</code>
     *
     * @return The incarnation.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getIncarnation() {
      return incarnation_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (tabletUid_ != 0L) {
        output.writeUInt64(1, tabletUid_);
      }
      if (!incarnation_.isEmpty()) {
        output.writeBytes(2, incarnation_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (tabletUid_ != 0L) {
        size += com.google.protobuf.CodedOutputStream.computeUInt64Size(1, tabletUid_);
      }
      if (!incarnation_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream.computeBytesSize(2, incarnation_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.google.spanner.v1.RoutingHint.SkippedTablet)) {
        return super.equals(obj);
      }
      com.google.spanner.v1.RoutingHint.SkippedTablet other =
          (com.google.spanner.v1.RoutingHint.SkippedTablet) obj;

      if (getTabletUid() != other.getTabletUid()) return false;
      if (!getIncarnation().equals(other.getIncarnation())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TABLET_UID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getTabletUid());
      hash = (37 * hash) + INCARNATION_FIELD_NUMBER;
      hash = (53 * hash) + getIncarnation().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.spanner.v1.RoutingHint.SkippedTablet parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.spanner.v1.RoutingHint.SkippedTablet parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.spanner.v1.RoutingHint.SkippedTablet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.spanner.v1.RoutingHint.SkippedTablet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.spanner.v1.RoutingHint.SkippedTablet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.spanner.v1.RoutingHint.SkippedTablet parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.spanner.v1.RoutingHint.SkippedTablet parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.spanner.v1.RoutingHint.SkippedTablet parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.spanner.v1.RoutingHint.SkippedTablet parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.spanner.v1.RoutingHint.SkippedTablet parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.spanner.v1.RoutingHint.SkippedTablet parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.spanner.v1.RoutingHint.SkippedTablet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(com.google.spanner.v1.RoutingHint.SkippedTablet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /** Protobuf type {@code google.spanner.v1.RoutingHint.SkippedTablet} */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.spanner.v1.RoutingHint.SkippedTablet)
        com.google.spanner.v1.RoutingHint.SkippedTabletOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.spanner.v1.LocationProto
            .internal_static_google_spanner_v1_RoutingHint_SkippedTablet_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.spanner.v1.LocationProto
            .internal_static_google_spanner_v1_RoutingHint_SkippedTablet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.spanner.v1.RoutingHint.SkippedTablet.class,
                com.google.spanner.v1.RoutingHint.SkippedTablet.Builder.class);
      }

      // Construct using com.google.spanner.v1.RoutingHint.SkippedTablet.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        tabletUid_ = 0L;
        incarnation_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.spanner.v1.LocationProto
            .internal_static_google_spanner_v1_RoutingHint_SkippedTablet_descriptor;
      }

      @java.lang.Override
      public com.google.spanner.v1.RoutingHint.SkippedTablet getDefaultInstanceForType() {
        return com.google.spanner.v1.RoutingHint.SkippedTablet.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.spanner.v1.RoutingHint.SkippedTablet build() {
        com.google.spanner.v1.RoutingHint.SkippedTablet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.spanner.v1.RoutingHint.SkippedTablet buildPartial() {
        com.google.spanner.v1.RoutingHint.SkippedTablet result =
            new com.google.spanner.v1.RoutingHint.SkippedTablet(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.spanner.v1.RoutingHint.SkippedTablet result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.tabletUid_ = tabletUid_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.incarnation_ = incarnation_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.spanner.v1.RoutingHint.SkippedTablet) {
          return mergeFrom((com.google.spanner.v1.RoutingHint.SkippedTablet) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.spanner.v1.RoutingHint.SkippedTablet other) {
        if (other == com.google.spanner.v1.RoutingHint.SkippedTablet.getDefaultInstance())
          return this;
        if (other.getTabletUid() != 0L) {
          setTabletUid(other.getTabletUid());
        }
        if (other.getIncarnation() != com.google.protobuf.ByteString.EMPTY) {
          setIncarnation(other.getIncarnation());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8:
                {
                  tabletUid_ = input.readUInt64();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
              case 18:
                {
                  incarnation_ = input.readBytes();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private long tabletUid_;

      /**
       *
       *
       * <pre>
       * The tablet UID of the tablet that was skipped. See `Tablet.tablet_uid`.
       * </pre>
       *
       * <code>uint64 tablet_uid = 1;</code>
       *
       * @return The tabletUid.
       */
      @java.lang.Override
      public long getTabletUid() {
        return tabletUid_;
      }

      /**
       *
       *
       * <pre>
       * The tablet UID of the tablet that was skipped. See `Tablet.tablet_uid`.
       * </pre>
       *
       * <code>uint64 tablet_uid = 1;</code>
       *
       * @param value The tabletUid to set.
       * @return This builder for chaining.
       */
      public Builder setTabletUid(long value) {

        tabletUid_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * The tablet UID of the tablet that was skipped. See `Tablet.tablet_uid`.
       * </pre>
       *
       * <code>uint64 tablet_uid = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearTabletUid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tabletUid_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString incarnation_ = com.google.protobuf.ByteString.EMPTY;

      /**
       *
       *
       * <pre>
       * The incarnation of the tablet that was skipped. See `Tablet.incarnation`.
       * </pre>
       *
       * <code>bytes incarnation = 2;</code>
       *
       * @return The incarnation.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getIncarnation() {
        return incarnation_;
      }

      /**
       *
       *
       * <pre>
       * The incarnation of the tablet that was skipped. See `Tablet.incarnation`.
       * </pre>
       *
       * <code>bytes incarnation = 2;</code>
       *
       * @param value The incarnation to set.
       * @return This builder for chaining.
       */
      public Builder setIncarnation(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        incarnation_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * The incarnation of the tablet that was skipped. See `Tablet.incarnation`.
       * </pre>
       *
       * <code>bytes incarnation = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearIncarnation() {
        bitField0_ = (bitField0_ & ~0x00000002);
        incarnation_ = getDefaultInstance().getIncarnation();
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.spanner.v1.RoutingHint.SkippedTablet)
    }

    // @@protoc_insertion_point(class_scope:google.spanner.v1.RoutingHint.SkippedTablet)
    private static final com.google.spanner.v1.RoutingHint.SkippedTablet DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new com.google.spanner.v1.RoutingHint.SkippedTablet();
    }

    public static com.google.spanner.v1.RoutingHint.SkippedTablet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SkippedTablet> PARSER =
        new com.google.protobuf.AbstractParser<SkippedTablet>() {
          @java.lang.Override
          public SkippedTablet parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<SkippedTablet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SkippedTablet> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.spanner.v1.RoutingHint.SkippedTablet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public static final int OPERATION_UID_FIELD_NUMBER = 1;
  private long operationUid_ = 0L;

  /**
   *
   *
   * <pre>
   * A session-scoped unique ID for the operation, computed client-side.
   * Requests with the same `operation_uid` should have a shared 'shape',
   * meaning that some fields are expected to be the same, such as the SQL
   * query, the target table/columns (for reads) etc. Requests with the same
   * `operation_uid` are meant to differ only in fields like keys/key
   * ranges/query parameters, transaction IDs, etc.
   *
   * `operation_uid` must be non-zero for `RoutingHint` to be valid.
   * </pre>
   *
   * <code>uint64 operation_uid = 1;</code>
   *
   * @return The operationUid.
   */
  @java.lang.Override
  public long getOperationUid() {
    return operationUid_;
  }

  public static final int DATABASE_ID_FIELD_NUMBER = 2;
  private long databaseId_ = 0L;

  /**
   *
   *
   * <pre>
   * The database ID of the database being accessed, see
   * `CacheUpdate.database_id`. Should match the cache entries that were used
   * to generate the rest of the fields in this `RoutingHint`.
   * </pre>
   *
   * <code>uint64 database_id = 2;</code>
   *
   * @return The databaseId.
   */
  @java.lang.Override
  public long getDatabaseId() {
    return databaseId_;
  }

  public static final int SCHEMA_GENERATION_FIELD_NUMBER = 3;
  private com.google.protobuf.ByteString schemaGeneration_ = com.google.protobuf.ByteString.EMPTY;

  /**
   *
   *
   * <pre>
   * The schema generation of the recipe that was used to generate `key` and
   * `limit_key`. See also `RecipeList.schema_generation`.
   * </pre>
   *
   * <code>bytes schema_generation = 3;</code>
   *
   * @return The schemaGeneration.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getSchemaGeneration() {
    return schemaGeneration_;
  }

  public static final int KEY_FIELD_NUMBER = 4;
  private com.google.protobuf.ByteString key_ = com.google.protobuf.ByteString.EMPTY;

  /**
   *
   *
   * <pre>
   * The key / key range that this request accesses. For operations that
   * access a single key, `key` should be set and `limit_key` should be empty.
   * For operations that access a key range, `key` and `limit_key` should both
   * be set, to the inclusive start and exclusive end of the range respectively.
   *
   * The keys are encoded in "sortable string format" (ssformat), using a
   * `KeyRecipe` that is appropriate for the request. See `KeyRecipe` for more
   * details.
   * </pre>
   *
   * <code>bytes key = 4;</code>
   *
   * @return The key.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getKey() {
    return key_;
  }

  public static final int LIMIT_KEY_FIELD_NUMBER = 5;
  private com.google.protobuf.ByteString limitKey_ = com.google.protobuf.ByteString.EMPTY;

  /**
   *
   *
   * <pre>
   * If this request targets a key range, this is the exclusive end of the
   * range. See `key` for more details.
   * </pre>
   *
   * <code>bytes limit_key = 5;</code>
   *
   * @return The limitKey.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getLimitKey() {
    return limitKey_;
  }

  public static final int GROUP_UID_FIELD_NUMBER = 6;
  private long groupUid_ = 0L;

  /**
   *
   *
   * <pre>
   * The group UID of the group that the client believes serves the range
   * defined by `key` and `limit_key`. See `Range.group_uid` for more details.
   * </pre>
   *
   * <code>uint64 group_uid = 6;</code>
   *
   * @return The groupUid.
   */
  @java.lang.Override
  public long getGroupUid() {
    return groupUid_;
  }

  public static final int SPLIT_ID_FIELD_NUMBER = 7;
  private long splitId_ = 0L;

  /**
   *
   *
   * <pre>
   * The split ID of the split that the client believes contains the range
   * defined by `key` and `limit_key`. See `Range.split_id` for more details.
   * </pre>
   *
   * <code>uint64 split_id = 7;</code>
   *
   * @return The splitId.
   */
  @java.lang.Override
  public long getSplitId() {
    return splitId_;
  }

  public static final int TABLET_UID_FIELD_NUMBER = 8;
  private long tabletUid_ = 0L;

  /**
   *
   *
   * <pre>
   * The tablet UID of the tablet from group `group_uid` that the client
   * believes is best to serve this request. See `Group.local_tablet_uids` and
   * `Group.leader_tablet_uid`.
   * </pre>
   *
   * <code>uint64 tablet_uid = 8;</code>
   *
   * @return The tabletUid.
   */
  @java.lang.Override
  public long getTabletUid() {
    return tabletUid_;
  }

  public static final int SKIPPED_TABLET_UID_FIELD_NUMBER = 9;

  @SuppressWarnings("serial")
  private java.util.List<com.google.spanner.v1.RoutingHint.SkippedTablet> skippedTabletUid_;

  /**
   *
   *
   * <pre>
   * If the client had multiple options for tablet selection, and some of its
   * first choices were unhealthy (e.g., the server is unreachable, or
   * `Tablet.skip` is true), this field will contain the tablet UIDs of those
   * tablets, with their incarnations. The server may include a `CacheUpdate`
   * with new locations for those tablets.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.RoutingHint.SkippedTablet skipped_tablet_uid = 9;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.spanner.v1.RoutingHint.SkippedTablet> getSkippedTabletUidList() {
    return skippedTabletUid_;
  }

  /**
   *
   *
   * <pre>
   * If the client had multiple options for tablet selection, and some of its
   * first choices were unhealthy (e.g., the server is unreachable, or
   * `Tablet.skip` is true), this field will contain the tablet UIDs of those
   * tablets, with their incarnations. The server may include a `CacheUpdate`
   * with new locations for those tablets.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.RoutingHint.SkippedTablet skipped_tablet_uid = 9;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.spanner.v1.RoutingHint.SkippedTabletOrBuilder>
      getSkippedTabletUidOrBuilderList() {
    return skippedTabletUid_;
  }

  /**
   *
   *
   * <pre>
   * If the client had multiple options for tablet selection, and some of its
   * first choices were unhealthy (e.g., the server is unreachable, or
   * `Tablet.skip` is true), this field will contain the tablet UIDs of those
   * tablets, with their incarnations. The server may include a `CacheUpdate`
   * with new locations for those tablets.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.RoutingHint.SkippedTablet skipped_tablet_uid = 9;</code>
   */
  @java.lang.Override
  public int getSkippedTabletUidCount() {
    return skippedTabletUid_.size();
  }

  /**
   *
   *
   * <pre>
   * If the client had multiple options for tablet selection, and some of its
   * first choices were unhealthy (e.g., the server is unreachable, or
   * `Tablet.skip` is true), this field will contain the tablet UIDs of those
   * tablets, with their incarnations. The server may include a `CacheUpdate`
   * with new locations for those tablets.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.RoutingHint.SkippedTablet skipped_tablet_uid = 9;</code>
   */
  @java.lang.Override
  public com.google.spanner.v1.RoutingHint.SkippedTablet getSkippedTabletUid(int index) {
    return skippedTabletUid_.get(index);
  }

  /**
   *
   *
   * <pre>
   * If the client had multiple options for tablet selection, and some of its
   * first choices were unhealthy (e.g., the server is unreachable, or
   * `Tablet.skip` is true), this field will contain the tablet UIDs of those
   * tablets, with their incarnations. The server may include a `CacheUpdate`
   * with new locations for those tablets.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.RoutingHint.SkippedTablet skipped_tablet_uid = 9;</code>
   */
  @java.lang.Override
  public com.google.spanner.v1.RoutingHint.SkippedTabletOrBuilder getSkippedTabletUidOrBuilder(
      int index) {
    return skippedTabletUid_.get(index);
  }

  public static final int CLIENT_LOCATION_FIELD_NUMBER = 10;

  @SuppressWarnings("serial")
  private volatile java.lang.Object clientLocation_ = "";

  /**
   *
   *
   * <pre>
   * If present, the client's current location. In the Spanner managed service,
   * this should be the name of a Google Cloud zone or region, such as
   * "us-central1". In Spanner Omni, this should correspond to a previously
   * created location.
   *
   * If absent, the client's location will be assumed to be the same as the
   * location of the server the client ends up connected to.
   *
   * Locations are primarily valuable for clients that connect from regions
   * other than the ones that contain the Spanner database.
   * </pre>
   *
   * <code>string client_location = 10;</code>
   *
   * @return The clientLocation.
   */
  @java.lang.Override
  public java.lang.String getClientLocation() {
    java.lang.Object ref = clientLocation_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      clientLocation_ = s;
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * If present, the client's current location. In the Spanner managed service,
   * this should be the name of a Google Cloud zone or region, such as
   * "us-central1". In Spanner Omni, this should correspond to a previously
   * created location.
   *
   * If absent, the client's location will be assumed to be the same as the
   * location of the server the client ends up connected to.
   *
   * Locations are primarily valuable for clients that connect from regions
   * other than the ones that contain the Spanner database.
   * </pre>
   *
   * <code>string client_location = 10;</code>
   *
   * @return The bytes for clientLocation.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getClientLocationBytes() {
    java.lang.Object ref = clientLocation_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      clientLocation_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (operationUid_ != 0L) {
      output.writeUInt64(1, operationUid_);
    }
    if (databaseId_ != 0L) {
      output.writeUInt64(2, databaseId_);
    }
    if (!schemaGeneration_.isEmpty()) {
      output.writeBytes(3, schemaGeneration_);
    }
    if (!key_.isEmpty()) {
      output.writeBytes(4, key_);
    }
    if (!limitKey_.isEmpty()) {
      output.writeBytes(5, limitKey_);
    }
    if (groupUid_ != 0L) {
      output.writeUInt64(6, groupUid_);
    }
    if (splitId_ != 0L) {
      output.writeUInt64(7, splitId_);
    }
    if (tabletUid_ != 0L) {
      output.writeUInt64(8, tabletUid_);
    }
    for (int i = 0; i < skippedTabletUid_.size(); i++) {
      output.writeMessage(9, skippedTabletUid_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clientLocation_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 10, clientLocation_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (operationUid_ != 0L) {
      size += com.google.protobuf.CodedOutputStream.computeUInt64Size(1, operationUid_);
    }
    if (databaseId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream.computeUInt64Size(2, databaseId_);
    }
    if (!schemaGeneration_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream.computeBytesSize(3, schemaGeneration_);
    }
    if (!key_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream.computeBytesSize(4, key_);
    }
    if (!limitKey_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream.computeBytesSize(5, limitKey_);
    }
    if (groupUid_ != 0L) {
      size += com.google.protobuf.CodedOutputStream.computeUInt64Size(6, groupUid_);
    }
    if (splitId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream.computeUInt64Size(7, splitId_);
    }
    if (tabletUid_ != 0L) {
      size += com.google.protobuf.CodedOutputStream.computeUInt64Size(8, tabletUid_);
    }
    for (int i = 0; i < skippedTabletUid_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(9, skippedTabletUid_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clientLocation_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, clientLocation_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.spanner.v1.RoutingHint)) {
      return super.equals(obj);
    }
    com.google.spanner.v1.RoutingHint other = (com.google.spanner.v1.RoutingHint) obj;

    if (getOperationUid() != other.getOperationUid()) return false;
    if (getDatabaseId() != other.getDatabaseId()) return false;
    if (!getSchemaGeneration().equals(other.getSchemaGeneration())) return false;
    if (!getKey().equals(other.getKey())) return false;
    if (!getLimitKey().equals(other.getLimitKey())) return false;
    if (getGroupUid() != other.getGroupUid()) return false;
    if (getSplitId() != other.getSplitId()) return false;
    if (getTabletUid() != other.getTabletUid()) return false;
    if (!getSkippedTabletUidList().equals(other.getSkippedTabletUidList())) return false;
    if (!getClientLocation().equals(other.getClientLocation())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + OPERATION_UID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getOperationUid());
    hash = (37 * hash) + DATABASE_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getDatabaseId());
    hash = (37 * hash) + SCHEMA_GENERATION_FIELD_NUMBER;
    hash = (53 * hash) + getSchemaGeneration().hashCode();
    hash = (37 * hash) + KEY_FIELD_NUMBER;
    hash = (53 * hash) + getKey().hashCode();
    hash = (37 * hash) + LIMIT_KEY_FIELD_NUMBER;
    hash = (53 * hash) + getLimitKey().hashCode();
    hash = (37 * hash) + GROUP_UID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getGroupUid());
    hash = (37 * hash) + SPLIT_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getSplitId());
    hash = (37 * hash) + TABLET_UID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getTabletUid());
    if (getSkippedTabletUidCount() > 0) {
      hash = (37 * hash) + SKIPPED_TABLET_UID_FIELD_NUMBER;
      hash = (53 * hash) + getSkippedTabletUidList().hashCode();
    }
    hash = (37 * hash) + CLIENT_LOCATION_FIELD_NUMBER;
    hash = (53 * hash) + getClientLocation().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.spanner.v1.RoutingHint parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.spanner.v1.RoutingHint parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.spanner.v1.RoutingHint parseFrom(com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.spanner.v1.RoutingHint parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.spanner.v1.RoutingHint parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.spanner.v1.RoutingHint parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.spanner.v1.RoutingHint parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.spanner.v1.RoutingHint parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.spanner.v1.RoutingHint parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.spanner.v1.RoutingHint parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.spanner.v1.RoutingHint parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.spanner.v1.RoutingHint parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.spanner.v1.RoutingHint prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /**
   *
   *
   * <pre>
   * `RoutingHint` can be optionally added to location-aware Spanner
   * requests. It gives the server hints that can be used to route the request to
   * an appropriate server, potentially significantly decreasing latency and
   * improving throughput. To achieve improved performance, most fields must be
   * filled in with accurate values.
   *
   * The presence of a valid `RoutingHint` tells the server that the client
   * is location-aware.
   *
   * `RoutingHint` does not change the semantics of the request; it is
   * purely a performance hint; the request will perform the same actions on the
   * database's data as if `RoutingHint` were not present. However, if
   * the `RoutingHint` is incomplete or incorrect, the response may include
   * a `CacheUpdate` the client can use to correct its location cache.
   * </pre>
   *
   * Protobuf type {@code google.spanner.v1.RoutingHint}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.spanner.v1.RoutingHint)
      com.google.spanner.v1.RoutingHintOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.spanner.v1.LocationProto
          .internal_static_google_spanner_v1_RoutingHint_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.spanner.v1.LocationProto
          .internal_static_google_spanner_v1_RoutingHint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.spanner.v1.RoutingHint.class,
              com.google.spanner.v1.RoutingHint.Builder.class);
    }

    // Construct using com.google.spanner.v1.RoutingHint.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      operationUid_ = 0L;
      databaseId_ = 0L;
      schemaGeneration_ = com.google.protobuf.ByteString.EMPTY;
      key_ = com.google.protobuf.ByteString.EMPTY;
      limitKey_ = com.google.protobuf.ByteString.EMPTY;
      groupUid_ = 0L;
      splitId_ = 0L;
      tabletUid_ = 0L;
      if (skippedTabletUidBuilder_ == null) {
        skippedTabletUid_ = java.util.Collections.emptyList();
      } else {
        skippedTabletUid_ = null;
        skippedTabletUidBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000100);
      clientLocation_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.spanner.v1.LocationProto
          .internal_static_google_spanner_v1_RoutingHint_descriptor;
    }

    @java.lang.Override
    public com.google.spanner.v1.RoutingHint getDefaultInstanceForType() {
      return com.google.spanner.v1.RoutingHint.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.spanner.v1.RoutingHint build() {
      com.google.spanner.v1.RoutingHint result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.spanner.v1.RoutingHint buildPartial() {
      com.google.spanner.v1.RoutingHint result = new com.google.spanner.v1.RoutingHint(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.spanner.v1.RoutingHint result) {
      if (skippedTabletUidBuilder_ == null) {
        if (((bitField0_ & 0x00000100) != 0)) {
          skippedTabletUid_ = java.util.Collections.unmodifiableList(skippedTabletUid_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.skippedTabletUid_ = skippedTabletUid_;
      } else {
        result.skippedTabletUid_ = skippedTabletUidBuilder_.build();
      }
    }

    private void buildPartial0(com.google.spanner.v1.RoutingHint result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.operationUid_ = operationUid_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.databaseId_ = databaseId_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.schemaGeneration_ = schemaGeneration_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.key_ = key_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.limitKey_ = limitKey_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.groupUid_ = groupUid_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.splitId_ = splitId_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.tabletUid_ = tabletUid_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.clientLocation_ = clientLocation_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.spanner.v1.RoutingHint) {
        return mergeFrom((com.google.spanner.v1.RoutingHint) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.spanner.v1.RoutingHint other) {
      if (other == com.google.spanner.v1.RoutingHint.getDefaultInstance()) return this;
      if (other.getOperationUid() != 0L) {
        setOperationUid(other.getOperationUid());
      }
      if (other.getDatabaseId() != 0L) {
        setDatabaseId(other.getDatabaseId());
      }
      if (other.getSchemaGeneration() != com.google.protobuf.ByteString.EMPTY) {
        setSchemaGeneration(other.getSchemaGeneration());
      }
      if (other.getKey() != com.google.protobuf.ByteString.EMPTY) {
        setKey(other.getKey());
      }
      if (other.getLimitKey() != com.google.protobuf.ByteString.EMPTY) {
        setLimitKey(other.getLimitKey());
      }
      if (other.getGroupUid() != 0L) {
        setGroupUid(other.getGroupUid());
      }
      if (other.getSplitId() != 0L) {
        setSplitId(other.getSplitId());
      }
      if (other.getTabletUid() != 0L) {
        setTabletUid(other.getTabletUid());
      }
      if (skippedTabletUidBuilder_ == null) {
        if (!other.skippedTabletUid_.isEmpty()) {
          if (skippedTabletUid_.isEmpty()) {
            skippedTabletUid_ = other.skippedTabletUid_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureSkippedTabletUidIsMutable();
            skippedTabletUid_.addAll(other.skippedTabletUid_);
          }
          onChanged();
        }
      } else {
        if (!other.skippedTabletUid_.isEmpty()) {
          if (skippedTabletUidBuilder_.isEmpty()) {
            skippedTabletUidBuilder_.dispose();
            skippedTabletUidBuilder_ = null;
            skippedTabletUid_ = other.skippedTabletUid_;
            bitField0_ = (bitField0_ & ~0x00000100);
            skippedTabletUidBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getSkippedTabletUidFieldBuilder()
                    : null;
          } else {
            skippedTabletUidBuilder_.addAllMessages(other.skippedTabletUid_);
          }
        }
      }
      if (!other.getClientLocation().isEmpty()) {
        clientLocation_ = other.clientLocation_;
        bitField0_ |= 0x00000200;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8:
              {
                operationUid_ = input.readUInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
            case 16:
              {
                databaseId_ = input.readUInt64();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
            case 26:
              {
                schemaGeneration_ = input.readBytes();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
            case 34:
              {
                key_ = input.readBytes();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
            case 42:
              {
                limitKey_ = input.readBytes();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
            case 48:
              {
                groupUid_ = input.readUInt64();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
            case 56:
              {
                splitId_ = input.readUInt64();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
            case 64:
              {
                tabletUid_ = input.readUInt64();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
            case 74:
              {
                com.google.spanner.v1.RoutingHint.SkippedTablet m =
                    input.readMessage(
                        com.google.spanner.v1.RoutingHint.SkippedTablet.parser(),
                        extensionRegistry);
                if (skippedTabletUidBuilder_ == null) {
                  ensureSkippedTabletUidIsMutable();
                  skippedTabletUid_.add(m);
                } else {
                  skippedTabletUidBuilder_.addMessage(m);
                }
                break;
              } // case 74
            case 82:
              {
                clientLocation_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000200;
                break;
              } // case 82
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private long operationUid_;

    /**
     *
     *
     * <pre>
     * A session-scoped unique ID for the operation, computed client-side.
     * Requests with the same `operation_uid` should have a shared 'shape',
     * meaning that some fields are expected to be the same, such as the SQL
     * query, the target table/columns (for reads) etc. Requests with the same
     * `operation_uid` are meant to differ only in fields like keys/key
     * ranges/query parameters, transaction IDs, etc.
     *
     * `operation_uid` must be non-zero for `RoutingHint` to be valid.
     * </pre>
     *
     * <code>uint64 operation_uid = 1;</code>
     *
     * @return The operationUid.
     */
    @java.lang.Override
    public long getOperationUid() {
      return operationUid_;
    }

    /**
     *
     *
     * <pre>
     * A session-scoped unique ID for the operation, computed client-side.
     * Requests with the same `operation_uid` should have a shared 'shape',
     * meaning that some fields are expected to be the same, such as the SQL
     * query, the target table/columns (for reads) etc. Requests with the same
     * `operation_uid` are meant to differ only in fields like keys/key
     * ranges/query parameters, transaction IDs, etc.
     *
     * `operation_uid` must be non-zero for `RoutingHint` to be valid.
     * </pre>
     *
     * <code>uint64 operation_uid = 1;</code>
     *
     * @param value The operationUid to set.
     * @return This builder for chaining.
     */
    public Builder setOperationUid(long value) {

      operationUid_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * A session-scoped unique ID for the operation, computed client-side.
     * Requests with the same `operation_uid` should have a shared 'shape',
     * meaning that some fields are expected to be the same, such as the SQL
     * query, the target table/columns (for reads) etc. Requests with the same
     * `operation_uid` are meant to differ only in fields like keys/key
     * ranges/query parameters, transaction IDs, etc.
     *
     * `operation_uid` must be non-zero for `RoutingHint` to be valid.
     * </pre>
     *
     * <code>uint64 operation_uid = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearOperationUid() {
      bitField0_ = (bitField0_ & ~0x00000001);
      operationUid_ = 0L;
      onChanged();
      return this;
    }

    private long databaseId_;

    /**
     *
     *
     * <pre>
     * The database ID of the database being accessed, see
     * `CacheUpdate.database_id`. Should match the cache entries that were used
     * to generate the rest of the fields in this `RoutingHint`.
     * </pre>
     *
     * <code>uint64 database_id = 2;</code>
     *
     * @return The databaseId.
     */
    @java.lang.Override
    public long getDatabaseId() {
      return databaseId_;
    }

    /**
     *
     *
     * <pre>
     * The database ID of the database being accessed, see
     * `CacheUpdate.database_id`. Should match the cache entries that were used
     * to generate the rest of the fields in this `RoutingHint`.
     * </pre>
     *
     * <code>uint64 database_id = 2;</code>
     *
     * @param value The databaseId to set.
     * @return This builder for chaining.
     */
    public Builder setDatabaseId(long value) {

      databaseId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The database ID of the database being accessed, see
     * `CacheUpdate.database_id`. Should match the cache entries that were used
     * to generate the rest of the fields in this `RoutingHint`.
     * </pre>
     *
     * <code>uint64 database_id = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDatabaseId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      databaseId_ = 0L;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString schemaGeneration_ = com.google.protobuf.ByteString.EMPTY;

    /**
     *
     *
     * <pre>
     * The schema generation of the recipe that was used to generate `key` and
     * `limit_key`. See also `RecipeList.schema_generation`.
     * </pre>
     *
     * <code>bytes schema_generation = 3;</code>
     *
     * @return The schemaGeneration.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSchemaGeneration() {
      return schemaGeneration_;
    }

    /**
     *
     *
     * <pre>
     * The schema generation of the recipe that was used to generate `key` and
     * `limit_key`. See also `RecipeList.schema_generation`.
     * </pre>
     *
     * <code>bytes schema_generation = 3;</code>
     *
     * @param value The schemaGeneration to set.
     * @return This builder for chaining.
     */
    public Builder setSchemaGeneration(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      schemaGeneration_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The schema generation of the recipe that was used to generate `key` and
     * `limit_key`. See also `RecipeList.schema_generation`.
     * </pre>
     *
     * <code>bytes schema_generation = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSchemaGeneration() {
      bitField0_ = (bitField0_ & ~0x00000004);
      schemaGeneration_ = getDefaultInstance().getSchemaGeneration();
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString key_ = com.google.protobuf.ByteString.EMPTY;

    /**
     *
     *
     * <pre>
     * The key / key range that this request accesses. For operations that
     * access a single key, `key` should be set and `limit_key` should be empty.
     * For operations that access a key range, `key` and `limit_key` should both
     * be set, to the inclusive start and exclusive end of the range respectively.
     *
     * The keys are encoded in "sortable string format" (ssformat), using a
     * `KeyRecipe` that is appropriate for the request. See `KeyRecipe` for more
     * details.
     * </pre>
     *
     * <code>bytes key = 4;</code>
     *
     * @return The key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getKey() {
      return key_;
    }

    /**
     *
     *
     * <pre>
     * The key / key range that this request accesses. For operations that
     * access a single key, `key` should be set and `limit_key` should be empty.
     * For operations that access a key range, `key` and `limit_key` should both
     * be set, to the inclusive start and exclusive end of the range respectively.
     *
     * The keys are encoded in "sortable string format" (ssformat), using a
     * `KeyRecipe` that is appropriate for the request. See `KeyRecipe` for more
     * details.
     * </pre>
     *
     * <code>bytes key = 4;</code>
     *
     * @param value The key to set.
     * @return This builder for chaining.
     */
    public Builder setKey(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      key_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The key / key range that this request accesses. For operations that
     * access a single key, `key` should be set and `limit_key` should be empty.
     * For operations that access a key range, `key` and `limit_key` should both
     * be set, to the inclusive start and exclusive end of the range respectively.
     *
     * The keys are encoded in "sortable string format" (ssformat), using a
     * `KeyRecipe` that is appropriate for the request. See `KeyRecipe` for more
     * details.
     * </pre>
     *
     * <code>bytes key = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearKey() {
      bitField0_ = (bitField0_ & ~0x00000008);
      key_ = getDefaultInstance().getKey();
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString limitKey_ = com.google.protobuf.ByteString.EMPTY;

    /**
     *
     *
     * <pre>
     * If this request targets a key range, this is the exclusive end of the
     * range. See `key` for more details.
     * </pre>
     *
     * <code>bytes limit_key = 5;</code>
     *
     * @return The limitKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getLimitKey() {
      return limitKey_;
    }

    /**
     *
     *
     * <pre>
     * If this request targets a key range, this is the exclusive end of the
     * range. See `key` for more details.
     * </pre>
     *
     * <code>bytes limit_key = 5;</code>
     *
     * @param value The limitKey to set.
     * @return This builder for chaining.
     */
    public Builder setLimitKey(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      limitKey_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * If this request targets a key range, this is the exclusive end of the
     * range. See `key` for more details.
     * </pre>
     *
     * <code>bytes limit_key = 5;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearLimitKey() {
      bitField0_ = (bitField0_ & ~0x00000010);
      limitKey_ = getDefaultInstance().getLimitKey();
      onChanged();
      return this;
    }

    private long groupUid_;

    /**
     *
     *
     * <pre>
     * The group UID of the group that the client believes serves the range
     * defined by `key` and `limit_key`. See `Range.group_uid` for more details.
     * </pre>
     *
     * <code>uint64 group_uid = 6;</code>
     *
     * @return The groupUid.
     */
    @java.lang.Override
    public long getGroupUid() {
      return groupUid_;
    }

    /**
     *
     *
     * <pre>
     * The group UID of the group that the client believes serves the range
     * defined by `key` and `limit_key`. See `Range.group_uid` for more details.
     * </pre>
     *
     * <code>uint64 group_uid = 6;</code>
     *
     * @param value The groupUid to set.
     * @return This builder for chaining.
     */
    public Builder setGroupUid(long value) {

      groupUid_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The group UID of the group that the client believes serves the range
     * defined by `key` and `limit_key`. See `Range.group_uid` for more details.
     * </pre>
     *
     * <code>uint64 group_uid = 6;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearGroupUid() {
      bitField0_ = (bitField0_ & ~0x00000020);
      groupUid_ = 0L;
      onChanged();
      return this;
    }

    private long splitId_;

    /**
     *
     *
     * <pre>
     * The split ID of the split that the client believes contains the range
     * defined by `key` and `limit_key`. See `Range.split_id` for more details.
     * </pre>
     *
     * <code>uint64 split_id = 7;</code>
     *
     * @return The splitId.
     */
    @java.lang.Override
    public long getSplitId() {
      return splitId_;
    }

    /**
     *
     *
     * <pre>
     * The split ID of the split that the client believes contains the range
     * defined by `key` and `limit_key`. See `Range.split_id` for more details.
     * </pre>
     *
     * <code>uint64 split_id = 7;</code>
     *
     * @param value The splitId to set.
     * @return This builder for chaining.
     */
    public Builder setSplitId(long value) {

      splitId_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The split ID of the split that the client believes contains the range
     * defined by `key` and `limit_key`. See `Range.split_id` for more details.
     * </pre>
     *
     * <code>uint64 split_id = 7;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSplitId() {
      bitField0_ = (bitField0_ & ~0x00000040);
      splitId_ = 0L;
      onChanged();
      return this;
    }

    private long tabletUid_;

    /**
     *
     *
     * <pre>
     * The tablet UID of the tablet from group `group_uid` that the client
     * believes is best to serve this request. See `Group.local_tablet_uids` and
     * `Group.leader_tablet_uid`.
     * </pre>
     *
     * <code>uint64 tablet_uid = 8;</code>
     *
     * @return The tabletUid.
     */
    @java.lang.Override
    public long getTabletUid() {
      return tabletUid_;
    }

    /**
     *
     *
     * <pre>
     * The tablet UID of the tablet from group `group_uid` that the client
     * believes is best to serve this request. See `Group.local_tablet_uids` and
     * `Group.leader_tablet_uid`.
     * </pre>
     *
     * <code>uint64 tablet_uid = 8;</code>
     *
     * @param value The tabletUid to set.
     * @return This builder for chaining.
     */
    public Builder setTabletUid(long value) {

      tabletUid_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The tablet UID of the tablet from group `group_uid` that the client
     * believes is best to serve this request. See `Group.local_tablet_uids` and
     * `Group.leader_tablet_uid`.
     * </pre>
     *
     * <code>uint64 tablet_uid = 8;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearTabletUid() {
      bitField0_ = (bitField0_ & ~0x00000080);
      tabletUid_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<com.google.spanner.v1.RoutingHint.SkippedTablet> skippedTabletUid_ =
        java.util.Collections.emptyList();

    private void ensureSkippedTabletUidIsMutable() {
      if (!((bitField0_ & 0x00000100) != 0)) {
        skippedTabletUid_ =
            new java.util.ArrayList<com.google.spanner.v1.RoutingHint.SkippedTablet>(
                skippedTabletUid_);
        bitField0_ |= 0x00000100;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.spanner.v1.RoutingHint.SkippedTablet,
            com.google.spanner.v1.RoutingHint.SkippedTablet.Builder,
            com.google.spanner.v1.RoutingHint.SkippedTabletOrBuilder>
        skippedTabletUidBuilder_;

    /**
     *
     *
     * <pre>
     * If the client had multiple options for tablet selection, and some of its
     * first choices were unhealthy (e.g., the server is unreachable, or
     * `Tablet.skip` is true), this field will contain the tablet UIDs of those
     * tablets, with their incarnations. The server may include a `CacheUpdate`
     * with new locations for those tablets.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.RoutingHint.SkippedTablet skipped_tablet_uid = 9;</code>
     */
    public java.util.List<com.google.spanner.v1.RoutingHint.SkippedTablet>
        getSkippedTabletUidList() {
      if (skippedTabletUidBuilder_ == null) {
        return java.util.Collections.unmodifiableList(skippedTabletUid_);
      } else {
        return skippedTabletUidBuilder_.getMessageList();
      }
    }

    /**
     *
     *
     * <pre>
     * If the client had multiple options for tablet selection, and some of its
     * first choices were unhealthy (e.g., the server is unreachable, or
     * `Tablet.skip` is true), this field will contain the tablet UIDs of those
     * tablets, with their incarnations. The server may include a `CacheUpdate`
     * with new locations for those tablets.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.RoutingHint.SkippedTablet skipped_tablet_uid = 9;</code>
     */
    public int getSkippedTabletUidCount() {
      if (skippedTabletUidBuilder_ == null) {
        return skippedTabletUid_.size();
      } else {
        return skippedTabletUidBuilder_.getCount();
      }
    }

    /**
     *
     *
     * <pre>
     * If the client had multiple options for tablet selection, and some of its
     * first choices were unhealthy (e.g., the server is unreachable, or
     * `Tablet.skip` is true), this field will contain the tablet UIDs of those
     * tablets, with their incarnations. The server may include a `CacheUpdate`
     * with new locations for those tablets.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.RoutingHint.SkippedTablet skipped_tablet_uid = 9;</code>
     */
    public com.google.spanner.v1.RoutingHint.SkippedTablet getSkippedTabletUid(int index) {
      if (skippedTabletUidBuilder_ == null) {
        return skippedTabletUid_.get(index);
      } else {
        return skippedTabletUidBuilder_.getMessage(index);
      }
    }

    /**
     *
     *
     * <pre>
     * If the client had multiple options for tablet selection, and some of its
     * first choices were unhealthy (e.g., the server is unreachable, or
     * `Tablet.skip` is true), this field will contain the tablet UIDs of those
     * tablets, with their incarnations. The server may include a `CacheUpdate`
     * with new locations for those tablets.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.RoutingHint.SkippedTablet skipped_tablet_uid = 9;</code>
     */
    public Builder setSkippedTabletUid(
        int index, com.google.spanner.v1.RoutingHint.SkippedTablet value) {
      if (skippedTabletUidBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSkippedTabletUidIsMutable();
        skippedTabletUid_.set(index, value);
        onChanged();
      } else {
        skippedTabletUidBuilder_.setMessage(index, value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * If the client had multiple options for tablet selection, and some of its
     * first choices were unhealthy (e.g., the server is unreachable, or
     * `Tablet.skip` is true), this field will contain the tablet UIDs of those
     * tablets, with their incarnations. The server may include a `CacheUpdate`
     * with new locations for those tablets.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.RoutingHint.SkippedTablet skipped_tablet_uid = 9;</code>
     */
    public Builder setSkippedTabletUid(
        int index, com.google.spanner.v1.RoutingHint.SkippedTablet.Builder builderForValue) {
      if (skippedTabletUidBuilder_ == null) {
        ensureSkippedTabletUidIsMutable();
        skippedTabletUid_.set(index, builderForValue.build());
        onChanged();
      } else {
        skippedTabletUidBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * If the client had multiple options for tablet selection, and some of its
     * first choices were unhealthy (e.g., the server is unreachable, or
     * `Tablet.skip` is true), this field will contain the tablet UIDs of those
     * tablets, with their incarnations. The server may include a `CacheUpdate`
     * with new locations for those tablets.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.RoutingHint.SkippedTablet skipped_tablet_uid = 9;</code>
     */
    public Builder addSkippedTabletUid(com.google.spanner.v1.RoutingHint.SkippedTablet value) {
      if (skippedTabletUidBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSkippedTabletUidIsMutable();
        skippedTabletUid_.add(value);
        onChanged();
      } else {
        skippedTabletUidBuilder_.addMessage(value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * If the client had multiple options for tablet selection, and some of its
     * first choices were unhealthy (e.g., the server is unreachable, or
     * `Tablet.skip` is true), this field will contain the tablet UIDs of those
     * tablets, with their incarnations. The server may include a `CacheUpdate`
     * with new locations for those tablets.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.RoutingHint.SkippedTablet skipped_tablet_uid = 9;</code>
     */
    public Builder addSkippedTabletUid(
        int index, com.google.spanner.v1.RoutingHint.SkippedTablet value) {
      if (skippedTabletUidBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSkippedTabletUidIsMutable();
        skippedTabletUid_.add(index, value);
        onChanged();
      } else {
        skippedTabletUidBuilder_.addMessage(index, value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * If the client had multiple options for tablet selection, and some of its
     * first choices were unhealthy (e.g., the server is unreachable, or
     * `Tablet.skip` is true), this field will contain the tablet UIDs of those
     * tablets, with their incarnations. The server may include a `CacheUpdate`
     * with new locations for those tablets.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.RoutingHint.SkippedTablet skipped_tablet_uid = 9;</code>
     */
    public Builder addSkippedTabletUid(
        com.google.spanner.v1.RoutingHint.SkippedTablet.Builder builderForValue) {
      if (skippedTabletUidBuilder_ == null) {
        ensureSkippedTabletUidIsMutable();
        skippedTabletUid_.add(builderForValue.build());
        onChanged();
      } else {
        skippedTabletUidBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * If the client had multiple options for tablet selection, and some of its
     * first choices were unhealthy (e.g., the server is unreachable, or
     * `Tablet.skip` is true), this field will contain the tablet UIDs of those
     * tablets, with their incarnations. The server may include a `CacheUpdate`
     * with new locations for those tablets.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.RoutingHint.SkippedTablet skipped_tablet_uid = 9;</code>
     */
    public Builder addSkippedTabletUid(
        int index, com.google.spanner.v1.RoutingHint.SkippedTablet.Builder builderForValue) {
      if (skippedTabletUidBuilder_ == null) {
        ensureSkippedTabletUidIsMutable();
        skippedTabletUid_.add(index, builderForValue.build());
        onChanged();
      } else {
        skippedTabletUidBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * If the client had multiple options for tablet selection, and some of its
     * first choices were unhealthy (e.g., the server is unreachable, or
     * `Tablet.skip` is true), this field will contain the tablet UIDs of those
     * tablets, with their incarnations. The server may include a `CacheUpdate`
     * with new locations for those tablets.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.RoutingHint.SkippedTablet skipped_tablet_uid = 9;</code>
     */
    public Builder addAllSkippedTabletUid(
        java.lang.Iterable<? extends com.google.spanner.v1.RoutingHint.SkippedTablet> values) {
      if (skippedTabletUidBuilder_ == null) {
        ensureSkippedTabletUidIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, skippedTabletUid_);
        onChanged();
      } else {
        skippedTabletUidBuilder_.addAllMessages(values);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * If the client had multiple options for tablet selection, and some of its
     * first choices were unhealthy (e.g., the server is unreachable, or
     * `Tablet.skip` is true), this field will contain the tablet UIDs of those
     * tablets, with their incarnations. The server may include a `CacheUpdate`
     * with new locations for those tablets.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.RoutingHint.SkippedTablet skipped_tablet_uid = 9;</code>
     */
    public Builder clearSkippedTabletUid() {
      if (skippedTabletUidBuilder_ == null) {
        skippedTabletUid_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
      } else {
        skippedTabletUidBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * If the client had multiple options for tablet selection, and some of its
     * first choices were unhealthy (e.g., the server is unreachable, or
     * `Tablet.skip` is true), this field will contain the tablet UIDs of those
     * tablets, with their incarnations. The server may include a `CacheUpdate`
     * with new locations for those tablets.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.RoutingHint.SkippedTablet skipped_tablet_uid = 9;</code>
     */
    public Builder removeSkippedTabletUid(int index) {
      if (skippedTabletUidBuilder_ == null) {
        ensureSkippedTabletUidIsMutable();
        skippedTabletUid_.remove(index);
        onChanged();
      } else {
        skippedTabletUidBuilder_.remove(index);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * If the client had multiple options for tablet selection, and some of its
     * first choices were unhealthy (e.g., the server is unreachable, or
     * `Tablet.skip` is true), this field will contain the tablet UIDs of those
     * tablets, with their incarnations. The server may include a `CacheUpdate`
     * with new locations for those tablets.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.RoutingHint.SkippedTablet skipped_tablet_uid = 9;</code>
     */
    public com.google.spanner.v1.RoutingHint.SkippedTablet.Builder getSkippedTabletUidBuilder(
        int index) {
      return getSkippedTabletUidFieldBuilder().getBuilder(index);
    }

    /**
     *
     *
     * <pre>
     * If the client had multiple options for tablet selection, and some of its
     * first choices were unhealthy (e.g., the server is unreachable, or
     * `Tablet.skip` is true), this field will contain the tablet UIDs of those
     * tablets, with their incarnations. The server may include a `CacheUpdate`
     * with new locations for those tablets.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.RoutingHint.SkippedTablet skipped_tablet_uid = 9;</code>
     */
    public com.google.spanner.v1.RoutingHint.SkippedTabletOrBuilder getSkippedTabletUidOrBuilder(
        int index) {
      if (skippedTabletUidBuilder_ == null) {
        return skippedTabletUid_.get(index);
      } else {
        return skippedTabletUidBuilder_.getMessageOrBuilder(index);
      }
    }

    /**
     *
     *
     * <pre>
     * If the client had multiple options for tablet selection, and some of its
     * first choices were unhealthy (e.g., the server is unreachable, or
     * `Tablet.skip` is true), this field will contain the tablet UIDs of those
     * tablets, with their incarnations. The server may include a `CacheUpdate`
     * with new locations for those tablets.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.RoutingHint.SkippedTablet skipped_tablet_uid = 9;</code>
     */
    public java.util.List<? extends com.google.spanner.v1.RoutingHint.SkippedTabletOrBuilder>
        getSkippedTabletUidOrBuilderList() {
      if (skippedTabletUidBuilder_ != null) {
        return skippedTabletUidBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(skippedTabletUid_);
      }
    }

    /**
     *
     *
     * <pre>
     * If the client had multiple options for tablet selection, and some of its
     * first choices were unhealthy (e.g., the server is unreachable, or
     * `Tablet.skip` is true), this field will contain the tablet UIDs of those
     * tablets, with their incarnations. The server may include a `CacheUpdate`
     * with new locations for those tablets.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.RoutingHint.SkippedTablet skipped_tablet_uid = 9;</code>
     */
    public com.google.spanner.v1.RoutingHint.SkippedTablet.Builder addSkippedTabletUidBuilder() {
      return getSkippedTabletUidFieldBuilder()
          .addBuilder(com.google.spanner.v1.RoutingHint.SkippedTablet.getDefaultInstance());
    }

    /**
     *
     *
     * <pre>
     * If the client had multiple options for tablet selection, and some of its
     * first choices were unhealthy (e.g., the server is unreachable, or
     * `Tablet.skip` is true), this field will contain the tablet UIDs of those
     * tablets, with their incarnations. The server may include a `CacheUpdate`
     * with new locations for those tablets.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.RoutingHint.SkippedTablet skipped_tablet_uid = 9;</code>
     */
    public com.google.spanner.v1.RoutingHint.SkippedTablet.Builder addSkippedTabletUidBuilder(
        int index) {
      return getSkippedTabletUidFieldBuilder()
          .addBuilder(index, com.google.spanner.v1.RoutingHint.SkippedTablet.getDefaultInstance());
    }

    /**
     *
     *
     * <pre>
     * If the client had multiple options for tablet selection, and some of its
     * first choices were unhealthy (e.g., the server is unreachable, or
     * `Tablet.skip` is true), this field will contain the tablet UIDs of those
     * tablets, with their incarnations. The server may include a `CacheUpdate`
     * with new locations for those tablets.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.RoutingHint.SkippedTablet skipped_tablet_uid = 9;</code>
     */
    public java.util.List<com.google.spanner.v1.RoutingHint.SkippedTablet.Builder>
        getSkippedTabletUidBuilderList() {
      return getSkippedTabletUidFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.spanner.v1.RoutingHint.SkippedTablet,
            com.google.spanner.v1.RoutingHint.SkippedTablet.Builder,
            com.google.spanner.v1.RoutingHint.SkippedTabletOrBuilder>
        getSkippedTabletUidFieldBuilder() {
      if (skippedTabletUidBuilder_ == null) {
        skippedTabletUidBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.spanner.v1.RoutingHint.SkippedTablet,
                com.google.spanner.v1.RoutingHint.SkippedTablet.Builder,
                com.google.spanner.v1.RoutingHint.SkippedTabletOrBuilder>(
                skippedTabletUid_,
                ((bitField0_ & 0x00000100) != 0),
                getParentForChildren(),
                isClean());
        skippedTabletUid_ = null;
      }
      return skippedTabletUidBuilder_;
    }

    private java.lang.Object clientLocation_ = "";

    /**
     *
     *
     * <pre>
     * If present, the client's current location. In the Spanner managed service,
     * this should be the name of a Google Cloud zone or region, such as
     * "us-central1". In Spanner Omni, this should correspond to a previously
     * created location.
     *
     * If absent, the client's location will be assumed to be the same as the
     * location of the server the client ends up connected to.
     *
     * Locations are primarily valuable for clients that connect from regions
     * other than the ones that contain the Spanner database.
     * </pre>
     *
     * <code>string client_location = 10;</code>
     *
     * @return The clientLocation.
     */
    public java.lang.String getClientLocation() {
      java.lang.Object ref = clientLocation_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clientLocation_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * If present, the client's current location. In the Spanner managed service,
     * this should be the name of a Google Cloud zone or region, such as
     * "us-central1". In Spanner Omni, this should correspond to a previously
     * created location.
     *
     * If absent, the client's location will be assumed to be the same as the
     * location of the server the client ends up connected to.
     *
     * Locations are primarily valuable for clients that connect from regions
     * other than the ones that contain the Spanner database.
     * </pre>
     *
     * <code>string client_location = 10;</code>
     *
     * @return The bytes for clientLocation.
     */
    public com.google.protobuf.ByteString getClientLocationBytes() {
      java.lang.Object ref = clientLocation_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        clientLocation_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * If present, the client's current location. In the Spanner managed service,
     * this should be the name of a Google Cloud zone or region, such as
     * "us-central1". In Spanner Omni, this should correspond to a previously
     * created location.
     *
     * If absent, the client's location will be assumed to be the same as the
     * location of the server the client ends up connected to.
     *
     * Locations are primarily valuable for clients that connect from regions
     * other than the ones that contain the Spanner database.
     * </pre>
     *
     * <code>string client_location = 10;</code>
     *
     * @param value The clientLocation to set.
     * @return This builder for chaining.
     */
    public Builder setClientLocation(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      clientLocation_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * If present, the client's current location. In the Spanner managed service,
     * this should be the name of a Google Cloud zone or region, such as
     * "us-central1". In Spanner Omni, this should correspond to a previously
     * created location.
     *
     * If absent, the client's location will be assumed to be the same as the
     * location of the server the client ends up connected to.
     *
     * Locations are primarily valuable for clients that connect from regions
     * other than the ones that contain the Spanner database.
     * </pre>
     *
     * <code>string client_location = 10;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearClientLocation() {
      clientLocation_ = getDefaultInstance().getClientLocation();
      bitField0_ = (bitField0_ & ~0x00000200);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * If present, the client's current location. In the Spanner managed service,
     * this should be the name of a Google Cloud zone or region, such as
     * "us-central1". In Spanner Omni, this should correspond to a previously
     * created location.
     *
     * If absent, the client's location will be assumed to be the same as the
     * location of the server the client ends up connected to.
     *
     * Locations are primarily valuable for clients that connect from regions
     * other than the ones that contain the Spanner database.
     * </pre>
     *
     * <code>string client_location = 10;</code>
     *
     * @param value The bytes for clientLocation to set.
     * @return This builder for chaining.
     */
    public Builder setClientLocationBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      clientLocation_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.spanner.v1.RoutingHint)
  }

  // @@protoc_insertion_point(class_scope:google.spanner.v1.RoutingHint)
  private static final com.google.spanner.v1.RoutingHint DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.spanner.v1.RoutingHint();
  }

  public static com.google.spanner.v1.RoutingHint getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RoutingHint> PARSER =
      new com.google.protobuf.AbstractParser<RoutingHint>() {
        @java.lang.Override
        public RoutingHint parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<RoutingHint> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RoutingHint> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.spanner.v1.RoutingHint getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
