/*
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/spanner/v1/location.proto

// Protobuf Java Version: 3.25.7
package com.google.spanner.v1;

public interface CacheUpdateOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.spanner.v1.CacheUpdate)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * An internal ID for the database. Database names can be reused if a database
   * is deleted and re-created. Each time the database is re-created, it will
   * get a new database ID, which will never be re-used for any other database.
   * </pre>
   *
   * <code>uint64 database_id = 1;</code>
   *
   * @return The databaseId.
   */
  long getDatabaseId();

  /**
   *
   *
   * <pre>
   * A list of ranges to be cached.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.Range range = 2;</code>
   */
  java.util.List<com.google.spanner.v1.Range> getRangeList();
  /**
   *
   *
   * <pre>
   * A list of ranges to be cached.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.Range range = 2;</code>
   */
  com.google.spanner.v1.Range getRange(int index);
  /**
   *
   *
   * <pre>
   * A list of ranges to be cached.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.Range range = 2;</code>
   */
  int getRangeCount();
  /**
   *
   *
   * <pre>
   * A list of ranges to be cached.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.Range range = 2;</code>
   */
  java.util.List<? extends com.google.spanner.v1.RangeOrBuilder> getRangeOrBuilderList();
  /**
   *
   *
   * <pre>
   * A list of ranges to be cached.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.Range range = 2;</code>
   */
  com.google.spanner.v1.RangeOrBuilder getRangeOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * A list of groups to be cached.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.Group group = 3;</code>
   */
  java.util.List<com.google.spanner.v1.Group> getGroupList();
  /**
   *
   *
   * <pre>
   * A list of groups to be cached.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.Group group = 3;</code>
   */
  com.google.spanner.v1.Group getGroup(int index);
  /**
   *
   *
   * <pre>
   * A list of groups to be cached.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.Group group = 3;</code>
   */
  int getGroupCount();
  /**
   *
   *
   * <pre>
   * A list of groups to be cached.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.Group group = 3;</code>
   */
  java.util.List<? extends com.google.spanner.v1.GroupOrBuilder> getGroupOrBuilderList();
  /**
   *
   *
   * <pre>
   * A list of groups to be cached.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.Group group = 3;</code>
   */
  com.google.spanner.v1.GroupOrBuilder getGroupOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * A list of tablets to be cached.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.Tablet tablet = 4;</code>
   */
  java.util.List<com.google.spanner.v1.Tablet> getTabletList();
  /**
   *
   *
   * <pre>
   * A list of tablets to be cached.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.Tablet tablet = 4;</code>
   */
  com.google.spanner.v1.Tablet getTablet(int index);
  /**
   *
   *
   * <pre>
   * A list of tablets to be cached.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.Tablet tablet = 4;</code>
   */
  int getTabletCount();
  /**
   *
   *
   * <pre>
   * A list of tablets to be cached.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.Tablet tablet = 4;</code>
   */
  java.util.List<? extends com.google.spanner.v1.TabletOrBuilder> getTabletOrBuilderList();
  /**
   *
   *
   * <pre>
   * A list of tablets to be cached.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.Tablet tablet = 4;</code>
   */
  com.google.spanner.v1.TabletOrBuilder getTabletOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * A list of recipes to be cached.
   * </pre>
   *
   * <code>.google.spanner.v1.RecipeList key_recipes = 5;</code>
   *
   * @return Whether the keyRecipes field is set.
   */
  boolean hasKeyRecipes();
  /**
   *
   *
   * <pre>
   * A list of recipes to be cached.
   * </pre>
   *
   * <code>.google.spanner.v1.RecipeList key_recipes = 5;</code>
   *
   * @return The keyRecipes.
   */
  com.google.spanner.v1.RecipeList getKeyRecipes();
  /**
   *
   *
   * <pre>
   * A list of recipes to be cached.
   * </pre>
   *
   * <code>.google.spanner.v1.RecipeList key_recipes = 5;</code>
   */
  com.google.spanner.v1.RecipeListOrBuilder getKeyRecipesOrBuilder();
}
