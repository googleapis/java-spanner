/*
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/spanner/executor/v1/cloud_executor.proto

// Protobuf Java Version: 3.25.2
package com.google.spanner.executor.v1;

public interface DataChangeRecordOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.spanner.executor.v1.DataChangeRecord)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The timestamp in which the change was committed.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp commit_time = 1;</code>
   *
   * @return Whether the commitTime field is set.
   */
  boolean hasCommitTime();
  /**
   *
   *
   * <pre>
   * The timestamp in which the change was committed.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp commit_time = 1;</code>
   *
   * @return The commitTime.
   */
  com.google.protobuf.Timestamp getCommitTime();
  /**
   *
   *
   * <pre>
   * The timestamp in which the change was committed.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp commit_time = 1;</code>
   */
  com.google.protobuf.TimestampOrBuilder getCommitTimeOrBuilder();

  /**
   *
   *
   * <pre>
   * The sequence number for the record within the transaction.
   * </pre>
   *
   * <code>string record_sequence = 2;</code>
   *
   * @return The recordSequence.
   */
  java.lang.String getRecordSequence();
  /**
   *
   *
   * <pre>
   * The sequence number for the record within the transaction.
   * </pre>
   *
   * <code>string record_sequence = 2;</code>
   *
   * @return The bytes for recordSequence.
   */
  com.google.protobuf.ByteString getRecordSequenceBytes();

  /**
   *
   *
   * <pre>
   * A globally unique string that represents the transaction in which the
   * change was committed.
   * </pre>
   *
   * <code>string transaction_id = 3;</code>
   *
   * @return The transactionId.
   */
  java.lang.String getTransactionId();
  /**
   *
   *
   * <pre>
   * A globally unique string that represents the transaction in which the
   * change was committed.
   * </pre>
   *
   * <code>string transaction_id = 3;</code>
   *
   * @return The bytes for transactionId.
   */
  com.google.protobuf.ByteString getTransactionIdBytes();

  /**
   *
   *
   * <pre>
   * Indicates whether this is the last record for a transaction in the current
   * partition.
   * </pre>
   *
   * <code>bool is_last_record = 4;</code>
   *
   * @return The isLastRecord.
   */
  boolean getIsLastRecord();

  /**
   *
   *
   * <pre>
   * Name of the table affected by the change.
   * </pre>
   *
   * <code>string table = 5;</code>
   *
   * @return The table.
   */
  java.lang.String getTable();
  /**
   *
   *
   * <pre>
   * Name of the table affected by the change.
   * </pre>
   *
   * <code>string table = 5;</code>
   *
   * @return The bytes for table.
   */
  com.google.protobuf.ByteString getTableBytes();

  /**
   *
   *
   * <pre>
   * Column types defined in the schema.
   * </pre>
   *
   * <code>repeated .google.spanner.executor.v1.DataChangeRecord.ColumnType column_types = 6;</code>
   */
  java.util.List<com.google.spanner.executor.v1.DataChangeRecord.ColumnType> getColumnTypesList();
  /**
   *
   *
   * <pre>
   * Column types defined in the schema.
   * </pre>
   *
   * <code>repeated .google.spanner.executor.v1.DataChangeRecord.ColumnType column_types = 6;</code>
   */
  com.google.spanner.executor.v1.DataChangeRecord.ColumnType getColumnTypes(int index);
  /**
   *
   *
   * <pre>
   * Column types defined in the schema.
   * </pre>
   *
   * <code>repeated .google.spanner.executor.v1.DataChangeRecord.ColumnType column_types = 6;</code>
   */
  int getColumnTypesCount();
  /**
   *
   *
   * <pre>
   * Column types defined in the schema.
   * </pre>
   *
   * <code>repeated .google.spanner.executor.v1.DataChangeRecord.ColumnType column_types = 6;</code>
   */
  java.util.List<? extends com.google.spanner.executor.v1.DataChangeRecord.ColumnTypeOrBuilder>
      getColumnTypesOrBuilderList();
  /**
   *
   *
   * <pre>
   * Column types defined in the schema.
   * </pre>
   *
   * <code>repeated .google.spanner.executor.v1.DataChangeRecord.ColumnType column_types = 6;</code>
   */
  com.google.spanner.executor.v1.DataChangeRecord.ColumnTypeOrBuilder getColumnTypesOrBuilder(
      int index);

  /**
   *
   *
   * <pre>
   * Changes made in the transaction.
   * </pre>
   *
   * <code>repeated .google.spanner.executor.v1.DataChangeRecord.Mod mods = 7;</code>
   */
  java.util.List<com.google.spanner.executor.v1.DataChangeRecord.Mod> getModsList();
  /**
   *
   *
   * <pre>
   * Changes made in the transaction.
   * </pre>
   *
   * <code>repeated .google.spanner.executor.v1.DataChangeRecord.Mod mods = 7;</code>
   */
  com.google.spanner.executor.v1.DataChangeRecord.Mod getMods(int index);
  /**
   *
   *
   * <pre>
   * Changes made in the transaction.
   * </pre>
   *
   * <code>repeated .google.spanner.executor.v1.DataChangeRecord.Mod mods = 7;</code>
   */
  int getModsCount();
  /**
   *
   *
   * <pre>
   * Changes made in the transaction.
   * </pre>
   *
   * <code>repeated .google.spanner.executor.v1.DataChangeRecord.Mod mods = 7;</code>
   */
  java.util.List<? extends com.google.spanner.executor.v1.DataChangeRecord.ModOrBuilder>
      getModsOrBuilderList();
  /**
   *
   *
   * <pre>
   * Changes made in the transaction.
   * </pre>
   *
   * <code>repeated .google.spanner.executor.v1.DataChangeRecord.Mod mods = 7;</code>
   */
  com.google.spanner.executor.v1.DataChangeRecord.ModOrBuilder getModsOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * Describes the type of change. One of INSERT, UPDATE or DELETE.
   * </pre>
   *
   * <code>string mod_type = 8;</code>
   *
   * @return The modType.
   */
  java.lang.String getModType();
  /**
   *
   *
   * <pre>
   * Describes the type of change. One of INSERT, UPDATE or DELETE.
   * </pre>
   *
   * <code>string mod_type = 8;</code>
   *
   * @return The bytes for modType.
   */
  com.google.protobuf.ByteString getModTypeBytes();

  /**
   *
   *
   * <pre>
   * One of value capture type: NEW_VALUES, OLD_VALUES, OLD_AND_NEW_VALUES.
   * </pre>
   *
   * <code>string value_capture_type = 9;</code>
   *
   * @return The valueCaptureType.
   */
  java.lang.String getValueCaptureType();
  /**
   *
   *
   * <pre>
   * One of value capture type: NEW_VALUES, OLD_VALUES, OLD_AND_NEW_VALUES.
   * </pre>
   *
   * <code>string value_capture_type = 9;</code>
   *
   * @return The bytes for valueCaptureType.
   */
  com.google.protobuf.ByteString getValueCaptureTypeBytes();

  /**
   *
   *
   * <pre>
   * Number of records in transactions.
   * </pre>
   *
   * <code>int64 record_count = 10;</code>
   *
   * @return The recordCount.
   */
  long getRecordCount();

  /**
   *
   *
   * <pre>
   * Number of partitions in transactions.
   * </pre>
   *
   * <code>int64 partition_count = 11;</code>
   *
   * @return The partitionCount.
   */
  long getPartitionCount();

  /**
   *
   *
   * <pre>
   * Transaction tag info.
   * </pre>
   *
   * <code>string transaction_tag = 12;</code>
   *
   * @return The transactionTag.
   */
  java.lang.String getTransactionTag();
  /**
   *
   *
   * <pre>
   * Transaction tag info.
   * </pre>
   *
   * <code>string transaction_tag = 12;</code>
   *
   * @return The bytes for transactionTag.
   */
  com.google.protobuf.ByteString getTransactionTagBytes();

  /**
   *
   *
   * <pre>
   * Whether the transaction is a system transactionn.
   * </pre>
   *
   * <code>bool is_system_transaction = 13;</code>
   *
   * @return The isSystemTransaction.
   */
  boolean getIsSystemTransaction();
}
