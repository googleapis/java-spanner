/*
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/spanner/executor/v1/cloud_executor.proto

// Protobuf Java Version: 3.25.2
package com.google.spanner.executor.v1;

public interface ValueOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.spanner.executor.v1.Value)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * If is_null is set, then this value is null.
   * </pre>
   *
   * <code>bool is_null = 1;</code>
   *
   * @return Whether the isNull field is set.
   */
  boolean hasIsNull();
  /**
   *
   *
   * <pre>
   * If is_null is set, then this value is null.
   * </pre>
   *
   * <code>bool is_null = 1;</code>
   *
   * @return The isNull.
   */
  boolean getIsNull();

  /**
   *
   *
   * <pre>
   * Int type value. It's used for all integer number types, like int32 and
   * int64.
   * </pre>
   *
   * <code>int64 int_value = 2;</code>
   *
   * @return Whether the intValue field is set.
   */
  boolean hasIntValue();
  /**
   *
   *
   * <pre>
   * Int type value. It's used for all integer number types, like int32 and
   * int64.
   * </pre>
   *
   * <code>int64 int_value = 2;</code>
   *
   * @return The intValue.
   */
  long getIntValue();

  /**
   *
   *
   * <pre>
   * Bool type value.
   * </pre>
   *
   * <code>bool bool_value = 3;</code>
   *
   * @return Whether the boolValue field is set.
   */
  boolean hasBoolValue();
  /**
   *
   *
   * <pre>
   * Bool type value.
   * </pre>
   *
   * <code>bool bool_value = 3;</code>
   *
   * @return The boolValue.
   */
  boolean getBoolValue();

  /**
   *
   *
   * <pre>
   * Double type value. It's used for all float point types, like float and
   * double.
   * </pre>
   *
   * <code>double double_value = 4;</code>
   *
   * @return Whether the doubleValue field is set.
   */
  boolean hasDoubleValue();
  /**
   *
   *
   * <pre>
   * Double type value. It's used for all float point types, like float and
   * double.
   * </pre>
   *
   * <code>double double_value = 4;</code>
   *
   * @return The doubleValue.
   */
  double getDoubleValue();

  /**
   *
   *
   * <pre>
   * Bytes type value, stored in CORD. It's also used for PROTO type value.
   * </pre>
   *
   * <code>bytes bytes_value = 5;</code>
   *
   * @return Whether the bytesValue field is set.
   */
  boolean hasBytesValue();
  /**
   *
   *
   * <pre>
   * Bytes type value, stored in CORD. It's also used for PROTO type value.
   * </pre>
   *
   * <code>bytes bytes_value = 5;</code>
   *
   * @return The bytesValue.
   */
  com.google.protobuf.ByteString getBytesValue();

  /**
   *
   *
   * <pre>
   * String type value, stored in CORD.
   * </pre>
   *
   * <code>string string_value = 6;</code>
   *
   * @return Whether the stringValue field is set.
   */
  boolean hasStringValue();
  /**
   *
   *
   * <pre>
   * String type value, stored in CORD.
   * </pre>
   *
   * <code>string string_value = 6;</code>
   *
   * @return The stringValue.
   */
  java.lang.String getStringValue();
  /**
   *
   *
   * <pre>
   * String type value, stored in CORD.
   * </pre>
   *
   * <code>string string_value = 6;</code>
   *
   * @return The bytes for stringValue.
   */
  com.google.protobuf.ByteString getStringValueBytes();

  /**
   *
   *
   * <pre>
   * Struct type value. It contains a ValueList representing the values in
   * this struct.
   * </pre>
   *
   * <code>.google.spanner.executor.v1.ValueList struct_value = 7;</code>
   *
   * @return Whether the structValue field is set.
   */
  boolean hasStructValue();
  /**
   *
   *
   * <pre>
   * Struct type value. It contains a ValueList representing the values in
   * this struct.
   * </pre>
   *
   * <code>.google.spanner.executor.v1.ValueList struct_value = 7;</code>
   *
   * @return The structValue.
   */
  com.google.spanner.executor.v1.ValueList getStructValue();
  /**
   *
   *
   * <pre>
   * Struct type value. It contains a ValueList representing the values in
   * this struct.
   * </pre>
   *
   * <code>.google.spanner.executor.v1.ValueList struct_value = 7;</code>
   */
  com.google.spanner.executor.v1.ValueListOrBuilder getStructValueOrBuilder();

  /**
   *
   *
   * <pre>
   * Timestamp type value.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp timestamp_value = 8;</code>
   *
   * @return Whether the timestampValue field is set.
   */
  boolean hasTimestampValue();
  /**
   *
   *
   * <pre>
   * Timestamp type value.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp timestamp_value = 8;</code>
   *
   * @return The timestampValue.
   */
  com.google.protobuf.Timestamp getTimestampValue();
  /**
   *
   *
   * <pre>
   * Timestamp type value.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp timestamp_value = 8;</code>
   */
  com.google.protobuf.TimestampOrBuilder getTimestampValueOrBuilder();

  /**
   *
   *
   * <pre>
   * Date type value. Date is specified as a number of days since Unix epoch.
   * </pre>
   *
   * <code>int32 date_days_value = 9;</code>
   *
   * @return Whether the dateDaysValue field is set.
   */
  boolean hasDateDaysValue();
  /**
   *
   *
   * <pre>
   * Date type value. Date is specified as a number of days since Unix epoch.
   * </pre>
   *
   * <code>int32 date_days_value = 9;</code>
   *
   * @return The dateDaysValue.
   */
  int getDateDaysValue();

  /**
   *
   *
   * <pre>
   * If set, holds the sentinel value for the transaction CommitTimestamp.
   * </pre>
   *
   * <code>bool is_commit_timestamp = 10;</code>
   *
   * @return Whether the isCommitTimestamp field is set.
   */
  boolean hasIsCommitTimestamp();
  /**
   *
   *
   * <pre>
   * If set, holds the sentinel value for the transaction CommitTimestamp.
   * </pre>
   *
   * <code>bool is_commit_timestamp = 10;</code>
   *
   * @return The isCommitTimestamp.
   */
  boolean getIsCommitTimestamp();

  /**
   *
   *
   * <pre>
   * Array type value. The underlying Valuelist should have values that have
   * the same type.
   * </pre>
   *
   * <code>.google.spanner.executor.v1.ValueList array_value = 11;</code>
   *
   * @return Whether the arrayValue field is set.
   */
  boolean hasArrayValue();
  /**
   *
   *
   * <pre>
   * Array type value. The underlying Valuelist should have values that have
   * the same type.
   * </pre>
   *
   * <code>.google.spanner.executor.v1.ValueList array_value = 11;</code>
   *
   * @return The arrayValue.
   */
  com.google.spanner.executor.v1.ValueList getArrayValue();
  /**
   *
   *
   * <pre>
   * Array type value. The underlying Valuelist should have values that have
   * the same type.
   * </pre>
   *
   * <code>.google.spanner.executor.v1.ValueList array_value = 11;</code>
   */
  com.google.spanner.executor.v1.ValueListOrBuilder getArrayValueOrBuilder();

  /**
   *
   *
   * <pre>
   * Type of array element. Only set if value is an array.
   * </pre>
   *
   * <code>optional .google.spanner.v1.Type array_type = 12;</code>
   *
   * @return Whether the arrayType field is set.
   */
  boolean hasArrayType();
  /**
   *
   *
   * <pre>
   * Type of array element. Only set if value is an array.
   * </pre>
   *
   * <code>optional .google.spanner.v1.Type array_type = 12;</code>
   *
   * @return The arrayType.
   */
  com.google.spanner.v1.Type getArrayType();
  /**
   *
   *
   * <pre>
   * Type of array element. Only set if value is an array.
   * </pre>
   *
   * <code>optional .google.spanner.v1.Type array_type = 12;</code>
   */
  com.google.spanner.v1.TypeOrBuilder getArrayTypeOrBuilder();

  com.google.spanner.executor.v1.Value.ValueTypeCase getValueTypeCase();
}
