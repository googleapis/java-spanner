// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/spanner/v1/query_plan.proto

package com.google.spanner.v1;

/**
 * <pre>
 * Node information for nodes appearing in a [QueryPlan.plan_nodes][google.spanner.v1.QueryPlan.plan_nodes].
 * </pre>
 *
 * Protobuf type {@code google.spanner.v1.PlanNode}
 */
public final class PlanNode extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.spanner.v1.PlanNode)
    PlanNodeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PlanNode.newBuilder() to construct.
  private PlanNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PlanNode() {
    kind_ = 0;
    displayName_ = "";
    childLinks_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PlanNode();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.spanner.v1.QueryPlanProto.internal_static_google_spanner_v1_PlanNode_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.spanner.v1.QueryPlanProto.internal_static_google_spanner_v1_PlanNode_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.spanner.v1.PlanNode.class, com.google.spanner.v1.PlanNode.Builder.class);
  }

  /**
   * <pre>
   * The kind of [PlanNode][google.spanner.v1.PlanNode]. Distinguishes between the two different kinds of
   * nodes that can appear in a query plan.
   * </pre>
   *
   * Protobuf enum {@code google.spanner.v1.PlanNode.Kind}
   */
  public enum Kind
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Not specified.
     * </pre>
     *
     * <code>KIND_UNSPECIFIED = 0;</code>
     */
    KIND_UNSPECIFIED(0),
    /**
     * <pre>
     * Denotes a Relational operator node in the expression tree. Relational
     * operators represent iterative processing of rows during query execution.
     * For example, a `TableScan` operation that reads rows from a table.
     * </pre>
     *
     * <code>RELATIONAL = 1;</code>
     */
    RELATIONAL(1),
    /**
     * <pre>
     * Denotes a Scalar node in the expression tree. Scalar nodes represent
     * non-iterable entities in the query plan. For example, constants or
     * arithmetic operators appearing inside predicate expressions or references
     * to column names.
     * </pre>
     *
     * <code>SCALAR = 2;</code>
     */
    SCALAR(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Not specified.
     * </pre>
     *
     * <code>KIND_UNSPECIFIED = 0;</code>
     */
    public static final int KIND_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * Denotes a Relational operator node in the expression tree. Relational
     * operators represent iterative processing of rows during query execution.
     * For example, a `TableScan` operation that reads rows from a table.
     * </pre>
     *
     * <code>RELATIONAL = 1;</code>
     */
    public static final int RELATIONAL_VALUE = 1;
    /**
     * <pre>
     * Denotes a Scalar node in the expression tree. Scalar nodes represent
     * non-iterable entities in the query plan. For example, constants or
     * arithmetic operators appearing inside predicate expressions or references
     * to column names.
     * </pre>
     *
     * <code>SCALAR = 2;</code>
     */
    public static final int SCALAR_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Kind valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Kind forNumber(int value) {
      switch (value) {
        case 0: return KIND_UNSPECIFIED;
        case 1: return RELATIONAL;
        case 2: return SCALAR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Kind>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Kind> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Kind>() {
            public Kind findValueByNumber(int number) {
              return Kind.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.spanner.v1.PlanNode.getDescriptor().getEnumTypes().get(0);
    }

    private static final Kind[] VALUES = values();

    public static Kind valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Kind(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.spanner.v1.PlanNode.Kind)
  }

  public interface ChildLinkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.spanner.v1.PlanNode.ChildLink)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The node to which the link points.
     * </pre>
     *
     * <code>int32 child_index = 1;</code>
     * @return The childIndex.
     */
    int getChildIndex();

    /**
     * <pre>
     * The type of the link. For example, in Hash Joins this could be used to
     * distinguish between the build child and the probe child, or in the case
     * of the child being an output variable, to represent the tag associated
     * with the output variable.
     * </pre>
     *
     * <code>string type = 2;</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type of the link. For example, in Hash Joins this could be used to
     * distinguish between the build child and the probe child, or in the case
     * of the child being an output variable, to represent the tag associated
     * with the output variable.
     * </pre>
     *
     * <code>string type = 2;</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * Only present if the child node is [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] and corresponds
     * to an output variable of the parent node. The field carries the name of
     * the output variable.
     * For example, a `TableScan` operator that reads rows from a table will
     * have child links to the `SCALAR` nodes representing the output variables
     * created for each column that is read by the operator. The corresponding
     * `variable` fields will be set to the variable names assigned to the
     * columns.
     * </pre>
     *
     * <code>string variable = 3;</code>
     * @return The variable.
     */
    java.lang.String getVariable();
    /**
     * <pre>
     * Only present if the child node is [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] and corresponds
     * to an output variable of the parent node. The field carries the name of
     * the output variable.
     * For example, a `TableScan` operator that reads rows from a table will
     * have child links to the `SCALAR` nodes representing the output variables
     * created for each column that is read by the operator. The corresponding
     * `variable` fields will be set to the variable names assigned to the
     * columns.
     * </pre>
     *
     * <code>string variable = 3;</code>
     * @return The bytes for variable.
     */
    com.google.protobuf.ByteString
        getVariableBytes();
  }
  /**
   * <pre>
   * Metadata associated with a parent-child relationship appearing in a
   * [PlanNode][google.spanner.v1.PlanNode].
   * </pre>
   *
   * Protobuf type {@code google.spanner.v1.PlanNode.ChildLink}
   */
  public static final class ChildLink extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.spanner.v1.PlanNode.ChildLink)
      ChildLinkOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChildLink.newBuilder() to construct.
    private ChildLink(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChildLink() {
      type_ = "";
      variable_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ChildLink();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.spanner.v1.QueryPlanProto.internal_static_google_spanner_v1_PlanNode_ChildLink_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.spanner.v1.QueryPlanProto.internal_static_google_spanner_v1_PlanNode_ChildLink_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.spanner.v1.PlanNode.ChildLink.class, com.google.spanner.v1.PlanNode.ChildLink.Builder.class);
    }

    public static final int CHILD_INDEX_FIELD_NUMBER = 1;
    private int childIndex_ = 0;
    /**
     * <pre>
     * The node to which the link points.
     * </pre>
     *
     * <code>int32 child_index = 1;</code>
     * @return The childIndex.
     */
    @java.lang.Override
    public int getChildIndex() {
      return childIndex_;
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object type_ = "";
    /**
     * <pre>
     * The type of the link. For example, in Hash Joins this could be used to
     * distinguish between the build child and the probe child, or in the case
     * of the child being an output variable, to represent the tag associated
     * with the output variable.
     * </pre>
     *
     * <code>string type = 2;</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type of the link. For example, in Hash Joins this could be used to
     * distinguish between the build child and the probe child, or in the case
     * of the child being an output variable, to represent the tag associated
     * with the output variable.
     * </pre>
     *
     * <code>string type = 2;</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VARIABLE_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object variable_ = "";
    /**
     * <pre>
     * Only present if the child node is [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] and corresponds
     * to an output variable of the parent node. The field carries the name of
     * the output variable.
     * For example, a `TableScan` operator that reads rows from a table will
     * have child links to the `SCALAR` nodes representing the output variables
     * created for each column that is read by the operator. The corresponding
     * `variable` fields will be set to the variable names assigned to the
     * columns.
     * </pre>
     *
     * <code>string variable = 3;</code>
     * @return The variable.
     */
    @java.lang.Override
    public java.lang.String getVariable() {
      java.lang.Object ref = variable_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        variable_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Only present if the child node is [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] and corresponds
     * to an output variable of the parent node. The field carries the name of
     * the output variable.
     * For example, a `TableScan` operator that reads rows from a table will
     * have child links to the `SCALAR` nodes representing the output variables
     * created for each column that is read by the operator. The corresponding
     * `variable` fields will be set to the variable names assigned to the
     * columns.
     * </pre>
     *
     * <code>string variable = 3;</code>
     * @return The bytes for variable.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVariableBytes() {
      java.lang.Object ref = variable_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        variable_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (childIndex_ != 0) {
        output.writeInt32(1, childIndex_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, type_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(variable_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, variable_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (childIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, childIndex_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, type_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(variable_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, variable_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.spanner.v1.PlanNode.ChildLink)) {
        return super.equals(obj);
      }
      com.google.spanner.v1.PlanNode.ChildLink other = (com.google.spanner.v1.PlanNode.ChildLink) obj;

      if (getChildIndex()
          != other.getChildIndex()) return false;
      if (!getType()
          .equals(other.getType())) return false;
      if (!getVariable()
          .equals(other.getVariable())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CHILD_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getChildIndex();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + VARIABLE_FIELD_NUMBER;
      hash = (53 * hash) + getVariable().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.spanner.v1.PlanNode.ChildLink parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.spanner.v1.PlanNode.ChildLink parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.spanner.v1.PlanNode.ChildLink parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.spanner.v1.PlanNode.ChildLink parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.spanner.v1.PlanNode.ChildLink parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.spanner.v1.PlanNode.ChildLink parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.spanner.v1.PlanNode.ChildLink parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.spanner.v1.PlanNode.ChildLink parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.spanner.v1.PlanNode.ChildLink parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.spanner.v1.PlanNode.ChildLink parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.spanner.v1.PlanNode.ChildLink parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.spanner.v1.PlanNode.ChildLink parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.spanner.v1.PlanNode.ChildLink prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Metadata associated with a parent-child relationship appearing in a
     * [PlanNode][google.spanner.v1.PlanNode].
     * </pre>
     *
     * Protobuf type {@code google.spanner.v1.PlanNode.ChildLink}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.spanner.v1.PlanNode.ChildLink)
        com.google.spanner.v1.PlanNode.ChildLinkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.spanner.v1.QueryPlanProto.internal_static_google_spanner_v1_PlanNode_ChildLink_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.spanner.v1.QueryPlanProto.internal_static_google_spanner_v1_PlanNode_ChildLink_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.spanner.v1.PlanNode.ChildLink.class, com.google.spanner.v1.PlanNode.ChildLink.Builder.class);
      }

      // Construct using com.google.spanner.v1.PlanNode.ChildLink.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        childIndex_ = 0;
        type_ = "";
        variable_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.spanner.v1.QueryPlanProto.internal_static_google_spanner_v1_PlanNode_ChildLink_descriptor;
      }

      @java.lang.Override
      public com.google.spanner.v1.PlanNode.ChildLink getDefaultInstanceForType() {
        return com.google.spanner.v1.PlanNode.ChildLink.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.spanner.v1.PlanNode.ChildLink build() {
        com.google.spanner.v1.PlanNode.ChildLink result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.spanner.v1.PlanNode.ChildLink buildPartial() {
        com.google.spanner.v1.PlanNode.ChildLink result = new com.google.spanner.v1.PlanNode.ChildLink(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.spanner.v1.PlanNode.ChildLink result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.childIndex_ = childIndex_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.type_ = type_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.variable_ = variable_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.spanner.v1.PlanNode.ChildLink) {
          return mergeFrom((com.google.spanner.v1.PlanNode.ChildLink)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.spanner.v1.PlanNode.ChildLink other) {
        if (other == com.google.spanner.v1.PlanNode.ChildLink.getDefaultInstance()) return this;
        if (other.getChildIndex() != 0) {
          setChildIndex(other.getChildIndex());
        }
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.getVariable().isEmpty()) {
          variable_ = other.variable_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                childIndex_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                type_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                variable_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int childIndex_ ;
      /**
       * <pre>
       * The node to which the link points.
       * </pre>
       *
       * <code>int32 child_index = 1;</code>
       * @return The childIndex.
       */
      @java.lang.Override
      public int getChildIndex() {
        return childIndex_;
      }
      /**
       * <pre>
       * The node to which the link points.
       * </pre>
       *
       * <code>int32 child_index = 1;</code>
       * @param value The childIndex to set.
       * @return This builder for chaining.
       */
      public Builder setChildIndex(int value) {
        
        childIndex_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The node to which the link points.
       * </pre>
       *
       * <code>int32 child_index = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChildIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        childIndex_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type of the link. For example, in Hash Joins this could be used to
       * distinguish between the build child and the probe child, or in the case
       * of the child being an output variable, to represent the tag associated
       * with the output variable.
       * </pre>
       *
       * <code>string type = 2;</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type of the link. For example, in Hash Joins this could be used to
       * distinguish between the build child and the probe child, or in the case
       * of the child being an output variable, to represent the tag associated
       * with the output variable.
       * </pre>
       *
       * <code>string type = 2;</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type of the link. For example, in Hash Joins this could be used to
       * distinguish between the build child and the probe child, or in the case
       * of the child being an output variable, to represent the tag associated
       * with the output variable.
       * </pre>
       *
       * <code>string type = 2;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        type_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of the link. For example, in Hash Joins this could be used to
       * distinguish between the build child and the probe child, or in the case
       * of the child being an output variable, to represent the tag associated
       * with the output variable.
       * </pre>
       *
       * <code>string type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        type_ = getDefaultInstance().getType();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of the link. For example, in Hash Joins this could be used to
       * distinguish between the build child and the probe child, or in the case
       * of the child being an output variable, to represent the tag associated
       * with the output variable.
       * </pre>
       *
       * <code>string type = 2;</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        type_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.lang.Object variable_ = "";
      /**
       * <pre>
       * Only present if the child node is [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] and corresponds
       * to an output variable of the parent node. The field carries the name of
       * the output variable.
       * For example, a `TableScan` operator that reads rows from a table will
       * have child links to the `SCALAR` nodes representing the output variables
       * created for each column that is read by the operator. The corresponding
       * `variable` fields will be set to the variable names assigned to the
       * columns.
       * </pre>
       *
       * <code>string variable = 3;</code>
       * @return The variable.
       */
      public java.lang.String getVariable() {
        java.lang.Object ref = variable_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          variable_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Only present if the child node is [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] and corresponds
       * to an output variable of the parent node. The field carries the name of
       * the output variable.
       * For example, a `TableScan` operator that reads rows from a table will
       * have child links to the `SCALAR` nodes representing the output variables
       * created for each column that is read by the operator. The corresponding
       * `variable` fields will be set to the variable names assigned to the
       * columns.
       * </pre>
       *
       * <code>string variable = 3;</code>
       * @return The bytes for variable.
       */
      public com.google.protobuf.ByteString
          getVariableBytes() {
        java.lang.Object ref = variable_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          variable_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Only present if the child node is [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] and corresponds
       * to an output variable of the parent node. The field carries the name of
       * the output variable.
       * For example, a `TableScan` operator that reads rows from a table will
       * have child links to the `SCALAR` nodes representing the output variables
       * created for each column that is read by the operator. The corresponding
       * `variable` fields will be set to the variable names assigned to the
       * columns.
       * </pre>
       *
       * <code>string variable = 3;</code>
       * @param value The variable to set.
       * @return This builder for chaining.
       */
      public Builder setVariable(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        variable_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Only present if the child node is [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] and corresponds
       * to an output variable of the parent node. The field carries the name of
       * the output variable.
       * For example, a `TableScan` operator that reads rows from a table will
       * have child links to the `SCALAR` nodes representing the output variables
       * created for each column that is read by the operator. The corresponding
       * `variable` fields will be set to the variable names assigned to the
       * columns.
       * </pre>
       *
       * <code>string variable = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearVariable() {
        variable_ = getDefaultInstance().getVariable();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Only present if the child node is [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] and corresponds
       * to an output variable of the parent node. The field carries the name of
       * the output variable.
       * For example, a `TableScan` operator that reads rows from a table will
       * have child links to the `SCALAR` nodes representing the output variables
       * created for each column that is read by the operator. The corresponding
       * `variable` fields will be set to the variable names assigned to the
       * columns.
       * </pre>
       *
       * <code>string variable = 3;</code>
       * @param value The bytes for variable to set.
       * @return This builder for chaining.
       */
      public Builder setVariableBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        variable_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.spanner.v1.PlanNode.ChildLink)
    }

    // @@protoc_insertion_point(class_scope:google.spanner.v1.PlanNode.ChildLink)
    private static final com.google.spanner.v1.PlanNode.ChildLink DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.spanner.v1.PlanNode.ChildLink();
    }

    public static com.google.spanner.v1.PlanNode.ChildLink getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ChildLink>
        PARSER = new com.google.protobuf.AbstractParser<ChildLink>() {
      @java.lang.Override
      public ChildLink parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ChildLink> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChildLink> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.spanner.v1.PlanNode.ChildLink getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ShortRepresentationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.spanner.v1.PlanNode.ShortRepresentation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A string representation of the expression subtree rooted at this node.
     * </pre>
     *
     * <code>string description = 1;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * A string representation of the expression subtree rooted at this node.
     * </pre>
     *
     * <code>string description = 1;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * A mapping of (subquery variable name) -&gt; (subquery node id) for cases
     * where the `description` string of this node references a `SCALAR`
     * subquery contained in the expression subtree rooted at this node. The
     * referenced `SCALAR` subquery may not necessarily be a direct child of
     * this node.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; subqueries = 2;</code>
     */
    int getSubqueriesCount();
    /**
     * <pre>
     * A mapping of (subquery variable name) -&gt; (subquery node id) for cases
     * where the `description` string of this node references a `SCALAR`
     * subquery contained in the expression subtree rooted at this node. The
     * referenced `SCALAR` subquery may not necessarily be a direct child of
     * this node.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; subqueries = 2;</code>
     */
    boolean containsSubqueries(
        java.lang.String key);
    /**
     * Use {@link #getSubqueriesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getSubqueries();
    /**
     * <pre>
     * A mapping of (subquery variable name) -&gt; (subquery node id) for cases
     * where the `description` string of this node references a `SCALAR`
     * subquery contained in the expression subtree rooted at this node. The
     * referenced `SCALAR` subquery may not necessarily be a direct child of
     * this node.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; subqueries = 2;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getSubqueriesMap();
    /**
     * <pre>
     * A mapping of (subquery variable name) -&gt; (subquery node id) for cases
     * where the `description` string of this node references a `SCALAR`
     * subquery contained in the expression subtree rooted at this node. The
     * referenced `SCALAR` subquery may not necessarily be a direct child of
     * this node.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; subqueries = 2;</code>
     */
    int getSubqueriesOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <pre>
     * A mapping of (subquery variable name) -&gt; (subquery node id) for cases
     * where the `description` string of this node references a `SCALAR`
     * subquery contained in the expression subtree rooted at this node. The
     * referenced `SCALAR` subquery may not necessarily be a direct child of
     * this node.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; subqueries = 2;</code>
     */
    int getSubqueriesOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * Condensed representation of a node and its subtree. Only present for
   * `SCALAR` [PlanNode(s)][google.spanner.v1.PlanNode].
   * </pre>
   *
   * Protobuf type {@code google.spanner.v1.PlanNode.ShortRepresentation}
   */
  public static final class ShortRepresentation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.spanner.v1.PlanNode.ShortRepresentation)
      ShortRepresentationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ShortRepresentation.newBuilder() to construct.
    private ShortRepresentation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ShortRepresentation() {
      description_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ShortRepresentation();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.spanner.v1.QueryPlanProto.internal_static_google_spanner_v1_PlanNode_ShortRepresentation_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetSubqueries();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.spanner.v1.QueryPlanProto.internal_static_google_spanner_v1_PlanNode_ShortRepresentation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.spanner.v1.PlanNode.ShortRepresentation.class, com.google.spanner.v1.PlanNode.ShortRepresentation.Builder.class);
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object description_ = "";
    /**
     * <pre>
     * A string representation of the expression subtree rooted at this node.
     * </pre>
     *
     * <code>string description = 1;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A string representation of the expression subtree rooted at this node.
     * </pre>
     *
     * <code>string description = 1;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SUBQUERIES_FIELD_NUMBER = 2;
    private static final class SubqueriesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  com.google.spanner.v1.QueryPlanProto.internal_static_google_spanner_v1_PlanNode_ShortRepresentation_SubqueriesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> subqueries_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetSubqueries() {
      if (subqueries_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            SubqueriesDefaultEntryHolder.defaultEntry);
      }
      return subqueries_;
    }
    public int getSubqueriesCount() {
      return internalGetSubqueries().getMap().size();
    }
    /**
     * <pre>
     * A mapping of (subquery variable name) -&gt; (subquery node id) for cases
     * where the `description` string of this node references a `SCALAR`
     * subquery contained in the expression subtree rooted at this node. The
     * referenced `SCALAR` subquery may not necessarily be a direct child of
     * this node.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; subqueries = 2;</code>
     */
    @java.lang.Override
    public boolean containsSubqueries(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetSubqueries().getMap().containsKey(key);
    }
    /**
     * Use {@link #getSubqueriesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getSubqueries() {
      return getSubqueriesMap();
    }
    /**
     * <pre>
     * A mapping of (subquery variable name) -&gt; (subquery node id) for cases
     * where the `description` string of this node references a `SCALAR`
     * subquery contained in the expression subtree rooted at this node. The
     * referenced `SCALAR` subquery may not necessarily be a direct child of
     * this node.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; subqueries = 2;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.Integer> getSubqueriesMap() {
      return internalGetSubqueries().getMap();
    }
    /**
     * <pre>
     * A mapping of (subquery variable name) -&gt; (subquery node id) for cases
     * where the `description` string of this node references a `SCALAR`
     * subquery contained in the expression subtree rooted at this node. The
     * referenced `SCALAR` subquery may not necessarily be a direct child of
     * this node.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; subqueries = 2;</code>
     */
    @java.lang.Override
    public int getSubqueriesOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetSubqueries().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * A mapping of (subquery variable name) -&gt; (subquery node id) for cases
     * where the `description` string of this node references a `SCALAR`
     * subquery contained in the expression subtree rooted at this node. The
     * referenced `SCALAR` subquery may not necessarily be a direct child of
     * this node.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; subqueries = 2;</code>
     */
    @java.lang.Override
    public int getSubqueriesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetSubqueries().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, description_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetSubqueries(),
          SubqueriesDefaultEntryHolder.defaultEntry,
          2);
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, description_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetSubqueries().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        subqueries__ = SubqueriesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, subqueries__);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.spanner.v1.PlanNode.ShortRepresentation)) {
        return super.equals(obj);
      }
      com.google.spanner.v1.PlanNode.ShortRepresentation other = (com.google.spanner.v1.PlanNode.ShortRepresentation) obj;

      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!internalGetSubqueries().equals(
          other.internalGetSubqueries())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      if (!internalGetSubqueries().getMap().isEmpty()) {
        hash = (37 * hash) + SUBQUERIES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetSubqueries().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.spanner.v1.PlanNode.ShortRepresentation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.spanner.v1.PlanNode.ShortRepresentation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.spanner.v1.PlanNode.ShortRepresentation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.spanner.v1.PlanNode.ShortRepresentation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.spanner.v1.PlanNode.ShortRepresentation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.spanner.v1.PlanNode.ShortRepresentation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.spanner.v1.PlanNode.ShortRepresentation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.spanner.v1.PlanNode.ShortRepresentation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.spanner.v1.PlanNode.ShortRepresentation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.spanner.v1.PlanNode.ShortRepresentation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.spanner.v1.PlanNode.ShortRepresentation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.spanner.v1.PlanNode.ShortRepresentation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.spanner.v1.PlanNode.ShortRepresentation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Condensed representation of a node and its subtree. Only present for
     * `SCALAR` [PlanNode(s)][google.spanner.v1.PlanNode].
     * </pre>
     *
     * Protobuf type {@code google.spanner.v1.PlanNode.ShortRepresentation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.spanner.v1.PlanNode.ShortRepresentation)
        com.google.spanner.v1.PlanNode.ShortRepresentationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.spanner.v1.QueryPlanProto.internal_static_google_spanner_v1_PlanNode_ShortRepresentation_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetSubqueries();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableSubqueries();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.spanner.v1.QueryPlanProto.internal_static_google_spanner_v1_PlanNode_ShortRepresentation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.spanner.v1.PlanNode.ShortRepresentation.class, com.google.spanner.v1.PlanNode.ShortRepresentation.Builder.class);
      }

      // Construct using com.google.spanner.v1.PlanNode.ShortRepresentation.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        description_ = "";
        internalGetMutableSubqueries().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.spanner.v1.QueryPlanProto.internal_static_google_spanner_v1_PlanNode_ShortRepresentation_descriptor;
      }

      @java.lang.Override
      public com.google.spanner.v1.PlanNode.ShortRepresentation getDefaultInstanceForType() {
        return com.google.spanner.v1.PlanNode.ShortRepresentation.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.spanner.v1.PlanNode.ShortRepresentation build() {
        com.google.spanner.v1.PlanNode.ShortRepresentation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.spanner.v1.PlanNode.ShortRepresentation buildPartial() {
        com.google.spanner.v1.PlanNode.ShortRepresentation result = new com.google.spanner.v1.PlanNode.ShortRepresentation(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.spanner.v1.PlanNode.ShortRepresentation result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.description_ = description_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.subqueries_ = internalGetSubqueries();
          result.subqueries_.makeImmutable();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.spanner.v1.PlanNode.ShortRepresentation) {
          return mergeFrom((com.google.spanner.v1.PlanNode.ShortRepresentation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.spanner.v1.PlanNode.ShortRepresentation other) {
        if (other == com.google.spanner.v1.PlanNode.ShortRepresentation.getDefaultInstance()) return this;
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        internalGetMutableSubqueries().mergeFrom(
            other.internalGetSubqueries());
        bitField0_ |= 0x00000002;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                description_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
                subqueries__ = input.readMessage(
                    SubqueriesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableSubqueries().getMutableMap().put(
                    subqueries__.getKey(), subqueries__.getValue());
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * A string representation of the expression subtree rooted at this node.
       * </pre>
       *
       * <code>string description = 1;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A string representation of the expression subtree rooted at this node.
       * </pre>
       *
       * <code>string description = 1;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A string representation of the expression subtree rooted at this node.
       * </pre>
       *
       * <code>string description = 1;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        description_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A string representation of the expression subtree rooted at this node.
       * </pre>
       *
       * <code>string description = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        description_ = getDefaultInstance().getDescription();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A string representation of the expression subtree rooted at this node.
       * </pre>
       *
       * <code>string description = 1;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        description_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> subqueries_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
          internalGetSubqueries() {
        if (subqueries_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              SubqueriesDefaultEntryHolder.defaultEntry);
        }
        return subqueries_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
          internalGetMutableSubqueries() {
        if (subqueries_ == null) {
          subqueries_ = com.google.protobuf.MapField.newMapField(
              SubqueriesDefaultEntryHolder.defaultEntry);
        }
        if (!subqueries_.isMutable()) {
          subqueries_ = subqueries_.copy();
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return subqueries_;
      }
      public int getSubqueriesCount() {
        return internalGetSubqueries().getMap().size();
      }
      /**
       * <pre>
       * A mapping of (subquery variable name) -&gt; (subquery node id) for cases
       * where the `description` string of this node references a `SCALAR`
       * subquery contained in the expression subtree rooted at this node. The
       * referenced `SCALAR` subquery may not necessarily be a direct child of
       * this node.
       * </pre>
       *
       * <code>map&lt;string, int32&gt; subqueries = 2;</code>
       */
      @java.lang.Override
      public boolean containsSubqueries(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetSubqueries().getMap().containsKey(key);
      }
      /**
       * Use {@link #getSubqueriesMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getSubqueries() {
        return getSubqueriesMap();
      }
      /**
       * <pre>
       * A mapping of (subquery variable name) -&gt; (subquery node id) for cases
       * where the `description` string of this node references a `SCALAR`
       * subquery contained in the expression subtree rooted at this node. The
       * referenced `SCALAR` subquery may not necessarily be a direct child of
       * this node.
       * </pre>
       *
       * <code>map&lt;string, int32&gt; subqueries = 2;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, java.lang.Integer> getSubqueriesMap() {
        return internalGetSubqueries().getMap();
      }
      /**
       * <pre>
       * A mapping of (subquery variable name) -&gt; (subquery node id) for cases
       * where the `description` string of this node references a `SCALAR`
       * subquery contained in the expression subtree rooted at this node. The
       * referenced `SCALAR` subquery may not necessarily be a direct child of
       * this node.
       * </pre>
       *
       * <code>map&lt;string, int32&gt; subqueries = 2;</code>
       */
      @java.lang.Override
      public int getSubqueriesOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetSubqueries().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * A mapping of (subquery variable name) -&gt; (subquery node id) for cases
       * where the `description` string of this node references a `SCALAR`
       * subquery contained in the expression subtree rooted at this node. The
       * referenced `SCALAR` subquery may not necessarily be a direct child of
       * this node.
       * </pre>
       *
       * <code>map&lt;string, int32&gt; subqueries = 2;</code>
       */
      @java.lang.Override
      public int getSubqueriesOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetSubqueries().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearSubqueries() {
        bitField0_ = (bitField0_ & ~0x00000002);
        internalGetMutableSubqueries().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * A mapping of (subquery variable name) -&gt; (subquery node id) for cases
       * where the `description` string of this node references a `SCALAR`
       * subquery contained in the expression subtree rooted at this node. The
       * referenced `SCALAR` subquery may not necessarily be a direct child of
       * this node.
       * </pre>
       *
       * <code>map&lt;string, int32&gt; subqueries = 2;</code>
       */
      public Builder removeSubqueries(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableSubqueries().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
          getMutableSubqueries() {
        bitField0_ |= 0x00000002;
        return internalGetMutableSubqueries().getMutableMap();
      }
      /**
       * <pre>
       * A mapping of (subquery variable name) -&gt; (subquery node id) for cases
       * where the `description` string of this node references a `SCALAR`
       * subquery contained in the expression subtree rooted at this node. The
       * referenced `SCALAR` subquery may not necessarily be a direct child of
       * this node.
       * </pre>
       *
       * <code>map&lt;string, int32&gt; subqueries = 2;</code>
       */
      public Builder putSubqueries(
          java.lang.String key,
          int value) {
        if (key == null) { throw new NullPointerException("map key"); }
        
        internalGetMutableSubqueries().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * A mapping of (subquery variable name) -&gt; (subquery node id) for cases
       * where the `description` string of this node references a `SCALAR`
       * subquery contained in the expression subtree rooted at this node. The
       * referenced `SCALAR` subquery may not necessarily be a direct child of
       * this node.
       * </pre>
       *
       * <code>map&lt;string, int32&gt; subqueries = 2;</code>
       */
      public Builder putAllSubqueries(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableSubqueries().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000002;
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.spanner.v1.PlanNode.ShortRepresentation)
    }

    // @@protoc_insertion_point(class_scope:google.spanner.v1.PlanNode.ShortRepresentation)
    private static final com.google.spanner.v1.PlanNode.ShortRepresentation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.spanner.v1.PlanNode.ShortRepresentation();
    }

    public static com.google.spanner.v1.PlanNode.ShortRepresentation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ShortRepresentation>
        PARSER = new com.google.protobuf.AbstractParser<ShortRepresentation>() {
      @java.lang.Override
      public ShortRepresentation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ShortRepresentation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ShortRepresentation> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.spanner.v1.PlanNode.ShortRepresentation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int INDEX_FIELD_NUMBER = 1;
  private int index_ = 0;
  /**
   * <pre>
   * The `PlanNode`'s index in [node list][google.spanner.v1.QueryPlan.plan_nodes].
   * </pre>
   *
   * <code>int32 index = 1;</code>
   * @return The index.
   */
  @java.lang.Override
  public int getIndex() {
    return index_;
  }

  public static final int KIND_FIELD_NUMBER = 2;
  private int kind_ = 0;
  /**
   * <pre>
   * Used to determine the type of node. May be needed for visualizing
   * different kinds of nodes differently. For example, If the node is a
   * [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] node, it will have a condensed representation
   * which can be used to directly embed a description of the node in its
   * parent.
   * </pre>
   *
   * <code>.google.spanner.v1.PlanNode.Kind kind = 2;</code>
   * @return The enum numeric value on the wire for kind.
   */
  @java.lang.Override public int getKindValue() {
    return kind_;
  }
  /**
   * <pre>
   * Used to determine the type of node. May be needed for visualizing
   * different kinds of nodes differently. For example, If the node is a
   * [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] node, it will have a condensed representation
   * which can be used to directly embed a description of the node in its
   * parent.
   * </pre>
   *
   * <code>.google.spanner.v1.PlanNode.Kind kind = 2;</code>
   * @return The kind.
   */
  @java.lang.Override public com.google.spanner.v1.PlanNode.Kind getKind() {
    com.google.spanner.v1.PlanNode.Kind result = com.google.spanner.v1.PlanNode.Kind.forNumber(kind_);
    return result == null ? com.google.spanner.v1.PlanNode.Kind.UNRECOGNIZED : result;
  }

  public static final int DISPLAY_NAME_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object displayName_ = "";
  /**
   * <pre>
   * The display name for the node.
   * </pre>
   *
   * <code>string display_name = 3;</code>
   * @return The displayName.
   */
  @java.lang.Override
  public java.lang.String getDisplayName() {
    java.lang.Object ref = displayName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      displayName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The display name for the node.
   * </pre>
   *
   * <code>string display_name = 3;</code>
   * @return The bytes for displayName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDisplayNameBytes() {
    java.lang.Object ref = displayName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      displayName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CHILD_LINKS_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<com.google.spanner.v1.PlanNode.ChildLink> childLinks_;
  /**
   * <pre>
   * List of child node `index`es and their relationship to this parent.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.PlanNode.ChildLink child_links = 4;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.spanner.v1.PlanNode.ChildLink> getChildLinksList() {
    return childLinks_;
  }
  /**
   * <pre>
   * List of child node `index`es and their relationship to this parent.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.PlanNode.ChildLink child_links = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.spanner.v1.PlanNode.ChildLinkOrBuilder> 
      getChildLinksOrBuilderList() {
    return childLinks_;
  }
  /**
   * <pre>
   * List of child node `index`es and their relationship to this parent.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.PlanNode.ChildLink child_links = 4;</code>
   */
  @java.lang.Override
  public int getChildLinksCount() {
    return childLinks_.size();
  }
  /**
   * <pre>
   * List of child node `index`es and their relationship to this parent.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.PlanNode.ChildLink child_links = 4;</code>
   */
  @java.lang.Override
  public com.google.spanner.v1.PlanNode.ChildLink getChildLinks(int index) {
    return childLinks_.get(index);
  }
  /**
   * <pre>
   * List of child node `index`es and their relationship to this parent.
   * </pre>
   *
   * <code>repeated .google.spanner.v1.PlanNode.ChildLink child_links = 4;</code>
   */
  @java.lang.Override
  public com.google.spanner.v1.PlanNode.ChildLinkOrBuilder getChildLinksOrBuilder(
      int index) {
    return childLinks_.get(index);
  }

  public static final int SHORT_REPRESENTATION_FIELD_NUMBER = 5;
  private com.google.spanner.v1.PlanNode.ShortRepresentation shortRepresentation_;
  /**
   * <pre>
   * Condensed representation for [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] nodes.
   * </pre>
   *
   * <code>.google.spanner.v1.PlanNode.ShortRepresentation short_representation = 5;</code>
   * @return Whether the shortRepresentation field is set.
   */
  @java.lang.Override
  public boolean hasShortRepresentation() {
    return shortRepresentation_ != null;
  }
  /**
   * <pre>
   * Condensed representation for [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] nodes.
   * </pre>
   *
   * <code>.google.spanner.v1.PlanNode.ShortRepresentation short_representation = 5;</code>
   * @return The shortRepresentation.
   */
  @java.lang.Override
  public com.google.spanner.v1.PlanNode.ShortRepresentation getShortRepresentation() {
    return shortRepresentation_ == null ? com.google.spanner.v1.PlanNode.ShortRepresentation.getDefaultInstance() : shortRepresentation_;
  }
  /**
   * <pre>
   * Condensed representation for [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] nodes.
   * </pre>
   *
   * <code>.google.spanner.v1.PlanNode.ShortRepresentation short_representation = 5;</code>
   */
  @java.lang.Override
  public com.google.spanner.v1.PlanNode.ShortRepresentationOrBuilder getShortRepresentationOrBuilder() {
    return shortRepresentation_ == null ? com.google.spanner.v1.PlanNode.ShortRepresentation.getDefaultInstance() : shortRepresentation_;
  }

  public static final int METADATA_FIELD_NUMBER = 6;
  private com.google.protobuf.Struct metadata_;
  /**
   * <pre>
   * Attributes relevant to the node contained in a group of key-value pairs.
   * For example, a Parameter Reference node could have the following
   * information in its metadata:
   *     {
   *       "parameter_reference": "param1",
   *       "parameter_type": "array"
   *     }
   * </pre>
   *
   * <code>.google.protobuf.Struct metadata = 6;</code>
   * @return Whether the metadata field is set.
   */
  @java.lang.Override
  public boolean hasMetadata() {
    return metadata_ != null;
  }
  /**
   * <pre>
   * Attributes relevant to the node contained in a group of key-value pairs.
   * For example, a Parameter Reference node could have the following
   * information in its metadata:
   *     {
   *       "parameter_reference": "param1",
   *       "parameter_type": "array"
   *     }
   * </pre>
   *
   * <code>.google.protobuf.Struct metadata = 6;</code>
   * @return The metadata.
   */
  @java.lang.Override
  public com.google.protobuf.Struct getMetadata() {
    return metadata_ == null ? com.google.protobuf.Struct.getDefaultInstance() : metadata_;
  }
  /**
   * <pre>
   * Attributes relevant to the node contained in a group of key-value pairs.
   * For example, a Parameter Reference node could have the following
   * information in its metadata:
   *     {
   *       "parameter_reference": "param1",
   *       "parameter_type": "array"
   *     }
   * </pre>
   *
   * <code>.google.protobuf.Struct metadata = 6;</code>
   */
  @java.lang.Override
  public com.google.protobuf.StructOrBuilder getMetadataOrBuilder() {
    return metadata_ == null ? com.google.protobuf.Struct.getDefaultInstance() : metadata_;
  }

  public static final int EXECUTION_STATS_FIELD_NUMBER = 7;
  private com.google.protobuf.Struct executionStats_;
  /**
   * <pre>
   * The execution statistics associated with the node, contained in a group of
   * key-value pairs. Only present if the plan was returned as a result of a
   * profile query. For example, number of executions, number of rows/time per
   * execution etc.
   * </pre>
   *
   * <code>.google.protobuf.Struct execution_stats = 7;</code>
   * @return Whether the executionStats field is set.
   */
  @java.lang.Override
  public boolean hasExecutionStats() {
    return executionStats_ != null;
  }
  /**
   * <pre>
   * The execution statistics associated with the node, contained in a group of
   * key-value pairs. Only present if the plan was returned as a result of a
   * profile query. For example, number of executions, number of rows/time per
   * execution etc.
   * </pre>
   *
   * <code>.google.protobuf.Struct execution_stats = 7;</code>
   * @return The executionStats.
   */
  @java.lang.Override
  public com.google.protobuf.Struct getExecutionStats() {
    return executionStats_ == null ? com.google.protobuf.Struct.getDefaultInstance() : executionStats_;
  }
  /**
   * <pre>
   * The execution statistics associated with the node, contained in a group of
   * key-value pairs. Only present if the plan was returned as a result of a
   * profile query. For example, number of executions, number of rows/time per
   * execution etc.
   * </pre>
   *
   * <code>.google.protobuf.Struct execution_stats = 7;</code>
   */
  @java.lang.Override
  public com.google.protobuf.StructOrBuilder getExecutionStatsOrBuilder() {
    return executionStats_ == null ? com.google.protobuf.Struct.getDefaultInstance() : executionStats_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (index_ != 0) {
      output.writeInt32(1, index_);
    }
    if (kind_ != com.google.spanner.v1.PlanNode.Kind.KIND_UNSPECIFIED.getNumber()) {
      output.writeEnum(2, kind_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(displayName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, displayName_);
    }
    for (int i = 0; i < childLinks_.size(); i++) {
      output.writeMessage(4, childLinks_.get(i));
    }
    if (shortRepresentation_ != null) {
      output.writeMessage(5, getShortRepresentation());
    }
    if (metadata_ != null) {
      output.writeMessage(6, getMetadata());
    }
    if (executionStats_ != null) {
      output.writeMessage(7, getExecutionStats());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (index_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, index_);
    }
    if (kind_ != com.google.spanner.v1.PlanNode.Kind.KIND_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, kind_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(displayName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, displayName_);
    }
    for (int i = 0; i < childLinks_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, childLinks_.get(i));
    }
    if (shortRepresentation_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getShortRepresentation());
    }
    if (metadata_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getMetadata());
    }
    if (executionStats_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getExecutionStats());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.spanner.v1.PlanNode)) {
      return super.equals(obj);
    }
    com.google.spanner.v1.PlanNode other = (com.google.spanner.v1.PlanNode) obj;

    if (getIndex()
        != other.getIndex()) return false;
    if (kind_ != other.kind_) return false;
    if (!getDisplayName()
        .equals(other.getDisplayName())) return false;
    if (!getChildLinksList()
        .equals(other.getChildLinksList())) return false;
    if (hasShortRepresentation() != other.hasShortRepresentation()) return false;
    if (hasShortRepresentation()) {
      if (!getShortRepresentation()
          .equals(other.getShortRepresentation())) return false;
    }
    if (hasMetadata() != other.hasMetadata()) return false;
    if (hasMetadata()) {
      if (!getMetadata()
          .equals(other.getMetadata())) return false;
    }
    if (hasExecutionStats() != other.hasExecutionStats()) return false;
    if (hasExecutionStats()) {
      if (!getExecutionStats()
          .equals(other.getExecutionStats())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + INDEX_FIELD_NUMBER;
    hash = (53 * hash) + getIndex();
    hash = (37 * hash) + KIND_FIELD_NUMBER;
    hash = (53 * hash) + kind_;
    hash = (37 * hash) + DISPLAY_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getDisplayName().hashCode();
    if (getChildLinksCount() > 0) {
      hash = (37 * hash) + CHILD_LINKS_FIELD_NUMBER;
      hash = (53 * hash) + getChildLinksList().hashCode();
    }
    if (hasShortRepresentation()) {
      hash = (37 * hash) + SHORT_REPRESENTATION_FIELD_NUMBER;
      hash = (53 * hash) + getShortRepresentation().hashCode();
    }
    if (hasMetadata()) {
      hash = (37 * hash) + METADATA_FIELD_NUMBER;
      hash = (53 * hash) + getMetadata().hashCode();
    }
    if (hasExecutionStats()) {
      hash = (37 * hash) + EXECUTION_STATS_FIELD_NUMBER;
      hash = (53 * hash) + getExecutionStats().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.spanner.v1.PlanNode parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.spanner.v1.PlanNode parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.spanner.v1.PlanNode parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.spanner.v1.PlanNode parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.spanner.v1.PlanNode parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.spanner.v1.PlanNode parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.spanner.v1.PlanNode parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.spanner.v1.PlanNode parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.spanner.v1.PlanNode parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.spanner.v1.PlanNode parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.spanner.v1.PlanNode parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.spanner.v1.PlanNode parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.spanner.v1.PlanNode prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Node information for nodes appearing in a [QueryPlan.plan_nodes][google.spanner.v1.QueryPlan.plan_nodes].
   * </pre>
   *
   * Protobuf type {@code google.spanner.v1.PlanNode}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.spanner.v1.PlanNode)
      com.google.spanner.v1.PlanNodeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.spanner.v1.QueryPlanProto.internal_static_google_spanner_v1_PlanNode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.spanner.v1.QueryPlanProto.internal_static_google_spanner_v1_PlanNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.spanner.v1.PlanNode.class, com.google.spanner.v1.PlanNode.Builder.class);
    }

    // Construct using com.google.spanner.v1.PlanNode.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      index_ = 0;
      kind_ = 0;
      displayName_ = "";
      if (childLinksBuilder_ == null) {
        childLinks_ = java.util.Collections.emptyList();
      } else {
        childLinks_ = null;
        childLinksBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      shortRepresentation_ = null;
      if (shortRepresentationBuilder_ != null) {
        shortRepresentationBuilder_.dispose();
        shortRepresentationBuilder_ = null;
      }
      metadata_ = null;
      if (metadataBuilder_ != null) {
        metadataBuilder_.dispose();
        metadataBuilder_ = null;
      }
      executionStats_ = null;
      if (executionStatsBuilder_ != null) {
        executionStatsBuilder_.dispose();
        executionStatsBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.spanner.v1.QueryPlanProto.internal_static_google_spanner_v1_PlanNode_descriptor;
    }

    @java.lang.Override
    public com.google.spanner.v1.PlanNode getDefaultInstanceForType() {
      return com.google.spanner.v1.PlanNode.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.spanner.v1.PlanNode build() {
      com.google.spanner.v1.PlanNode result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.spanner.v1.PlanNode buildPartial() {
      com.google.spanner.v1.PlanNode result = new com.google.spanner.v1.PlanNode(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.spanner.v1.PlanNode result) {
      if (childLinksBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          childLinks_ = java.util.Collections.unmodifiableList(childLinks_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.childLinks_ = childLinks_;
      } else {
        result.childLinks_ = childLinksBuilder_.build();
      }
    }

    private void buildPartial0(com.google.spanner.v1.PlanNode result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.index_ = index_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.kind_ = kind_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.displayName_ = displayName_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.shortRepresentation_ = shortRepresentationBuilder_ == null
            ? shortRepresentation_
            : shortRepresentationBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.metadata_ = metadataBuilder_ == null
            ? metadata_
            : metadataBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.executionStats_ = executionStatsBuilder_ == null
            ? executionStats_
            : executionStatsBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.spanner.v1.PlanNode) {
        return mergeFrom((com.google.spanner.v1.PlanNode)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.spanner.v1.PlanNode other) {
      if (other == com.google.spanner.v1.PlanNode.getDefaultInstance()) return this;
      if (other.getIndex() != 0) {
        setIndex(other.getIndex());
      }
      if (other.kind_ != 0) {
        setKindValue(other.getKindValue());
      }
      if (!other.getDisplayName().isEmpty()) {
        displayName_ = other.displayName_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (childLinksBuilder_ == null) {
        if (!other.childLinks_.isEmpty()) {
          if (childLinks_.isEmpty()) {
            childLinks_ = other.childLinks_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureChildLinksIsMutable();
            childLinks_.addAll(other.childLinks_);
          }
          onChanged();
        }
      } else {
        if (!other.childLinks_.isEmpty()) {
          if (childLinksBuilder_.isEmpty()) {
            childLinksBuilder_.dispose();
            childLinksBuilder_ = null;
            childLinks_ = other.childLinks_;
            bitField0_ = (bitField0_ & ~0x00000008);
            childLinksBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getChildLinksFieldBuilder() : null;
          } else {
            childLinksBuilder_.addAllMessages(other.childLinks_);
          }
        }
      }
      if (other.hasShortRepresentation()) {
        mergeShortRepresentation(other.getShortRepresentation());
      }
      if (other.hasMetadata()) {
        mergeMetadata(other.getMetadata());
      }
      if (other.hasExecutionStats()) {
        mergeExecutionStats(other.getExecutionStats());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              index_ = input.readInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              kind_ = input.readEnum();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              displayName_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              com.google.spanner.v1.PlanNode.ChildLink m =
                  input.readMessage(
                      com.google.spanner.v1.PlanNode.ChildLink.parser(),
                      extensionRegistry);
              if (childLinksBuilder_ == null) {
                ensureChildLinksIsMutable();
                childLinks_.add(m);
              } else {
                childLinksBuilder_.addMessage(m);
              }
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getShortRepresentationFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getMetadataFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            case 58: {
              input.readMessage(
                  getExecutionStatsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000040;
              break;
            } // case 58
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int index_ ;
    /**
     * <pre>
     * The `PlanNode`'s index in [node list][google.spanner.v1.QueryPlan.plan_nodes].
     * </pre>
     *
     * <code>int32 index = 1;</code>
     * @return The index.
     */
    @java.lang.Override
    public int getIndex() {
      return index_;
    }
    /**
     * <pre>
     * The `PlanNode`'s index in [node list][google.spanner.v1.QueryPlan.plan_nodes].
     * </pre>
     *
     * <code>int32 index = 1;</code>
     * @param value The index to set.
     * @return This builder for chaining.
     */
    public Builder setIndex(int value) {
      
      index_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The `PlanNode`'s index in [node list][google.spanner.v1.QueryPlan.plan_nodes].
     * </pre>
     *
     * <code>int32 index = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearIndex() {
      bitField0_ = (bitField0_ & ~0x00000001);
      index_ = 0;
      onChanged();
      return this;
    }

    private int kind_ = 0;
    /**
     * <pre>
     * Used to determine the type of node. May be needed for visualizing
     * different kinds of nodes differently. For example, If the node is a
     * [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] node, it will have a condensed representation
     * which can be used to directly embed a description of the node in its
     * parent.
     * </pre>
     *
     * <code>.google.spanner.v1.PlanNode.Kind kind = 2;</code>
     * @return The enum numeric value on the wire for kind.
     */
    @java.lang.Override public int getKindValue() {
      return kind_;
    }
    /**
     * <pre>
     * Used to determine the type of node. May be needed for visualizing
     * different kinds of nodes differently. For example, If the node is a
     * [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] node, it will have a condensed representation
     * which can be used to directly embed a description of the node in its
     * parent.
     * </pre>
     *
     * <code>.google.spanner.v1.PlanNode.Kind kind = 2;</code>
     * @param value The enum numeric value on the wire for kind to set.
     * @return This builder for chaining.
     */
    public Builder setKindValue(int value) {
      kind_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Used to determine the type of node. May be needed for visualizing
     * different kinds of nodes differently. For example, If the node is a
     * [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] node, it will have a condensed representation
     * which can be used to directly embed a description of the node in its
     * parent.
     * </pre>
     *
     * <code>.google.spanner.v1.PlanNode.Kind kind = 2;</code>
     * @return The kind.
     */
    @java.lang.Override
    public com.google.spanner.v1.PlanNode.Kind getKind() {
      com.google.spanner.v1.PlanNode.Kind result = com.google.spanner.v1.PlanNode.Kind.forNumber(kind_);
      return result == null ? com.google.spanner.v1.PlanNode.Kind.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Used to determine the type of node. May be needed for visualizing
     * different kinds of nodes differently. For example, If the node is a
     * [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] node, it will have a condensed representation
     * which can be used to directly embed a description of the node in its
     * parent.
     * </pre>
     *
     * <code>.google.spanner.v1.PlanNode.Kind kind = 2;</code>
     * @param value The kind to set.
     * @return This builder for chaining.
     */
    public Builder setKind(com.google.spanner.v1.PlanNode.Kind value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      kind_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Used to determine the type of node. May be needed for visualizing
     * different kinds of nodes differently. For example, If the node is a
     * [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] node, it will have a condensed representation
     * which can be used to directly embed a description of the node in its
     * parent.
     * </pre>
     *
     * <code>.google.spanner.v1.PlanNode.Kind kind = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearKind() {
      bitField0_ = (bitField0_ & ~0x00000002);
      kind_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object displayName_ = "";
    /**
     * <pre>
     * The display name for the node.
     * </pre>
     *
     * <code>string display_name = 3;</code>
     * @return The displayName.
     */
    public java.lang.String getDisplayName() {
      java.lang.Object ref = displayName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        displayName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The display name for the node.
     * </pre>
     *
     * <code>string display_name = 3;</code>
     * @return The bytes for displayName.
     */
    public com.google.protobuf.ByteString
        getDisplayNameBytes() {
      java.lang.Object ref = displayName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        displayName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The display name for the node.
     * </pre>
     *
     * <code>string display_name = 3;</code>
     * @param value The displayName to set.
     * @return This builder for chaining.
     */
    public Builder setDisplayName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      displayName_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The display name for the node.
     * </pre>
     *
     * <code>string display_name = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearDisplayName() {
      displayName_ = getDefaultInstance().getDisplayName();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The display name for the node.
     * </pre>
     *
     * <code>string display_name = 3;</code>
     * @param value The bytes for displayName to set.
     * @return This builder for chaining.
     */
    public Builder setDisplayNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      displayName_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.util.List<com.google.spanner.v1.PlanNode.ChildLink> childLinks_ =
      java.util.Collections.emptyList();
    private void ensureChildLinksIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        childLinks_ = new java.util.ArrayList<com.google.spanner.v1.PlanNode.ChildLink>(childLinks_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.spanner.v1.PlanNode.ChildLink, com.google.spanner.v1.PlanNode.ChildLink.Builder, com.google.spanner.v1.PlanNode.ChildLinkOrBuilder> childLinksBuilder_;

    /**
     * <pre>
     * List of child node `index`es and their relationship to this parent.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.PlanNode.ChildLink child_links = 4;</code>
     */
    public java.util.List<com.google.spanner.v1.PlanNode.ChildLink> getChildLinksList() {
      if (childLinksBuilder_ == null) {
        return java.util.Collections.unmodifiableList(childLinks_);
      } else {
        return childLinksBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * List of child node `index`es and their relationship to this parent.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.PlanNode.ChildLink child_links = 4;</code>
     */
    public int getChildLinksCount() {
      if (childLinksBuilder_ == null) {
        return childLinks_.size();
      } else {
        return childLinksBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * List of child node `index`es and their relationship to this parent.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.PlanNode.ChildLink child_links = 4;</code>
     */
    public com.google.spanner.v1.PlanNode.ChildLink getChildLinks(int index) {
      if (childLinksBuilder_ == null) {
        return childLinks_.get(index);
      } else {
        return childLinksBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * List of child node `index`es and their relationship to this parent.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.PlanNode.ChildLink child_links = 4;</code>
     */
    public Builder setChildLinks(
        int index, com.google.spanner.v1.PlanNode.ChildLink value) {
      if (childLinksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChildLinksIsMutable();
        childLinks_.set(index, value);
        onChanged();
      } else {
        childLinksBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of child node `index`es and their relationship to this parent.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.PlanNode.ChildLink child_links = 4;</code>
     */
    public Builder setChildLinks(
        int index, com.google.spanner.v1.PlanNode.ChildLink.Builder builderForValue) {
      if (childLinksBuilder_ == null) {
        ensureChildLinksIsMutable();
        childLinks_.set(index, builderForValue.build());
        onChanged();
      } else {
        childLinksBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of child node `index`es and their relationship to this parent.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.PlanNode.ChildLink child_links = 4;</code>
     */
    public Builder addChildLinks(com.google.spanner.v1.PlanNode.ChildLink value) {
      if (childLinksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChildLinksIsMutable();
        childLinks_.add(value);
        onChanged();
      } else {
        childLinksBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * List of child node `index`es and their relationship to this parent.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.PlanNode.ChildLink child_links = 4;</code>
     */
    public Builder addChildLinks(
        int index, com.google.spanner.v1.PlanNode.ChildLink value) {
      if (childLinksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChildLinksIsMutable();
        childLinks_.add(index, value);
        onChanged();
      } else {
        childLinksBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of child node `index`es and their relationship to this parent.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.PlanNode.ChildLink child_links = 4;</code>
     */
    public Builder addChildLinks(
        com.google.spanner.v1.PlanNode.ChildLink.Builder builderForValue) {
      if (childLinksBuilder_ == null) {
        ensureChildLinksIsMutable();
        childLinks_.add(builderForValue.build());
        onChanged();
      } else {
        childLinksBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of child node `index`es and their relationship to this parent.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.PlanNode.ChildLink child_links = 4;</code>
     */
    public Builder addChildLinks(
        int index, com.google.spanner.v1.PlanNode.ChildLink.Builder builderForValue) {
      if (childLinksBuilder_ == null) {
        ensureChildLinksIsMutable();
        childLinks_.add(index, builderForValue.build());
        onChanged();
      } else {
        childLinksBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of child node `index`es and their relationship to this parent.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.PlanNode.ChildLink child_links = 4;</code>
     */
    public Builder addAllChildLinks(
        java.lang.Iterable<? extends com.google.spanner.v1.PlanNode.ChildLink> values) {
      if (childLinksBuilder_ == null) {
        ensureChildLinksIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, childLinks_);
        onChanged();
      } else {
        childLinksBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * List of child node `index`es and their relationship to this parent.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.PlanNode.ChildLink child_links = 4;</code>
     */
    public Builder clearChildLinks() {
      if (childLinksBuilder_ == null) {
        childLinks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        childLinksBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * List of child node `index`es and their relationship to this parent.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.PlanNode.ChildLink child_links = 4;</code>
     */
    public Builder removeChildLinks(int index) {
      if (childLinksBuilder_ == null) {
        ensureChildLinksIsMutable();
        childLinks_.remove(index);
        onChanged();
      } else {
        childLinksBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * List of child node `index`es and their relationship to this parent.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.PlanNode.ChildLink child_links = 4;</code>
     */
    public com.google.spanner.v1.PlanNode.ChildLink.Builder getChildLinksBuilder(
        int index) {
      return getChildLinksFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * List of child node `index`es and their relationship to this parent.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.PlanNode.ChildLink child_links = 4;</code>
     */
    public com.google.spanner.v1.PlanNode.ChildLinkOrBuilder getChildLinksOrBuilder(
        int index) {
      if (childLinksBuilder_ == null) {
        return childLinks_.get(index);  } else {
        return childLinksBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * List of child node `index`es and their relationship to this parent.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.PlanNode.ChildLink child_links = 4;</code>
     */
    public java.util.List<? extends com.google.spanner.v1.PlanNode.ChildLinkOrBuilder> 
         getChildLinksOrBuilderList() {
      if (childLinksBuilder_ != null) {
        return childLinksBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(childLinks_);
      }
    }
    /**
     * <pre>
     * List of child node `index`es and their relationship to this parent.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.PlanNode.ChildLink child_links = 4;</code>
     */
    public com.google.spanner.v1.PlanNode.ChildLink.Builder addChildLinksBuilder() {
      return getChildLinksFieldBuilder().addBuilder(
          com.google.spanner.v1.PlanNode.ChildLink.getDefaultInstance());
    }
    /**
     * <pre>
     * List of child node `index`es and their relationship to this parent.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.PlanNode.ChildLink child_links = 4;</code>
     */
    public com.google.spanner.v1.PlanNode.ChildLink.Builder addChildLinksBuilder(
        int index) {
      return getChildLinksFieldBuilder().addBuilder(
          index, com.google.spanner.v1.PlanNode.ChildLink.getDefaultInstance());
    }
    /**
     * <pre>
     * List of child node `index`es and their relationship to this parent.
     * </pre>
     *
     * <code>repeated .google.spanner.v1.PlanNode.ChildLink child_links = 4;</code>
     */
    public java.util.List<com.google.spanner.v1.PlanNode.ChildLink.Builder> 
         getChildLinksBuilderList() {
      return getChildLinksFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.spanner.v1.PlanNode.ChildLink, com.google.spanner.v1.PlanNode.ChildLink.Builder, com.google.spanner.v1.PlanNode.ChildLinkOrBuilder> 
        getChildLinksFieldBuilder() {
      if (childLinksBuilder_ == null) {
        childLinksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.spanner.v1.PlanNode.ChildLink, com.google.spanner.v1.PlanNode.ChildLink.Builder, com.google.spanner.v1.PlanNode.ChildLinkOrBuilder>(
                childLinks_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        childLinks_ = null;
      }
      return childLinksBuilder_;
    }

    private com.google.spanner.v1.PlanNode.ShortRepresentation shortRepresentation_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.spanner.v1.PlanNode.ShortRepresentation, com.google.spanner.v1.PlanNode.ShortRepresentation.Builder, com.google.spanner.v1.PlanNode.ShortRepresentationOrBuilder> shortRepresentationBuilder_;
    /**
     * <pre>
     * Condensed representation for [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] nodes.
     * </pre>
     *
     * <code>.google.spanner.v1.PlanNode.ShortRepresentation short_representation = 5;</code>
     * @return Whether the shortRepresentation field is set.
     */
    public boolean hasShortRepresentation() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Condensed representation for [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] nodes.
     * </pre>
     *
     * <code>.google.spanner.v1.PlanNode.ShortRepresentation short_representation = 5;</code>
     * @return The shortRepresentation.
     */
    public com.google.spanner.v1.PlanNode.ShortRepresentation getShortRepresentation() {
      if (shortRepresentationBuilder_ == null) {
        return shortRepresentation_ == null ? com.google.spanner.v1.PlanNode.ShortRepresentation.getDefaultInstance() : shortRepresentation_;
      } else {
        return shortRepresentationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Condensed representation for [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] nodes.
     * </pre>
     *
     * <code>.google.spanner.v1.PlanNode.ShortRepresentation short_representation = 5;</code>
     */
    public Builder setShortRepresentation(com.google.spanner.v1.PlanNode.ShortRepresentation value) {
      if (shortRepresentationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        shortRepresentation_ = value;
      } else {
        shortRepresentationBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Condensed representation for [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] nodes.
     * </pre>
     *
     * <code>.google.spanner.v1.PlanNode.ShortRepresentation short_representation = 5;</code>
     */
    public Builder setShortRepresentation(
        com.google.spanner.v1.PlanNode.ShortRepresentation.Builder builderForValue) {
      if (shortRepresentationBuilder_ == null) {
        shortRepresentation_ = builderForValue.build();
      } else {
        shortRepresentationBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Condensed representation for [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] nodes.
     * </pre>
     *
     * <code>.google.spanner.v1.PlanNode.ShortRepresentation short_representation = 5;</code>
     */
    public Builder mergeShortRepresentation(com.google.spanner.v1.PlanNode.ShortRepresentation value) {
      if (shortRepresentationBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          shortRepresentation_ != null &&
          shortRepresentation_ != com.google.spanner.v1.PlanNode.ShortRepresentation.getDefaultInstance()) {
          getShortRepresentationBuilder().mergeFrom(value);
        } else {
          shortRepresentation_ = value;
        }
      } else {
        shortRepresentationBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Condensed representation for [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] nodes.
     * </pre>
     *
     * <code>.google.spanner.v1.PlanNode.ShortRepresentation short_representation = 5;</code>
     */
    public Builder clearShortRepresentation() {
      bitField0_ = (bitField0_ & ~0x00000010);
      shortRepresentation_ = null;
      if (shortRepresentationBuilder_ != null) {
        shortRepresentationBuilder_.dispose();
        shortRepresentationBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Condensed representation for [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] nodes.
     * </pre>
     *
     * <code>.google.spanner.v1.PlanNode.ShortRepresentation short_representation = 5;</code>
     */
    public com.google.spanner.v1.PlanNode.ShortRepresentation.Builder getShortRepresentationBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getShortRepresentationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Condensed representation for [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] nodes.
     * </pre>
     *
     * <code>.google.spanner.v1.PlanNode.ShortRepresentation short_representation = 5;</code>
     */
    public com.google.spanner.v1.PlanNode.ShortRepresentationOrBuilder getShortRepresentationOrBuilder() {
      if (shortRepresentationBuilder_ != null) {
        return shortRepresentationBuilder_.getMessageOrBuilder();
      } else {
        return shortRepresentation_ == null ?
            com.google.spanner.v1.PlanNode.ShortRepresentation.getDefaultInstance() : shortRepresentation_;
      }
    }
    /**
     * <pre>
     * Condensed representation for [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] nodes.
     * </pre>
     *
     * <code>.google.spanner.v1.PlanNode.ShortRepresentation short_representation = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.spanner.v1.PlanNode.ShortRepresentation, com.google.spanner.v1.PlanNode.ShortRepresentation.Builder, com.google.spanner.v1.PlanNode.ShortRepresentationOrBuilder> 
        getShortRepresentationFieldBuilder() {
      if (shortRepresentationBuilder_ == null) {
        shortRepresentationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.spanner.v1.PlanNode.ShortRepresentation, com.google.spanner.v1.PlanNode.ShortRepresentation.Builder, com.google.spanner.v1.PlanNode.ShortRepresentationOrBuilder>(
                getShortRepresentation(),
                getParentForChildren(),
                isClean());
        shortRepresentation_ = null;
      }
      return shortRepresentationBuilder_;
    }

    private com.google.protobuf.Struct metadata_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> metadataBuilder_;
    /**
     * <pre>
     * Attributes relevant to the node contained in a group of key-value pairs.
     * For example, a Parameter Reference node could have the following
     * information in its metadata:
     *     {
     *       "parameter_reference": "param1",
     *       "parameter_type": "array"
     *     }
     * </pre>
     *
     * <code>.google.protobuf.Struct metadata = 6;</code>
     * @return Whether the metadata field is set.
     */
    public boolean hasMetadata() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Attributes relevant to the node contained in a group of key-value pairs.
     * For example, a Parameter Reference node could have the following
     * information in its metadata:
     *     {
     *       "parameter_reference": "param1",
     *       "parameter_type": "array"
     *     }
     * </pre>
     *
     * <code>.google.protobuf.Struct metadata = 6;</code>
     * @return The metadata.
     */
    public com.google.protobuf.Struct getMetadata() {
      if (metadataBuilder_ == null) {
        return metadata_ == null ? com.google.protobuf.Struct.getDefaultInstance() : metadata_;
      } else {
        return metadataBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Attributes relevant to the node contained in a group of key-value pairs.
     * For example, a Parameter Reference node could have the following
     * information in its metadata:
     *     {
     *       "parameter_reference": "param1",
     *       "parameter_type": "array"
     *     }
     * </pre>
     *
     * <code>.google.protobuf.Struct metadata = 6;</code>
     */
    public Builder setMetadata(com.google.protobuf.Struct value) {
      if (metadataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        metadata_ = value;
      } else {
        metadataBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Attributes relevant to the node contained in a group of key-value pairs.
     * For example, a Parameter Reference node could have the following
     * information in its metadata:
     *     {
     *       "parameter_reference": "param1",
     *       "parameter_type": "array"
     *     }
     * </pre>
     *
     * <code>.google.protobuf.Struct metadata = 6;</code>
     */
    public Builder setMetadata(
        com.google.protobuf.Struct.Builder builderForValue) {
      if (metadataBuilder_ == null) {
        metadata_ = builderForValue.build();
      } else {
        metadataBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Attributes relevant to the node contained in a group of key-value pairs.
     * For example, a Parameter Reference node could have the following
     * information in its metadata:
     *     {
     *       "parameter_reference": "param1",
     *       "parameter_type": "array"
     *     }
     * </pre>
     *
     * <code>.google.protobuf.Struct metadata = 6;</code>
     */
    public Builder mergeMetadata(com.google.protobuf.Struct value) {
      if (metadataBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
          metadata_ != null &&
          metadata_ != com.google.protobuf.Struct.getDefaultInstance()) {
          getMetadataBuilder().mergeFrom(value);
        } else {
          metadata_ = value;
        }
      } else {
        metadataBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Attributes relevant to the node contained in a group of key-value pairs.
     * For example, a Parameter Reference node could have the following
     * information in its metadata:
     *     {
     *       "parameter_reference": "param1",
     *       "parameter_type": "array"
     *     }
     * </pre>
     *
     * <code>.google.protobuf.Struct metadata = 6;</code>
     */
    public Builder clearMetadata() {
      bitField0_ = (bitField0_ & ~0x00000020);
      metadata_ = null;
      if (metadataBuilder_ != null) {
        metadataBuilder_.dispose();
        metadataBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Attributes relevant to the node contained in a group of key-value pairs.
     * For example, a Parameter Reference node could have the following
     * information in its metadata:
     *     {
     *       "parameter_reference": "param1",
     *       "parameter_type": "array"
     *     }
     * </pre>
     *
     * <code>.google.protobuf.Struct metadata = 6;</code>
     */
    public com.google.protobuf.Struct.Builder getMetadataBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getMetadataFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Attributes relevant to the node contained in a group of key-value pairs.
     * For example, a Parameter Reference node could have the following
     * information in its metadata:
     *     {
     *       "parameter_reference": "param1",
     *       "parameter_type": "array"
     *     }
     * </pre>
     *
     * <code>.google.protobuf.Struct metadata = 6;</code>
     */
    public com.google.protobuf.StructOrBuilder getMetadataOrBuilder() {
      if (metadataBuilder_ != null) {
        return metadataBuilder_.getMessageOrBuilder();
      } else {
        return metadata_ == null ?
            com.google.protobuf.Struct.getDefaultInstance() : metadata_;
      }
    }
    /**
     * <pre>
     * Attributes relevant to the node contained in a group of key-value pairs.
     * For example, a Parameter Reference node could have the following
     * information in its metadata:
     *     {
     *       "parameter_reference": "param1",
     *       "parameter_type": "array"
     *     }
     * </pre>
     *
     * <code>.google.protobuf.Struct metadata = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> 
        getMetadataFieldBuilder() {
      if (metadataBuilder_ == null) {
        metadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder>(
                getMetadata(),
                getParentForChildren(),
                isClean());
        metadata_ = null;
      }
      return metadataBuilder_;
    }

    private com.google.protobuf.Struct executionStats_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> executionStatsBuilder_;
    /**
     * <pre>
     * The execution statistics associated with the node, contained in a group of
     * key-value pairs. Only present if the plan was returned as a result of a
     * profile query. For example, number of executions, number of rows/time per
     * execution etc.
     * </pre>
     *
     * <code>.google.protobuf.Struct execution_stats = 7;</code>
     * @return Whether the executionStats field is set.
     */
    public boolean hasExecutionStats() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * The execution statistics associated with the node, contained in a group of
     * key-value pairs. Only present if the plan was returned as a result of a
     * profile query. For example, number of executions, number of rows/time per
     * execution etc.
     * </pre>
     *
     * <code>.google.protobuf.Struct execution_stats = 7;</code>
     * @return The executionStats.
     */
    public com.google.protobuf.Struct getExecutionStats() {
      if (executionStatsBuilder_ == null) {
        return executionStats_ == null ? com.google.protobuf.Struct.getDefaultInstance() : executionStats_;
      } else {
        return executionStatsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The execution statistics associated with the node, contained in a group of
     * key-value pairs. Only present if the plan was returned as a result of a
     * profile query. For example, number of executions, number of rows/time per
     * execution etc.
     * </pre>
     *
     * <code>.google.protobuf.Struct execution_stats = 7;</code>
     */
    public Builder setExecutionStats(com.google.protobuf.Struct value) {
      if (executionStatsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        executionStats_ = value;
      } else {
        executionStatsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The execution statistics associated with the node, contained in a group of
     * key-value pairs. Only present if the plan was returned as a result of a
     * profile query. For example, number of executions, number of rows/time per
     * execution etc.
     * </pre>
     *
     * <code>.google.protobuf.Struct execution_stats = 7;</code>
     */
    public Builder setExecutionStats(
        com.google.protobuf.Struct.Builder builderForValue) {
      if (executionStatsBuilder_ == null) {
        executionStats_ = builderForValue.build();
      } else {
        executionStatsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The execution statistics associated with the node, contained in a group of
     * key-value pairs. Only present if the plan was returned as a result of a
     * profile query. For example, number of executions, number of rows/time per
     * execution etc.
     * </pre>
     *
     * <code>.google.protobuf.Struct execution_stats = 7;</code>
     */
    public Builder mergeExecutionStats(com.google.protobuf.Struct value) {
      if (executionStatsBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0) &&
          executionStats_ != null &&
          executionStats_ != com.google.protobuf.Struct.getDefaultInstance()) {
          getExecutionStatsBuilder().mergeFrom(value);
        } else {
          executionStats_ = value;
        }
      } else {
        executionStatsBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The execution statistics associated with the node, contained in a group of
     * key-value pairs. Only present if the plan was returned as a result of a
     * profile query. For example, number of executions, number of rows/time per
     * execution etc.
     * </pre>
     *
     * <code>.google.protobuf.Struct execution_stats = 7;</code>
     */
    public Builder clearExecutionStats() {
      bitField0_ = (bitField0_ & ~0x00000040);
      executionStats_ = null;
      if (executionStatsBuilder_ != null) {
        executionStatsBuilder_.dispose();
        executionStatsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The execution statistics associated with the node, contained in a group of
     * key-value pairs. Only present if the plan was returned as a result of a
     * profile query. For example, number of executions, number of rows/time per
     * execution etc.
     * </pre>
     *
     * <code>.google.protobuf.Struct execution_stats = 7;</code>
     */
    public com.google.protobuf.Struct.Builder getExecutionStatsBuilder() {
      bitField0_ |= 0x00000040;
      onChanged();
      return getExecutionStatsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The execution statistics associated with the node, contained in a group of
     * key-value pairs. Only present if the plan was returned as a result of a
     * profile query. For example, number of executions, number of rows/time per
     * execution etc.
     * </pre>
     *
     * <code>.google.protobuf.Struct execution_stats = 7;</code>
     */
    public com.google.protobuf.StructOrBuilder getExecutionStatsOrBuilder() {
      if (executionStatsBuilder_ != null) {
        return executionStatsBuilder_.getMessageOrBuilder();
      } else {
        return executionStats_ == null ?
            com.google.protobuf.Struct.getDefaultInstance() : executionStats_;
      }
    }
    /**
     * <pre>
     * The execution statistics associated with the node, contained in a group of
     * key-value pairs. Only present if the plan was returned as a result of a
     * profile query. For example, number of executions, number of rows/time per
     * execution etc.
     * </pre>
     *
     * <code>.google.protobuf.Struct execution_stats = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> 
        getExecutionStatsFieldBuilder() {
      if (executionStatsBuilder_ == null) {
        executionStatsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder>(
                getExecutionStats(),
                getParentForChildren(),
                isClean());
        executionStats_ = null;
      }
      return executionStatsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.spanner.v1.PlanNode)
  }

  // @@protoc_insertion_point(class_scope:google.spanner.v1.PlanNode)
  private static final com.google.spanner.v1.PlanNode DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.spanner.v1.PlanNode();
  }

  public static com.google.spanner.v1.PlanNode getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PlanNode>
      PARSER = new com.google.protobuf.AbstractParser<PlanNode>() {
    @java.lang.Override
    public PlanNode parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<PlanNode> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PlanNode> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.spanner.v1.PlanNode getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

