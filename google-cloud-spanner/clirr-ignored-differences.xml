<?xml version="1.0" encoding="UTF-8"?>
<!-- see http://www.mojohaus.org/clirr-maven-plugin/examples/ignored-differences.html -->
<differences>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/Session</className>
    <method>* asyncClose()</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>* asyncDeleteSession(*)</method>
  </difference>
  
  <!-- Adding Backup feature -->
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>void cancelOperation(java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.api.gax.longrunning.OperationFuture createBackup(java.lang.String, java.lang.String, java.lang.String, com.google.cloud.Timestamp)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>void deleteBackup(java.lang.String, java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.cloud.spanner.Backup getBackup(java.lang.String, java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.cloud.spanner.Backup getBackup(java.lang.String, java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.cloud.Policy getBackupIAMPolicy(java.lang.String, java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.longrunning.Operation getOperation(java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.api.gax.paging.Page listBackupOperations(java.lang.String, com.google.cloud.spanner.Options$ListOption[])</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.api.gax.paging.Page listBackups(java.lang.String, com.google.cloud.spanner.Options$ListOption[])</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.api.gax.paging.Page listDatabaseOperations(java.lang.String, com.google.cloud.spanner.Options$ListOption[])</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.cloud.spanner.Backup$Builder newBackupBuilder(com.google.cloud.spanner.BackupId)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.cloud.spanner.Backup$Builder newBackupBuilder(com.google.cloud.spanner.BackupId)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.api.gax.longrunning.OperationFuture restoreDatabase(java.lang.String, java.lang.String, java.lang.String, java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.cloud.Policy setBackupIAMPolicy(java.lang.String, java.lang.String, com.google.cloud.Policy)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>java.lang.Iterable testBackupIAMPermissions(java.lang.String, java.lang.String, java.lang.Iterable)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.cloud.spanner.Backup updateBackup(java.lang.String, java.lang.String, com.google.cloud.Timestamp)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>void cancelOperation(java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>com.google.api.gax.longrunning.OperationFuture createBackup(java.lang.String, java.lang.String, com.google.spanner.admin.database.v1.Backup)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>void deleteBackup(java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>com.google.spanner.admin.database.v1.Backup getBackup(java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>com.google.cloud.spanner.spi.v1.SpannerRpc$Paginated listBackupOperations(java.lang.String, int, java.lang.String, java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>com.google.cloud.spanner.spi.v1.SpannerRpc$Paginated listBackups(java.lang.String, int, java.lang.String, java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>com.google.cloud.spanner.spi.v1.SpannerRpc$Paginated listDatabaseOperations(java.lang.String, int, java.lang.String, java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>com.google.api.gax.longrunning.OperationFuture restoreDatabase(java.lang.String, java.lang.String, java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>com.google.spanner.admin.database.v1.Backup updateBackup(com.google.spanner.admin.database.v1.Backup, com.google.protobuf.FieldMask)</method>
  </difference>

  <difference>
    <differenceType>7004</differenceType>
    <className>com/google/cloud/spanner/Instance</className>
    <!-- Added varargs (ListOption... options) -->
    <method>com.google.api.gax.paging.Page listDatabases()</method>
  </difference>
  
  <!-- Add Async API -->
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>com.google.api.core.ApiFuture executeQueryAsync(com.google.spanner.v1.ExecuteSqlRequest, java.util.Map)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseClient</className>
    <method>* runAsync(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseClient</className>
    <method>* transactionManagerAsync(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/Spanner</className>
    <method>* getAsyncExecutorProvider(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/ReadContext</className>
    <method>* executeQueryAsync(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/ReadContext</className>
    <method>* readAsync(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/ReadContext</className>
    <method>* readRowAsync(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/ReadContext</className>
    <method>* readUsingIndexAsync(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/ReadContext</className>
    <method>* readRowUsingIndexAsync(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/TransactionContext</className>
    <method>* batchUpdateAsync(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/TransactionContext</className>
    <method>* executeUpdateAsync(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>* beginTransactionAsync(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>* commitAsync(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>* rollbackAsync(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>* executeBatchDmlAsync(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/connection/Connection</className>
    <method>* executeQueryAsync(*)</method>
  </difference>

  <!-- Use List interface in Async API (compared to 1.60.0)-->
  <difference>
    <differenceType>7006</differenceType>
    <className>com/google/cloud/spanner/AsyncResultSet</className>
    <method>com.google.common.collect.ImmutableList toList(com.google.common.base.Function)</method>
    <to>java.util.List</to>
  </difference>
  <difference>
    <differenceType>7006</differenceType>
    <className>com/google/cloud/spanner/ForwardingAsyncResultSet</className>
    <method>com.google.common.collect.ImmutableList toList(com.google.common.base.Function)</method>
    <to>java.util.List</to>
  </difference>

  <!-- Adding operation RPCs to InstanceAdminClient. -->
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/InstanceAdminClient</className>
    <method>void cancelOperation(java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/InstanceAdminClient</className>
    <method>com.google.longrunning.Operation getOperation(java.lang.String)</method>
  </difference>
  
  <!-- Fix Partitioned DML timeout settings. -->
  <difference>
    <differenceType>7004</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>com.google.spanner.v1.ResultSet executePartitionedDml(com.google.spanner.v1.ExecuteSqlRequest, java.util.Map, org.threeten.bp.Duration)</method>
  </difference>
  <difference>
    <differenceType>7004</differenceType>
    <className>com/google/cloud/spanner/spi/v1/GapicSpannerRpc</className>
    <method>com.google.spanner.v1.ResultSet executePartitionedDml(com.google.spanner.v1.ExecuteSqlRequest, java.util.Map, org.threeten.bp.Duration)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>com.google.api.gax.retrying.RetrySettings getPartitionedDmlRetrySettings()</method>
  </difference>

  <!-- Streaming PDML -->
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>com.google.api.gax.rpc.ServerStream executeStreamingPartitionedDml(com.google.spanner.v1.ExecuteSqlRequest, java.util.Map, org.threeten.bp.Duration)</method>
  </difference>

  <!-- Add support for NUMERIC data type -->
  <difference>
    <differenceType>7013</differenceType>
    <className>com/google/cloud/spanner/AbstractStructReader</className>
    <method>java.math.BigDecimal getBigDecimalInternal(int)</method>
  </difference>
  <difference>
    <differenceType>7013</differenceType>
    <className>com/google/cloud/spanner/AbstractStructReader</className>
    <method>java.util.List getBigDecimalListInternal(int)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/StructReader</className>
    <method>java.math.BigDecimal getBigDecimal(int)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/StructReader</className>
    <method>java.math.BigDecimal getBigDecimal(java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/StructReader</className>
    <method>java.util.List getBigDecimalList(int)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/StructReader</className>
    <method>java.util.List getBigDecimalList(java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7013</differenceType>
    <className>com/google/cloud/spanner/Value</className>
    <method>java.math.BigDecimal getNumeric()</method>
  </difference>
  <difference>
    <differenceType>7013</differenceType>
    <className>com/google/cloud/spanner/Value</className>
    <method>java.util.List getNumericArray()</method>
  </difference>
</differences>
