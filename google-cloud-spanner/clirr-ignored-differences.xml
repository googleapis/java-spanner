<?xml version="1.0" encoding="UTF-8"?>
<!-- see http://www.mojohaus.org/clirr-maven-plugin/examples/ignored-differences.html -->
<differences>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/Session</className>
    <method>* asyncClose()</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>* asyncDeleteSession(*)</method>
  </difference>
  
  <!-- Adding Backup feature -->
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>void cancelOperation(java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.api.gax.longrunning.OperationFuture createBackup(java.lang.String, java.lang.String, java.lang.String, com.google.cloud.Timestamp)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>void deleteBackup(java.lang.String, java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.cloud.spanner.Backup getBackup(java.lang.String, java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.cloud.spanner.Backup getBackup(java.lang.String, java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.cloud.Policy getBackupIAMPolicy(java.lang.String, java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.longrunning.Operation getOperation(java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.api.gax.paging.Page listBackupOperations(java.lang.String, com.google.cloud.spanner.Options$ListOption[])</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.api.gax.paging.Page listBackups(java.lang.String, com.google.cloud.spanner.Options$ListOption[])</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.api.gax.paging.Page listDatabaseOperations(java.lang.String, com.google.cloud.spanner.Options$ListOption[])</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.cloud.spanner.Backup$Builder newBackupBuilder(com.google.cloud.spanner.BackupId)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.cloud.spanner.Backup$Builder newBackupBuilder(com.google.cloud.spanner.BackupId)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.api.gax.longrunning.OperationFuture restoreDatabase(java.lang.String, java.lang.String, java.lang.String, java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.cloud.Policy setBackupIAMPolicy(java.lang.String, java.lang.String, com.google.cloud.Policy)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>java.lang.Iterable testBackupIAMPermissions(java.lang.String, java.lang.String, java.lang.Iterable)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.cloud.spanner.Backup updateBackup(java.lang.String, java.lang.String, com.google.cloud.Timestamp)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>void cancelOperation(java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>com.google.api.gax.longrunning.OperationFuture createBackup(java.lang.String, java.lang.String, com.google.spanner.admin.database.v1.Backup)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>void deleteBackup(java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>com.google.spanner.admin.database.v1.Backup getBackup(java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>com.google.cloud.spanner.spi.v1.SpannerRpc$Paginated listBackupOperations(java.lang.String, int, java.lang.String, java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>com.google.cloud.spanner.spi.v1.SpannerRpc$Paginated listBackups(java.lang.String, int, java.lang.String, java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>com.google.cloud.spanner.spi.v1.SpannerRpc$Paginated listDatabaseOperations(java.lang.String, int, java.lang.String, java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>com.google.api.gax.longrunning.OperationFuture restoreDatabase(java.lang.String, java.lang.String, java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>com.google.spanner.admin.database.v1.Backup updateBackup(com.google.spanner.admin.database.v1.Backup, com.google.protobuf.FieldMask)</method>
  </difference>

  <difference>
    <differenceType>7004</differenceType>
    <className>com/google/cloud/spanner/Instance</className>
    <!-- Added varargs (ListOption... options) -->
    <method>com.google.api.gax.paging.Page listDatabases()</method>
  </difference>
  
  <!-- Add Async API -->
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>com.google.api.core.ApiFuture executeQueryAsync(com.google.spanner.v1.ExecuteSqlRequest, java.util.Map)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseClient</className>
    <method>* runAsync(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseClient</className>
    <method>* transactionManagerAsync(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/Spanner</className>
    <method>* getAsyncExecutorProvider(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/ReadContext</className>
    <method>* executeQueryAsync(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/ReadContext</className>
    <method>* readAsync(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/ReadContext</className>
    <method>* readRowAsync(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/ReadContext</className>
    <method>* readUsingIndexAsync(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/ReadContext</className>
    <method>* readRowUsingIndexAsync(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/TransactionContext</className>
    <method>* batchUpdateAsync(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/TransactionContext</className>
    <method>* executeUpdateAsync(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>* beginTransactionAsync(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>* commitAsync(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>* rollbackAsync(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>* executeBatchDmlAsync(*)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/connection/Connection</className>
    <method>* executeQueryAsync(*)</method>
  </difference>

  <!-- Use List interface in Async API (compared to 1.60.0)-->
  <difference>
    <differenceType>7006</differenceType>
    <className>com/google/cloud/spanner/AsyncResultSet</className>
    <method>com.google.common.collect.ImmutableList toList(com.google.common.base.Function)</method>
    <to>java.util.List</to>
  </difference>
  <difference>
    <differenceType>7006</differenceType>
    <className>com/google/cloud/spanner/ForwardingAsyncResultSet</className>
    <method>com.google.common.collect.ImmutableList toList(com.google.common.base.Function)</method>
    <to>java.util.List</to>
  </difference>

  <!-- Adding operation RPCs to InstanceAdminClient. -->
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/InstanceAdminClient</className>
    <method>void cancelOperation(java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/InstanceAdminClient</className>
    <method>com.google.longrunning.Operation getOperation(java.lang.String)</method>
  </difference>
  
  <!-- Fix Partitioned DML timeout settings. -->
  <difference>
    <differenceType>7004</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>com.google.spanner.v1.ResultSet executePartitionedDml(com.google.spanner.v1.ExecuteSqlRequest, java.util.Map, org.threeten.bp.Duration)</method>
  </difference>
  <difference>
    <differenceType>7004</differenceType>
    <className>com/google/cloud/spanner/spi/v1/GapicSpannerRpc</className>
    <method>com.google.spanner.v1.ResultSet executePartitionedDml(com.google.spanner.v1.ExecuteSqlRequest, java.util.Map, org.threeten.bp.Duration)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>com.google.api.gax.retrying.RetrySettings getPartitionedDmlRetrySettings()</method>
  </difference>

  <!-- Streaming PDML -->
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>com.google.api.gax.rpc.ServerStream executeStreamingPartitionedDml(com.google.spanner.v1.ExecuteSqlRequest, java.util.Map, org.threeten.bp.Duration)</method>
  </difference>

  <!-- Add support for NUMERIC data type -->
  <difference>
    <differenceType>7013</differenceType>
    <className>com/google/cloud/spanner/AbstractStructReader</className>
    <method>java.math.BigDecimal getBigDecimalInternal(int)</method>
  </difference>
  <difference>
    <differenceType>7013</differenceType>
    <className>com/google/cloud/spanner/AbstractStructReader</className>
    <method>java.util.List getBigDecimalListInternal(int)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/StructReader</className>
    <method>java.math.BigDecimal getBigDecimal(int)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/StructReader</className>
    <method>java.math.BigDecimal getBigDecimal(java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/StructReader</className>
    <method>java.util.List getBigDecimalList(int)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/StructReader</className>
    <method>java.util.List getBigDecimalList(java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7013</differenceType>
    <className>com/google/cloud/spanner/Value</className>
    <method>java.math.BigDecimal getNumeric()</method>
  </difference>
  <difference>
    <differenceType>7013</differenceType>
    <className>com/google/cloud/spanner/Value</className>
    <method>java.util.List getNumericArray()</method>
  </difference>

  <!-- Async Connection API -->
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/connection/Connection</className>
    <method>com.google.api.core.ApiFuture beginTransactionAsync()</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/connection/Connection</className>
    <method>com.google.api.core.ApiFuture commitAsync()</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/connection/Connection</className>
    <method>com.google.cloud.spanner.connection.AsyncStatementResult executeAsync(com.google.cloud.spanner.Statement)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/connection/Connection</className>
    <method>com.google.api.core.ApiFuture executeBatchUpdateAsync(java.lang.Iterable)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/connection/Connection</className>
    <method>com.google.api.core.ApiFuture executeUpdateAsync(com.google.cloud.spanner.Statement)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/connection/Connection</className>
    <method>com.google.api.core.ApiFuture rollbackAsync()</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/connection/Connection</className>
    <method>com.google.api.core.ApiFuture runBatchAsync()</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/connection/Connection</className>
    <method>com.google.api.core.ApiFuture writeAsync(com.google.cloud.spanner.Mutation)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/connection/Connection</className>
    <method>com.google.api.core.ApiFuture writeAsync(java.lang.Iterable)</method>
  </difference>
  <difference>
    <differenceType>7004</differenceType>
    <className>com/google/cloud/spanner/ResultSets</className>
    <method>com.google.cloud.spanner.AsyncResultSet toAsyncResultSet(com.google.cloud.spanner.ResultSet, com.google.api.gax.core.ExecutorProvider)</method>
  </difference>

  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/AsyncTransactionManager</className>
    <method>com.google.api.core.ApiFuture closeAsync()</method>
  </difference>

  <!-- Write with options API -->
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseClient</className>
    <method>com.google.cloud.spanner.CommitResponse writeWithOptions(java.lang.Iterable, com.google.cloud.spanner.Options$TransactionOption[])</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseClient</className>
    <method>com.google.cloud.spanner.CommitResponse writeAtLeastOnceWithOptions(java.lang.Iterable, com.google.cloud.spanner.Options$TransactionOption[])</method>
  </difference>

  <!-- Note: The following change for the LazySpannerInitializer.initialize() method must be specified twice, both with return type java.lang.Object and with com.google.cloud.spanner.Spanner. -->
  <difference>
    <differenceType>7009</differenceType>
    <className>com/google/cloud/spanner/LazySpannerInitializer</className>
    <method>com.google.cloud.spanner.Spanner initialize()</method>
  </difference>
  <difference>
    <differenceType>7009</differenceType>
    <className>com/google/cloud/spanner/LazySpannerInitializer</className>
    <method>java.lang.Object initialize()</method>
  </difference>
  <difference>
    <differenceType>7009</differenceType>
    <className>com/google/cloud/spanner/AbstractLazyInitializer</className>
    <method>java.lang.Object initialize()</method>
  </difference>

  <!-- TransactionOptions and UpdateOptions -->
  <difference>
    <differenceType>7004</differenceType>
    <className>com/google/cloud/spanner/DatabaseClient</className>
    <method>long executePartitionedUpdate(com.google.cloud.spanner.Statement)</method>
  </difference>
  <difference>
    <differenceType>7004</differenceType>
    <className>com/google/cloud/spanner/DatabaseClient</className>
    <method>com.google.cloud.spanner.TransactionRunner readWriteTransaction()</method>
  </difference>
  <difference>
    <differenceType>7004</differenceType>
    <className>com/google/cloud/spanner/DatabaseClient</className>
    <method>com.google.cloud.spanner.AsyncRunner runAsync()</method>
  </difference>
  <difference>
    <differenceType>7004</differenceType>
    <className>com/google/cloud/spanner/DatabaseClient</className>
    <method>com.google.cloud.spanner.TransactionManager transactionManager()</method>
  </difference>
  <difference>
    <differenceType>7004</differenceType>
    <className>com/google/cloud/spanner/DatabaseClient</className>
    <method>com.google.cloud.spanner.AsyncTransactionManager transactionManagerAsync()</method>
  </difference>
  <difference>
    <differenceType>7004</differenceType>
    <className>com/google/cloud/spanner/TransactionContext</className>
    <method>long[] batchUpdate(java.lang.Iterable)</method>
  </difference>
  <difference>
    <differenceType>7004</differenceType>
    <className>com/google/cloud/spanner/TransactionContext</className>
    <method>com.google.api.core.ApiFuture batchUpdateAsync(java.lang.Iterable)</method>
  </difference>
  <difference>
    <differenceType>7004</differenceType>
    <className>com/google/cloud/spanner/TransactionContext</className>
    <method>long executeUpdate(com.google.cloud.spanner.Statement)</method>
  </difference>
  <difference>
    <differenceType>7004</differenceType>
    <className>com/google/cloud/spanner/TransactionContext</className>
    <method>com.google.api.core.ApiFuture executeUpdateAsync(com.google.cloud.spanner.Statement)</method>
  </difference>

  <!-- Support for CommitStats added -->
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/AsyncTransactionManager</className>
    <method>com.google.api.core.ApiFuture getCommitResponse()</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/AsyncRunner</className>
    <method>com.google.api.core.ApiFuture getCommitResponse()</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/TransactionManager</className>
    <method>com.google.cloud.spanner.CommitResponse getCommitResponse()</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/TransactionRunner</className>
    <method>com.google.cloud.spanner.CommitResponse getCommitResponse()</method>
  </difference>

  <!-- Support for Commit Stats in Connection API -->
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/connection/Connection</className>
    <method>com.google.cloud.spanner.CommitResponse getCommitResponse()</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/connection/Connection</className>
    <method>boolean isReturnCommitStats()</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/connection/Connection</className>
    <method>void setReturnCommitStats(boolean)</method>
  </difference>

  <!-- PITR -->
  <difference>
    <differenceType>7013</differenceType>
    <className>com/google/cloud/spanner/BackupInfo$Builder</className>
    <method>com.google.cloud.spanner.BackupInfo$Builder setVersionTime(com.google.cloud.Timestamp)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.api.gax.longrunning.OperationFuture createBackup(com.google.cloud.spanner.Backup)</method>
  </difference>

  <!-- Support creating encrypted databases -->
  <difference>
    <differenceType>7004</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>com.google.api.gax.longrunning.OperationFuture createDatabase(java.lang.String, java.lang.String, java.lang.Iterable)</method>
  </difference>
  <difference>
    <differenceType>7004</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>com.google.api.gax.longrunning.OperationFuture createBackup(java.lang.String, java.lang.String, com.google.spanner.admin.database.v1.Backup)</method>
  </difference>
  <difference>
    <differenceType>7004</differenceType>
    <className>com/google/cloud/spanner/spi/v1/SpannerRpc</className>
    <method>com.google.api.gax.longrunning.OperationFuture restoreDatabase(java.lang.String, java.lang.String, java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7004</differenceType>
    <className>com/google/cloud/spanner/spi/v1/GapicSpannerRpc</className>
    <method>com.google.api.gax.longrunning.OperationFuture createDatabase(java.lang.String, java.lang.String, java.lang.Iterable)</method>
  </difference>
  <difference>
    <differenceType>7004</differenceType>
    <className>com/google/cloud/spanner/spi/v1/GapicSpannerRpc</className>
    <method>com.google.api.gax.longrunning.OperationFuture createBackup(java.lang.String, java.lang.String, com.google.spanner.admin.database.v1.Backup)</method>
  </difference>
  <difference>
    <differenceType>7004</differenceType>
    <className>com/google/cloud/spanner/spi/v1/GapicSpannerRpc</className>
    <method>com.google.api.gax.longrunning.OperationFuture restoreDatabase(java.lang.String, java.lang.String, java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.api.gax.longrunning.OperationFuture createDatabase(com.google.cloud.spanner.Database, java.lang.Iterable)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.api.gax.longrunning.OperationFuture createBackup(com.google.cloud.spanner.Backup)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.api.gax.longrunning.OperationFuture restoreDatabase(com.google.cloud.spanner.Restore)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.cloud.spanner.Database$Builder newDatabaseBuilder(com.google.cloud.spanner.DatabaseId)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/DatabaseAdminClient</className>
    <method>com.google.cloud.spanner.Restore$Builder newRestoreBuilder(com.google.cloud.spanner.BackupId, com.google.cloud.spanner.DatabaseId)</method>
  </difference>
  <difference>
    <differenceType>7013</differenceType>
    <className>com/google/cloud/spanner/DatabaseInfo$Builder</className>
    <method>com.google.cloud.spanner.DatabaseInfo$Builder setEncryptionConfig(com.google.cloud.spanner.encryption.CustomerManagedEncryption)</method>
  </difference>
  <difference>
    <differenceType>7013</differenceType>
    <className>com/google/cloud/spanner/BackupInfo$Builder</className>
    <method>com.google.cloud.spanner.BackupInfo$Builder setEncryptionConfig(com.google.cloud.spanner.encryption.BackupEncryptionConfig)</method>
  </difference>

  <!-- Connection#closeAsync() -->
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/connection/Connection</className>
    <method>com.google.api.core.ApiFuture closeAsync()</method>
  </difference>

  <!-- Clirr seems to fail for these methods when upgrading to Java 8 -->
  <!-- Adding these to unblock the CI -->
  <!-- FIXME: Remove the methods below once clirr is fixed -->
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/AsyncTransactionManager$CommitTimestampFuture</className>
    <method>java.lang.Object get(long, java.util.concurrent.TimeUnit)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/AsyncTransactionManager$CommitTimestampFuture</className>
    <method>java.lang.Object get()</method>
  </difference>

  <!-- Adds getValue to ResultSet -->
  <!-- These are not breaking changes, since we provide default interface implementation -->
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/StructReader</className>
    <method>com.google.cloud.spanner.Value getValue(int)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/StructReader</className>
    <method>com.google.cloud.spanner.Value getValue(java.lang.String)</method>
  </difference>

  <!-- Adds bufferAsync to DatabaseClient -->
  <!-- These are not breaking changes, since we provide default interface implementation -->
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/TransactionContext</className>
    <method>com.google.api.core.ApiFuture bufferAsync(com.google.cloud.spanner.Mutation)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/TransactionContext</className>
    <method>com.google.api.core.ApiFuture bufferAsync(java.lang.Iterable)</method>
  </difference>

  <!-- Query stats optimiser statistics package -->
  <!-- These are not breaking changes, since we provide default interface implementation -->
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/SpannerOptions$SpannerEnvironment</className>
    <method>java.lang.String getOptimizerStatisticsPackage()</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/connection/Connection</className>
    <method>java.lang.String getOptimizerStatisticsPackage()</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/connection/Connection</className>
    <method>void setOptimizerStatisticsPackage(java.lang.String)</method>
  </difference>

  <!-- Add support for JSON data type -->
  <difference>
    <differenceType>7013</differenceType>
    <className>com/google/cloud/spanner/AbstractStructReader</className>
    <method>java.lang.String getJsonInternal(int)</method>
  </difference>
  <difference>
    <differenceType>7013</differenceType>
    <className>com/google/cloud/spanner/AbstractStructReader</className>
    <method>java.util.List getJsonListInternal(int)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/StructReader</className>
    <method>java.lang.String getJson(int)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/StructReader</className>
    <method>java.lang.String getJson(java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/StructReader</className>
    <method>java.util.List getJsonList(int)</method>
  </difference>
  <difference>
    <differenceType>7012</differenceType>
    <className>com/google/cloud/spanner/StructReader</className>
    <method>java.util.List getJsonList(java.lang.String)</method>
  </difference>
  <difference>
    <differenceType>7013</differenceType>
    <className>com/google/cloud/spanner/Value</className>
    <method>java.lang.String getJson()</method>
  </difference>
  <difference>
    <differenceType>7013</differenceType>
    <className>com/google/cloud/spanner/Value</className>
    <method>java.util.List getJsonArray()</method>
  </difference>

</differences>
