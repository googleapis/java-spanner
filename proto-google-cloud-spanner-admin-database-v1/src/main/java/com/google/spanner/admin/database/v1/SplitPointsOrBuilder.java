/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/spanner/admin/database/v1/spanner_database_admin.proto

// Protobuf Java Version: 3.25.5
package com.google.spanner.admin.database.v1;

public interface SplitPointsOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.spanner.admin.database.v1.SplitPoints)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The table to split.
   * </pre>
   *
   * <code>string table = 1;</code>
   *
   * @return The table.
   */
  java.lang.String getTable();
  /**
   *
   *
   * <pre>
   * The table to split.
   * </pre>
   *
   * <code>string table = 1;</code>
   *
   * @return The bytes for table.
   */
  com.google.protobuf.ByteString getTableBytes();

  /**
   *
   *
   * <pre>
   * The index to split.
   * If specified, the `table` field must refer to the index's base table.
   * </pre>
   *
   * <code>string index = 2;</code>
   *
   * @return The index.
   */
  java.lang.String getIndex();
  /**
   *
   *
   * <pre>
   * The index to split.
   * If specified, the `table` field must refer to the index's base table.
   * </pre>
   *
   * <code>string index = 2;</code>
   *
   * @return The bytes for index.
   */
  com.google.protobuf.ByteString getIndexBytes();

  /**
   *
   *
   * <pre>
   * Required. The list of split keys, i.e., the split boundaries.
   * </pre>
   *
   * <code>
   * repeated .google.spanner.admin.database.v1.SplitPoints.Key keys = 3 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  java.util.List<com.google.spanner.admin.database.v1.SplitPoints.Key> getKeysList();
  /**
   *
   *
   * <pre>
   * Required. The list of split keys, i.e., the split boundaries.
   * </pre>
   *
   * <code>
   * repeated .google.spanner.admin.database.v1.SplitPoints.Key keys = 3 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  com.google.spanner.admin.database.v1.SplitPoints.Key getKeys(int index);
  /**
   *
   *
   * <pre>
   * Required. The list of split keys, i.e., the split boundaries.
   * </pre>
   *
   * <code>
   * repeated .google.spanner.admin.database.v1.SplitPoints.Key keys = 3 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  int getKeysCount();
  /**
   *
   *
   * <pre>
   * Required. The list of split keys, i.e., the split boundaries.
   * </pre>
   *
   * <code>
   * repeated .google.spanner.admin.database.v1.SplitPoints.Key keys = 3 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  java.util.List<? extends com.google.spanner.admin.database.v1.SplitPoints.KeyOrBuilder>
      getKeysOrBuilderList();
  /**
   *
   *
   * <pre>
   * Required. The list of split keys, i.e., the split boundaries.
   * </pre>
   *
   * <code>
   * repeated .google.spanner.admin.database.v1.SplitPoints.Key keys = 3 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  com.google.spanner.admin.database.v1.SplitPoints.KeyOrBuilder getKeysOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * Optional. The expiration timestamp of the split points.
   * A timestamp in the past means immediate expiration.
   * The maximum value can be 30 days in the future.
   * Defaults to 10 days in the future if not specified.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expire_time = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the expireTime field is set.
   */
  boolean hasExpireTime();
  /**
   *
   *
   * <pre>
   * Optional. The expiration timestamp of the split points.
   * A timestamp in the past means immediate expiration.
   * The maximum value can be 30 days in the future.
   * Defaults to 10 days in the future if not specified.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expire_time = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The expireTime.
   */
  com.google.protobuf.Timestamp getExpireTime();
  /**
   *
   *
   * <pre>
   * Optional. The expiration timestamp of the split points.
   * A timestamp in the past means immediate expiration.
   * The maximum value can be 30 days in the future.
   * Defaults to 10 days in the future if not specified.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expire_time = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.protobuf.TimestampOrBuilder getExpireTimeOrBuilder();
}
